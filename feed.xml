<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title type="text">Concept First Blog</title><subtitle type="text">IT consultancy, web development, data analysis and application development</subtitle><id>https://blogs.conceptfirst.com/</id><updated>2022-09-12T11:41:00+01:00</updated><generator>Generator.cs</generator><link rel="self" type="application/atom+xml" href="https://blogs.conceptfirst.com/feed.xml" /><link rel="alternate" type="text/html" href="https://blogs.conceptfirst.com/" /><entry><id>https://blogs.conceptfirst.com/2022/09/12/define-links.html</id><title type="html">Define and Covid-19 links</title><published>2022-09-12T11:41:00+01:00</published><updated>2022-09-12T11:41:00+01:00</updated><author><name>David</name></author><link rel="alternate" type="text/html" title="Define and Covid-19 links" href="https://blogs.conceptfirst.com/2022/09/12/define-links.html" /><content type="html">&lt;p&gt;Covid-19 has been a &lt;strong&gt;busy&lt;/strong&gt; time for us.&lt;/p&gt;
&lt;p&gt;We have been building and maintaining the &lt;a href="https://www.rx-info.co.uk/products/define/"&gt;Define platform&lt;/a&gt; for &lt;a href="https://www.rx-info.co.uk"&gt;Rx-Info&lt;/a&gt; for over 10 years now.  Define sits in the NHS and aggregates medicine data from over 400 hospitals across the UK, allowing them, and the NHS as a whole, to manage their spend, understand their stock position and inform prescribing behaviour.&lt;/p&gt;
&lt;p&gt;&lt;a href="/files/Rx-info-Infographic-2021.pdf"&gt;&lt;img src="/files/Rx-info-Infographic-2021.png" alt="Rx-info-Infographic-2021.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once Covid-19 struck, we had to quickly adapt the system to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Collect the stock position of medicines in every hospital, every day, rather than once a month.&lt;/li&gt;
&lt;li&gt;Build prediction tools that compares stock vs usuage and allows the NHS to see where they would run out of important medicines (e.g. Paralytics needed for people on Ventilators), so stock could be rushed to the right places.&lt;/li&gt;
&lt;li&gt;Collect both stock and batch numbers of Covid-19 vaccines as they were rolled out to the NHS trusts in case side effects or bad batches were discovered.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href="https://www.rx-info.co.uk/news-views/defining-moments-covid-brexit-and-antimicrobial-stewardship/"&gt;HOW TECHNOLOGY HELPED TARGET LIFE-SAVING MEDICINE TO THOSE MOST IN NEED AT THE HEIGHT OF THE COVID PANDEMIC&lt;/a&gt; article goes into more detail on what was delivered, how it helped the NHS, etc. and links to the Richard Hey report, a third party evaluation of the software.&lt;/p&gt;
&lt;p&gt;The stock shortage reporting is also proving very helpful in managing stock shortages caused by Brexit and other problems like the Ukraine war.&lt;/p&gt;
&lt;p&gt;It was a very busy, but exciting, time - it was great to be able to help.&lt;br /&gt;
Thanks go to our other halves supporting us by handling the home schooling whilst we were working too many hours.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2019/06/02/azure-sql.html</id><title type="html">Azure SQL: changing performance and quickly making copies</title><published>2019-06-02T14:29:00+01:00</published><updated>2019-06-02T14:29:00+01:00</updated><author><name>David</name></author><link rel="alternate" type="text/html" title="Azure SQL: changing performance and quickly making copies" href="https://blogs.conceptfirst.com/2019/06/02/azure-sql.html" /><content type="html">&lt;p&gt;Lots of our clients use Azure SQL Server, but not many realise that much of the configuation of a database can be changed using standard T-SQL commands using C#, SSMS, etc. rather than needing to go into the Portal. This also means they can be easily automated.&lt;/p&gt;
&lt;br/&gt;
&lt;h3 id="changing-performance"&gt;Changing Performance&lt;/h3&gt;
&lt;p&gt;For example, it is straight forward to dial the performance of a database up or down using a single command. We often use this to turn databases down, to save money, during evenings and weekends.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;ALTER&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;DATABASE&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;current&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;MODIFY&lt;/span&gt; (SERVICE_OBJECTIVE = &lt;span style="color:#D69D85;"&gt;&amp;#39;P6&amp;#39;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See full docs - &lt;a href="https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql?view=azuresqldb-current#a-check-the-edition-options-and-change-them"&gt;ALTER DATABASE docs&lt;/a&gt;.&lt;/p&gt;
&lt;br/&gt;
&lt;h3 id="copying-a-database"&gt;Copying a database&lt;/h3&gt;
&lt;p&gt;Another version useful feature is the ability to make a copy of a database and mount it under a new name. This is ideal for creating testing or development databases from a copy of a production database.&lt;/p&gt;
&lt;p&gt;Below is an example C# script that I use for refreshing a &lt;code&gt;mydb-dev&lt;/code&gt; database from the production &lt;code&gt;mydb&lt;/code&gt; database. The dev database uses a cheaper / lower powerful instance &lt;code&gt;S0&lt;/code&gt;.  You may need to tweak the &lt;code&gt;CommandTimeout&lt;/code&gt; if the database is particularly large.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;using&lt;/span&gt; (&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; db = &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; SqlConnection(&lt;span style="color:#D69D85;"&gt;&amp;quot;Server=tcp:mydb.windows.net&amp;quot;&lt;/span&gt;))
{
    db.Open();
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; cmd = &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; SqlCommand { Connection = db, CommandTimeout = &lt;span style="color:#B5CEA8;"&gt;180&lt;/span&gt; };

    Console.WriteLine(&lt;span style="color:#D69D85;"&gt;&amp;quot;Making a new copy of the database&amp;quot;&lt;/span&gt;);
    cmd.CommandText = &lt;span style="color:#D69D85;"&gt;&amp;quot;CREATE DATABASE [mydb-dev-copy] AS COPY OF [mydb] ( SERVICE_OBJECTIVE = &amp;#39;S0&amp;#39; )&amp;quot;&lt;/span&gt;;
    cmd.ExecuteNonQuery();

    
    &lt;span style="color:#57A64A;"&gt;// Wait whilst Azure makes the copy, checking the progress&lt;/span&gt;
    cmd.CommandText = &lt;span style="color:#D69D85;"&gt;&amp;quot;SELECT state FROM sys.databases where name = &amp;#39;mydb-dev-copy&amp;#39;&amp;quot;&lt;/span&gt;;
    &lt;span style="color:#569CD6;"&gt;while&lt;/span&gt; (&lt;span style="color:#569CD6;"&gt;true&lt;/span&gt;)
    {
        &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; state = (&lt;span style="color:#569CD6;"&gt;byte&lt;/span&gt;) cmd.ExecuteScalar();
        &lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; (state == &lt;span style="color:#B5CEA8;"&gt;0&lt;/span&gt;) &lt;span style="color:#57A64A;"&gt;// Online&lt;/span&gt;
            &lt;span style="color:#569CD6;"&gt;break&lt;/span&gt;;
        &lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; (state == &lt;span style="color:#B5CEA8;"&gt;7&lt;/span&gt;) &lt;span style="color:#57A64A;"&gt;// Copying&lt;/span&gt;
        {
            System.Threading.Thread.Sleep(TimeSpan.FromSeconds(&lt;span style="color:#B5CEA8;"&gt;5&lt;/span&gt;));
            &lt;span style="color:#569CD6;"&gt;continue&lt;/span&gt;;
        }

        &lt;span style="color:#569CD6;"&gt;throw&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; Exception(&lt;span style="color:#D69D85;"&gt;&amp;quot;Database copy failed: &amp;quot;&lt;/span&gt; + state.ToString());
    }

    Console.WriteLine(&lt;span style="color:#D69D85;"&gt;&amp;quot;Drop the dev database&amp;quot;&lt;/span&gt;);
    cmd.CommandText = &lt;span style="color:#D69D85;"&gt;&amp;quot;DROP DATABASE [mydb-dev]&amp;quot;&lt;/span&gt;;
    cmd.ExecuteNonQuery();

    Console.WriteLine(&lt;span style="color:#D69D85;"&gt;&amp;quot;Rename copy to dev database&amp;quot;&lt;/span&gt;);
    cmd.CommandText = &lt;span style="color:#D69D85;"&gt;&amp;quot;ALTER DATABASE [mydb-dev-copy] MODIFY NAME = [mydb-dev]&amp;quot;&lt;/span&gt;;
    cmd.ExecuteNonQuery();
}

&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><id>https://blogs.conceptfirst.com/2018/12/14/answer-again.html</id><title type="html">Answering the phone, functionally, again</title><published>2018-12-14T08:30:00Z</published><updated>2018-12-14T08:30:00Z</updated><author><name>David</name></author><link rel="alternate" type="text/html" title="Answering the phone, functionally, again" href="https://blogs.conceptfirst.com/2018/12/14/answer-again.html" /><content type="html">&lt;h1 id="f-workflow-for-working-with-twilio"&gt;F# workflow for working with Twilio&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;tl;dr: using workflows and F# agents for request/response APIs, and using history replay for resilence and scalability&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This post is part of the &lt;a href="https://sergeytihon.com/2018/10/22/f-advent-calendar-in-english-2018/"&gt;2018 F# Advent calendar&lt;/a&gt;
blog series done every year by the F# community, and is a follow up to my post from last year, &lt;a href="https://blogs.conceptfirst.com/2017/12/21/answer-the-phone.html"&gt;Answering the phone, functionally&lt;/a&gt; (and probably won't make much sense if you've not read that post).&lt;/p&gt;
&lt;p&gt;Last year I showed an F# computation expression / workflow DSL for handling an automated phone system.
A similar approach would be ideally suited for implementing an &lt;a href="https://developer.amazon.com/alexa-skills-kit"&gt;Alexa Skill&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I was planning to implement the previous workflow in the new serverless &lt;a href="https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview"&gt;Azure Durable Functions&lt;/a&gt;, allowing my santa phone system to run
on the serverless platforms and scale easily.&lt;/p&gt;
&lt;p&gt;However looking at Durable Functions (DFs) in more detail, I came to the conclusion they weren't a good fit for what I was trying to acheive,
so I attempted to shamelessly copy some ideas from DF, in a rush, in an attempt to meet the blog deadline 😄&lt;/p&gt;
&lt;p&gt;Once of the nice things about using a workflow in the first place is it's interpretation is completely decoupled from its logic, so running it using
a different approach didn't require any changes to the core code.&lt;/p&gt;
&lt;h2 id="sidebar-on-alexa-skills"&gt;Sidebar on Alexa skills&lt;/h2&gt;
&lt;p&gt;The code is this article is based on my Twilio integration, but the ideas all translate to Alexa and other similar products.
I setup an example Alexa skill as a learning exercise, designed to encourage my two youngest boys it was time to go to bed.&lt;/p&gt;
&lt;p&gt;The first thing is to register with AWS on their Alexa dev site, setup a new skill, and enter the start words Alexa will recognise
to activate your skill. So in the example below, if I say to Alexa &amp;quot;tell the boys&amp;quot;, this skill will be activated.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/alexaStart.png" alt="Alexa start" /&gt;&lt;/p&gt;
&lt;p&gt;It's then a case of setting up particular &lt;em&gt;intents&lt;/em&gt;, which are the individual features the skill can provide. In this case I've just setup one, allowing the overable
sentance of &amp;quot;tell the boys get ready for bed&amp;quot;.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/alexaWords.png" alt="Alexa setup" /&gt;&lt;/p&gt;
&lt;p&gt;Then just configure the endpoint AWS will call once its recongised a skills+intent combination:&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/alexaEndpoint.png" alt="Alexa api" /&gt;&lt;/p&gt;
&lt;p&gt;A simple F# azure function that tells Alexa to speak a sentance, and then plays comedy sound effect, very straight forward.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
#r &lt;span style="color:#D69D85;"&gt;&amp;quot;System.Net.Http&amp;quot;&lt;/span&gt;
#r &lt;span style="color:#D69D85;"&gt;&amp;quot;Newtonsoft.Json&amp;quot;&lt;/span&gt;

&lt;span style="color:#569CD6;"&gt;open&lt;/span&gt; System.Net
&lt;span style="color:#569CD6;"&gt;open&lt;/span&gt; System.Net.Http
&lt;span style="color:#569CD6;"&gt;open&lt;/span&gt; Newtonsoft.Json

&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; Named = { name: string }
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; OutputSpeech = { ``&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt;``:string; ssml:string }
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; Card = { ``&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt;``:string; title:string; content:string }
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; AlexaResponse = { outputSpeech: OutputSpeech; card: Card }
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; AlexaWrapper = { version: string; response: AlexaResponse }

&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; reply() =
    {
        version = &lt;span style="color:#D69D85;"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;
        response = {
            outputSpeech = {
                ssml = &lt;span style="color:#D69D85;"&gt;&amp;quot;&amp;lt;speak&amp;gt;Adam and Ben can you &amp;lt;emphasis level=&amp;#39;strong&amp;#39;&amp;gt;PLEASE&amp;lt;/emphasis&amp;gt; get ready for bed &amp;lt;audio src=&amp;#39;https://s3.amazonaws.com/ask-soundlibrary/impacts/amzn_sfx_punch_01.mp3&amp;#39;/&amp;gt;&amp;lt;/speak&amp;gt;&amp;quot;&lt;/span&gt;
                ``&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt;`` = &lt;span style="color:#D69D85;"&gt;&amp;quot;SSML&amp;quot;&lt;/span&gt;
            }
            card = {
                title = &lt;span style="color:#D69D85;"&gt;&amp;quot;The House&amp;quot;&lt;/span&gt;
                content = &lt;span style="color:#D69D85;"&gt;&amp;quot;Welcome to trying to control alex and tom&amp;quot;&lt;/span&gt;
                ``&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt;`` = &lt;span style="color:#D69D85;"&gt;&amp;quot;Simple&amp;quot;&lt;/span&gt;
            }
        }
    }

&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; Run(req: HttpRequestMessage, log: TraceWriter) =
    &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; json = JsonConvert.SerializeObject(reply()
    &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; HttpResponseMessage(HttpStatusCode.OK, Content = &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; StringContent(json, System.Text.Encoding.UTF8, &lt;span style="color:#D69D85;"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This was just a simple end-to-end test, Alexa skills can be much more complex with a back and forth (i.e. the sort of things the F# workflow is designed to make easy to write).
The &lt;a href="https://developer.amazon.com/docs/custom-skills/request-and-response-json-reference.html"&gt;API reference&lt;/a&gt; contains all the details.&lt;/p&gt;
&lt;h2 id="quick-intro-to-durable-functions"&gt;Quick intro to Durable Functions&lt;/h2&gt;
&lt;p&gt;Durable functions are an add-onto Azure functions, a way of dealing with State in a serverless environment. The idea is to have long lived 'orchestration' durable functions which can
handle complex patterns of logic that can persist over minutes/hours/days (another common term for this would be 'Sagas').&lt;/p&gt;
&lt;p&gt;They can kick off other pieces of logic in normal serverless functions, and
then go to sleep (i.e. no cost) until the other functions are finished. They can do sequences of calls, parallel calls, or waiting on 'events' from other systems.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/fan-out-fan-in.png" alt="DF fan pattern" /&gt;&lt;/p&gt;
&lt;p&gt;The take advantage of the async/await features of both C# and Javascript to make the code very linear and readable dispite being highly asychronous, e.g.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;public&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;static&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;async&lt;/span&gt; Task&amp;lt;Status&amp;gt; Run(DurableOrchestrationContext ctx)
{
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; x = &lt;span style="color:#569CD6;"&gt;await&lt;/span&gt; ctx.CallActivityAsync&amp;lt;Record&amp;gt;(&lt;span style="color:#D69D85;"&gt;&amp;quot;LoadFromDatabase&amp;quot;&lt;/span&gt;);
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; y = &lt;span style="color:#569CD6;"&gt;await&lt;/span&gt; ctx.CallActivityAsync&amp;lt;Answer&amp;gt;(&lt;span style="color:#D69D85;"&gt;&amp;quot;RunCalculations&amp;quot;&lt;/span&gt;, x);
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; z = &lt;span style="color:#569CD6;"&gt;await&lt;/span&gt; ctx.CallActivityAsync&amp;lt;RecordID&amp;gt;(&lt;span style="color:#D69D85;"&gt;&amp;quot;SaveToDatabase&amp;quot;&lt;/span&gt;, y);
    &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt;  &lt;span style="color:#569CD6;"&gt;await&lt;/span&gt; ctx.CallActivityAsync&amp;lt;Status&amp;gt;(&lt;span style="color:#D69D85;"&gt;&amp;quot;EmailReport&amp;quot;&lt;/span&gt;, z);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or the equivalent in Javascript:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;const&lt;/span&gt; df = require(&lt;span style="color:#D69D85;"&gt;&amp;quot;durable-functions&amp;quot;&lt;/span&gt;);

module.exports = df.orchestrator(&lt;span style="color:#569CD6;"&gt;function&lt;/span&gt;*(ctx) {
    &lt;span style="color:#569CD6;"&gt;const&lt;/span&gt; x = yield ctx.df.callActivity(&lt;span style="color:#D69D85;"&gt;&amp;quot;LoadFromDatabase&amp;quot;&lt;/span&gt;);
    &lt;span style="color:#569CD6;"&gt;const&lt;/span&gt; y = yield ctx.df.callActivity(&lt;span style="color:#D69D85;"&gt;&amp;quot;RunCalculations&amp;quot;&lt;/span&gt;, x);
    &lt;span style="color:#569CD6;"&gt;const&lt;/span&gt; z = yield ctx.df.callActivity(&lt;span style="color:#D69D85;"&gt;&amp;quot;SaveToDatabase&amp;quot;&lt;/span&gt;, y);
    &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; yield ctx.df.callActivity(&lt;span style="color:#D69D85;"&gt;&amp;quot;EmailReport&amp;quot;&lt;/span&gt;, z);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The clever thing to me is how durable functions are resurrected after being put to sleep via await (i.e. being shut down half way through their lifetime).&lt;/p&gt;
&lt;p&gt;Behind the scenes the system persists any communication between a durable function and the outside world, and when it needs to wake up,
rather than having frozen and stored the progress of the durable function itself, it uses an event source approach to resurrect the durable function back to where it was.
The previous calls it did are played back to the code of the DF to get it back to the status it was in before the sleep. The events are stored in Azure Storage, in a JSON format.
The nice thing is that the 'resurrected' DF could be on a completely different machine on a different contintent, it makes no difference (which is obviously
essential for serverless) and also nicely solves any reliability concerns from servers falling over etc.&lt;/p&gt;
&lt;p&gt;In the examples above, whilst the DF is awaiting on &lt;code&gt;await ctx.CallActivityAsync&amp;lt;object&amp;gt;(&amp;quot;RunCalculations&amp;quot;, x);&lt;/code&gt;
it will be shut down completely.  Once the &lt;code&gt;RunCalculations&lt;/code&gt; has returns a result, the DF will be recreated, replayed (so the result of &lt;code&gt;await ctx.CallActivityAsync&amp;lt;object&amp;gt;(&amp;quot;LoadFromDatabase&amp;quot;)&lt;/code&gt; will come from the event store, not actually a real call to the database), and then the code will carry on with the new result from &lt;code&gt;RunCalculations&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It is also possible to tweak the time a DF stays alive before sleeping, for keeping 'hot' durable functions for a certain period where you expect the awaits to only be for a short period of time, for efficiency.&lt;/p&gt;
&lt;p&gt;A key thing for this to work, is that the workflow be deterministic. Replays have to get back to exactly the same spot, so the code must be written to be always do the same
thing given the same data (so even &lt;code&gt;DataTime.Now&lt;/code&gt; is out ) - see &lt;a href="https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-checkpointing-and-replay#orchestrator-code-constraints"&gt;details on ensuring determinism&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="why-dfs-didnt-work-for-voice-on-twilio"&gt;Why DFs didn't work for voice on Twilio&lt;/h2&gt;
&lt;p&gt;I started off planning to implement the workflows inside Durable Functions, but during the implementation, and after some serious head scratching,
I came to the conclusion what I was trying to acheive wasn't going to work.&lt;/p&gt;
&lt;p&gt;The essential problem is that durable functions are designed to handle async requests and responses (by piggybacking on Task),
and not the syncronous request/response we need for Twilio (or Alexa) 🙁&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/sad_buddy.jpg" alt="Sad Buddy Elf" /&gt;&lt;/p&gt;
&lt;p&gt;Although you can kick off a new durable function from an incoming HTTP request, or send new events to it once it is running,
you can't really get any sync response back from the DF until it has completed. You can &lt;a href="https://github.com/Azure/azure-functions-durable-extension/issues/539#issuecomment-444984446"&gt;fake it&lt;/a&gt; using the DF custom status feature
and busy waiting, but for the moment it's a bit of a hack, and the busy wait is going to increase your costs, so not really a good fit
for what I was exploring.&lt;/p&gt;
&lt;p&gt;There is already &lt;a href="https://github.com/Azure/azure-functions-durable-extension/issues/22"&gt;discussion on the github repo&lt;/a&gt; about changes to support this, but
this is really moving the DFs toward a full agent system, which is a much more complex undertaking, and Microsoft already has two other
agent frameworks ( &lt;a href="https://github.com/dotnet/orleans"&gt;Orleans&lt;/a&gt; and &lt;a href="https://github.com/Microsoft/service-fabric"&gt;Service Fabric&lt;/a&gt; ) already.&lt;/p&gt;
&lt;p&gt;Durable Functions would have been ideal if sync resposnes weren't required, a workflow based on SMS messages would have been straight forward,
in fact Microsoft even have &lt;a href="https://docs.microsoft.com/en-gb/azure/azure-functions/durable/durable-functions-monitor"&gt;an example&lt;/a&gt; using SMS via Twilio.&lt;/p&gt;
&lt;h2 id="switchboard-and-callhandlers"&gt;Switchboard and CallHandlers&lt;/h2&gt;
&lt;p&gt;I've decided to host the individual calls using F# Agents ( aka &lt;code&gt;MessageBoxProcessor&lt;/code&gt; ), called &lt;em&gt;CallHandlers&lt;/em&gt;. Agents scale well by using the underlying Task Pool,
they manage state using tail recursive async calls, and the avoid threading issues by handling messages in strict order.&lt;/p&gt;
&lt;p&gt;I've also created a &lt;em&gt;Switchboard&lt;/em&gt; agent which has the responsiblity of tracking in-progress calls.  In the code, the agents are wrapped in objects to hide away the
implementation.&lt;/p&gt;
&lt;p&gt;The diagram below shows the calls from incoming HTTP calls (in blue), being routed through the switchboard and then processed by the individual call handlers (in yellow).&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/Switchboard.png" alt="Switchboard model" /&gt;&lt;/p&gt;
&lt;p&gt;One interesting feature is how the switchboard can pass the &lt;code&gt;AsyncReplyChannel&lt;/code&gt; straight through to the call handler. I copied this idea from &lt;a href="https://twitter.com/davidglassborow/status/780361776089145345"&gt;@theburningmonk&lt;/a&gt; from his NDC 2016 talk discussing a similar approach.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/yan.png" alt="NDC talk" /&gt;&lt;/p&gt;
&lt;p&gt;In the sequence diagram below, you can see the CallHandler responding directly to the HttpEndpoint, not needing to go via the Switchboard.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/call_mem.png" alt="seqeuence in memory" /&gt;&lt;/p&gt;
&lt;p&gt;The logic of the switchboard is captured by the messages the agent handles. It is generic, requiring the call ids be comparable, and that the
handles support disposal.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#608B4E;"&gt;///&lt;/span&gt;&lt;span style="color:#608B4E;"&gt; The protocol definiton for interacting with the switch board agent.&lt;/span&gt;
&lt;span style="color:#608B4E;"&gt;///&lt;/span&gt;&lt;span style="color:#608B4E;"&gt; This is essentially a thread safe Map&amp;lt;&amp;#39;Id,&amp;#39;Handlers&amp;gt;&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; SwitchBoardProtocol&amp;lt;&lt;span style="color:#D69D85;"&gt;&amp;#39;Id,&amp;#39;&lt;/span&gt;Handler &lt;span style="color:#569CD6;"&gt;when&lt;/span&gt; &lt;span style="color:#D69D85;"&gt;&amp;#39;Id: comparison and &amp;#39;&lt;/span&gt;Handler :&amp;gt; IDisposable&amp;gt; =
| StoreHandler     &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; id:&lt;span style="color:#D69D85;"&gt;&amp;#39;Id * handler:&amp;#39;&lt;/span&gt;Handler
| FindHandler      &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; id:&lt;span style="color:#D69D85;"&gt;&amp;#39;Id * reply: AsyncReplyChannel&amp;lt;&amp;#39;&lt;/span&gt;Handler option&amp;gt;
| RemoveHandler    &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; id:&amp;#39;Id    &lt;span style="color:#57A64A;"&gt;// This is also responsible for disposing the object&lt;/span&gt;
| RequestOfHandler &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; id:&lt;span style="color:#D69D85;"&gt;&amp;#39;Id * toRun:( Result&amp;lt;&amp;#39;&lt;/span&gt;Handler,string&amp;gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; unit )
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The last message, &lt;code&gt;RequestOfHandler&lt;/code&gt; is there to support directly passing a message through to the call handler.&lt;/p&gt;
&lt;p&gt;The call handler messages are even simpler:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; CallDetails = {  NumberFrom:string; NumberTo:String; CallAt: DateTime }

&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; CallResponse =
| CompletedResponse &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; PhoneCommand
| IntermediateResponse &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; PhoneCommand

&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; CallHandlerMessages =
| CallStarted &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; CallDetails * AsyncReplyChannel&amp;lt;CallResponse&amp;gt;
| DigitsProvided &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; string * AsyncReplyChannel&amp;lt;CallResponse&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a call comes in, we post a &lt;code&gt;CallStarted&lt;/code&gt; to the call handler and return the response. Any further calls are digits being entered, and they are
sent to the call handler via &lt;code&gt;DigitsProvided&lt;/code&gt; repeatadly until the call handler lets us know the call has finished via a CompletedResponse.&lt;/p&gt;
&lt;h2 id="copying-the-state-replay"&gt;Copying the state replay&lt;/h2&gt;
&lt;p&gt;This all works well, so the next step is to consider how would we do if we had lots of simulationous calls, but big delays between key presses etc. ?
The current setup would have all the 'in flight' call handling programs in memory. If they are complex, or have lots of memory in scope, we might
run out of resources.&lt;/p&gt;
&lt;p&gt;So instead I've attempted to copy the approach of saving state to allow in progress calls to be resurrected and 'replayed'.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/call_file.png" alt="sequence with replay" /&gt;&lt;/p&gt;
&lt;p&gt;To do this, we add a new message type to the call handler, allowing peristence to be requested.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;internal&lt;/span&gt; CallHandlerMessages =
...
| PersistToStorage
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also need to make sure the state is captured as we go, so the internal state of the call handler agent
contains the current program (if we have one, we may not if we've just started or we have been shutdown),
as well as a list of all digits we have been sent by the caller.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;internal&lt;/span&gt; CallHandlerState = {
    CurrentProgram: (string &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; Workflow.CallHandlingProgram) option
    Digits: string list
} &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;static&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;member&lt;/span&gt; NotStarted = { CurrentProgram = None; Digits = [] }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then the code required to replay history is suprisingly easy.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; resurrectViaReplay digitHistory =
    &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; replayError _ = Workflow.Complete (Workflow.Hangup &lt;span style="color:#D69D85;"&gt;&amp;quot;Failed to replay history&amp;quot;&lt;/span&gt;)
    &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; state = CallHandlerState.NotStarted
    &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;rec&lt;/span&gt; stepDigits keyPresses program =
        &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; keyPresses &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
        | []         &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; program
        | key::other &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; (stepProgram ignore state (program key)).CurrentProgram &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
                        | None &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; replayError
                        | Some s &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; stepDigits other s
    &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; nextStep = &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; (stepProgram ignore state &amp;lt;| getProgram()).CurrentProgram &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
                    | None &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; replayError
                    | Some p &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; p
    nextStep |&amp;gt; stepDigits (List.rev digitHistory)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note we need to detect replay errors where we have a situation like the phone program says it has completed
but we still have key presses to replay, this is likely caused by non-determinism in the system.&lt;/p&gt;
&lt;p&gt;With this in place, the main agent loop for the call handler is changed to wait a certain period of time
for a message. With no message arriving, or when explicitly told to persist, we release the call handling program.
Next time it is required, it is then recreated via &lt;code&gt;resurrectViaReplay&lt;/code&gt;.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;rec&lt;/span&gt; messageLoop (state: CallHandlerState) = &lt;span style="color:#569CD6;"&gt;async&lt;/span&gt; {
    &lt;span style="color:#569CD6;"&gt;let!&lt;/span&gt; message = inbox.TryReceive(int persistAfter.TotalMilliseconds)
    &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; newState =
        &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; message &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
        | Some (CallStarted(caller)) &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;
            stepProgram caller.Reply state &amp;lt;| getProgram()
        | Some (DigitsProvided(digits,caller)) &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; program = &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; state.CurrentProgram &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
                          | Some program &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; program
                          | None   &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;       resurrectViaReplay state.Digits
            &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; state&amp;#39; = stepProgram caller.Reply state &amp;lt;| program(digits)
            { state&lt;span style="color:#D69D85;"&gt;&amp;#39; with Digits = digits :: state&amp;#39;&lt;/span&gt;.Digits }  &lt;span style="color:#57A64A;"&gt;// store for later replay if needed&lt;/span&gt;
        | Some PersistToStorage | None &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span style="color:#57A64A;"&gt;// production version: persist state.Digits to secure storage&lt;/span&gt;
            { state &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt; CurrentProgram = None  }
    &lt;span style="color:#569CD6;"&gt;return!&lt;/span&gt; messageLoop newState }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just like durable functions, we need to be careful on non-deterministic calls, with all messages coming into the CallHandler from the outside world needing to be stored.
In pure languages like Haskell this would be enforcable in the type system, but in F# we just need to be careful.&lt;/p&gt;
&lt;p&gt;Currently the call handling programs don't need to do any other calls (e.g. to lookup a database record), but if that is required, we need to make sure we
add a feature to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pass into the call program a standard wrapper around non-determistic calls, that memorises the response (in the same way we cache the digits pressed by the user)&lt;/li&gt;
&lt;li&gt;Have the memorised response persisted into the state&lt;/li&gt;
&lt;li&gt;Use it in replay like we do the digits&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was hoping to add this in, but have run out of time unfortunately, but it's straight forward to do.&lt;/p&gt;
&lt;p&gt;The full code, with some basic tests, can be found on &lt;a href="https://gist.github.com/davidglassborow/9c55a628718f15df25b9fca2dbc803f0"&gt;Github&lt;/a&gt; or &lt;a href="/files/phone-agents.fsx"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="future-improvements"&gt;Future improvements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Have the switchboard be able to store all its own state as well, and restart from complete shutdown.&lt;/li&gt;
&lt;li&gt;Have a similar timeout features in CallHandler that the caller has gone away, and clears up fully, removing itself from the Switchboard.&lt;/li&gt;
&lt;li&gt;Add a workflow and primatives for Alexa skills.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="conclusions"&gt;Conclusions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;F# Workflows are great for modelling request/response systems like Alexa and Twilio (and you can use them in &lt;a href="https://github.com/kthompson/Actress"&gt;C# too&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Agents are very useful for encapsulating pieces of seperate state, and their features around waiting for a new message with a timeout is also very useful&lt;/li&gt;
&lt;li&gt;Pure functions make it possible to efficiently 'rehydrate' state via event sourcing of data, making it easy to have systems that can be shut down and started back up,
without losing our nice linear programming model.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy Christmas again !&lt;/p&gt;
&lt;h2 id="references-and-more-information"&gt;References and more information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.amazon.com/alexa-skills-kit"&gt;Amazon Alexa Skills&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.amazon.com/docs/custom-skills/request-and-response-json-reference.html"&gt;Amazon Alexa API reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview"&gt;Azure Durable Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vimeo.com/171942750"&gt;Yan Cui's talk on Actors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="/files/santa-on-phone.gif" alt="santa" /&gt;&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2018/05/18/azure-535.html</id><title type="html">Taking the Azure Architecture Certification 70-535</title><published>2018-05-18T12:18:00+01:00</published><updated>2018-05-18T12:18:00+01:00</updated><author><name>David</name></author><link rel="alternate" type="text/html" title="Taking the Azure Architecture Certification 70-535" href="https://blogs.conceptfirst.com/2018/05/18/azure-535.html" /><content type="html">&lt;p&gt;A couple of weeks ago I took and passed the Microsoft Azure Architecure exam, 70-535.&lt;br /&gt;
At work we are doing more and more Azure development and I wanted the qualification to make sure I knew all off Microsoft's offering on Azure ( and there are a well over a hundred of &lt;a href="https://azure.microsoft.com/en-us/services/"&gt;them&lt;/a&gt; ).&lt;/p&gt;
&lt;p&gt;It's a hard exam and I found little advice on the Internet, so here are some notes for others taking the same exam.&lt;/p&gt;
&lt;p&gt;My revision approach was:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Watch Udemy video on by Scott Duffy&lt;/li&gt;
&lt;li&gt;Random youtube videos on particular subjects I was struggling with ( e.g. Azure B2B vs B2C )&lt;/li&gt;
&lt;li&gt;MeasureUp Test exams&lt;/li&gt;
&lt;li&gt;Lots of playing around in Azure itself, creating resources, trying things out ( essential in my opinion )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'd guess my total time studying was about 80 hours.&lt;/p&gt;
&lt;p&gt;Be aware the exam used to be called 70-534. It was recently updated at the start of 2018 and got the number bumped to 70-535.&lt;/p&gt;
&lt;h2 id="udemy-videos"&gt;Udemy videos&lt;/h2&gt;
&lt;p&gt;I purchased access to Scott's 535 &lt;a href="https://www.udemy.com/70534-azure/"&gt;videos&lt;/a&gt; for about £20, which was pretty good for 13+ hours of content.
Generally I found it good, although with the fast pace of Azure he's obviously challenged with keeping it all up to date.&lt;/p&gt;
&lt;p&gt;Scott seems to add new content all the time, so if you go this route, make sure you check for updates regularly.&lt;/p&gt;
&lt;h2 id="test-exams"&gt;Test exams&lt;/h2&gt;
&lt;p&gt;I purchased the exam through Microsoft with a voucher for a month's access to the MeasureUp.com test exams.&lt;/p&gt;
&lt;p&gt;I found multiple issues with their test exams:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Questions that ask you for two answers, but then mark you down for not answering 3&lt;/li&gt;
&lt;li&gt;Answers that were plain wrong ! (e.g. It claims Web Jobs can't use Powershell scripts)&lt;/li&gt;
&lt;li&gt;Questions and Answers with inconsistent data (e.g. different IP addresses between the question and correct answer)&lt;/li&gt;
&lt;li&gt;Lots of pretty outdated questions around things like Cloud Roles&lt;/li&gt;
&lt;li&gt;Links to blog articles from 2014 that are hopelessly out of date&lt;/li&gt;
&lt;li&gt;Versions of services that don't exist anymore, or are depreciated (lots of the old AD sync stuff)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Even logging on was problematic !&lt;/p&gt;
&lt;p&gt;Very frustrating, but in the end I was glad I used them, just to get use to the format of the questions, and the explanations of the answers are reasonable good.  Just double check anything that doesn't ring true !&lt;/p&gt;
&lt;h2 id="on-the-day"&gt;On the day&lt;/h2&gt;
&lt;p&gt;One thing to get into the habit of: don't think of the questions as you would in real-life with all the complex requirements and tradeoffs, think what is the correct answer given the very minimal info in the question they have given you.&lt;/p&gt;
&lt;p&gt;This took me a while, but you just need
to answer how Microsoft want you to answer, not necessarily what you would do in a real situation.&lt;/p&gt;
&lt;p&gt;The exam was 2.5 hours, but I finished within 1.5.  Be aware some questions allow you to go back and review, but some do not.&lt;/p&gt;
&lt;p&gt;I'm not allowed to go into details on any of the questions, but here are the subjects that I remember coming up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Security Centre, Security Policies (lots of security and encryption questions)&lt;/li&gt;
&lt;li&gt;Cognitive services&lt;/li&gt;
&lt;li&gt;CosmoDB&lt;/li&gt;
&lt;li&gt;On prem to Azure networking&lt;/li&gt;
&lt;li&gt;Azure storage&lt;/li&gt;
&lt;li&gt;Search&lt;/li&gt;
&lt;li&gt;Service Levels of Redis&lt;/li&gt;
&lt;li&gt;Routers ( Traffic Manager, Load Balancer, Application Gateway )&lt;/li&gt;
&lt;li&gt;Data factory, Logic apps, Function apps&lt;/li&gt;
&lt;li&gt;Batch&lt;/li&gt;
&lt;li&gt;AD authorisation&lt;/li&gt;
&lt;li&gt;Web jobs&lt;/li&gt;
&lt;li&gt;Queue types and which to use - &lt;a href="https://azure.microsoft.com/en-gb/blog/events-data-points-and-messages-choosing-the-right-azure-messaging-service-for-your-data/"&gt;read this&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don't remember many questions of the following (but your mileage may vary):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sql Server (except TDE)&lt;/li&gt;
&lt;li&gt;VM types&lt;/li&gt;
&lt;li&gt;API management&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Good luck !&lt;/p&gt;
&lt;p&gt;Reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/learning/exam-70-535.aspx"&gt;Microsoft Exam 70-535&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/70534-azure/"&gt;Udemy 70-535 Architecting Microsoft Azure Solutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.measureup.com/Architecting-Microsoft-Azure-Solutions-P6642.aspx"&gt;Measure test exam&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2018/01/18/core-docker.html</id><title type="html">C# on Linux, in Docker</title><published>2018-01-18T19:01:00Z</published><updated>2018-01-18T19:01:00Z</updated><author><name>David</name></author><link rel="alternate" type="text/html" title="C# on Linux, in Docker" href="https://blogs.conceptfirst.com/2018/01/18/core-docker.html" /><content type="html">&lt;p&gt;C# is going through a somewhat of a renaissance at the moment, largely driven
by the release of the open source, cross platform version .NET Core.&lt;/p&gt;
&lt;p&gt;We do a lot of C# development, and we can now write code that will run on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;macOS&lt;/li&gt;
&lt;li&gt;iOS, tvOS, watchOS&lt;/li&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;li&gt;Unity, Hololens&lt;/li&gt;
&lt;li&gt;Aws, Azure and Google Cloud&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All from the same codebase :-)&lt;/p&gt;
&lt;p&gt;We run a lot of our internal services on a dedicated Linux server, which up until now has contained lots of bespoke Ruby (mostly Rails) code.
With C# now working perfectly on Linux, I am migrating some of the code over to
C# (or F#  like our &lt;a href="/2017/12/21/answer-the-phone.html"&gt;phone system&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Ruby is great for quick prototyping, and some of the open-source services like
&lt;a href="http://gitlab.org/"&gt;Gitlab&lt;/a&gt; are amazing, but I do find dynamic langauges harder to maintain over time, than I do with static languages like C#.&lt;/p&gt;
&lt;p&gt;We also use &lt;a href="http://docker.org/"&gt;Docker&lt;/a&gt; on out Linux box to keep all the services seperated and easy to migrate to other hosts, so it makes sense to do the same for the C# &amp;amp; F# code.&lt;/p&gt;
&lt;p&gt;The first thing to do is set up a &lt;code&gt;docker-compose.yml&lt;/code&gt; definition of the service. This tells docker
what image to use (the microsoft/dotnet core image), which port to open (we use Apache2 as a reverse proxy to terminate SSL), and where the files are on the disk.&lt;/p&gt;
&lt;p&gt;In this example we are exposing the docker container on port 9993 (which is what Apache will proxy to), and it will link this to port 5000 in the container.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;phonesNet:
  restart: always
  image: microsoft/dotnet:2-sdk
  ports:
    - &amp;quot;127.0.0.1:9993:5000&amp;quot;
  entrypoint: /asp_site/dockerRun
  volumes:
  - /home/david/Phones/files:/asp_site
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next key step is to tell docker how to run the container. The docker compose file above tells
docker that the &lt;code&gt;dockerRun&lt;/code&gt; file is what should be run (the &lt;code&gt;entrypoint&lt;/code&gt; setting).&lt;/p&gt;
&lt;p&gt;That file looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;#!/usr/bin/env bash

cd /asp_site/phonesNet
export ASPNETCORE_URLS=http://+:5000
export ASPNETCORE_ENVIRONMENT=Production
dotnet restore
dotnet run --no-launch-profile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The key things to be aware of are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use of &lt;code&gt;ASPNETCORE_&lt;/code&gt; environmental variables to choose the URL, and which environment to use (and hence which appsettings.json file to use)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dotnet restore&lt;/code&gt; to download all required nuget packages (which will be cached after the first run)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--no-launch-profile&lt;/code&gt; when running the site. If you don't do this, the launch settings file from Visual Studio will be used, and the enviromental variables above ignored.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've had great success with running .NET like this, but it did take me a while to setup correctly (especially the launch profile bit), so hopefully this helps other people running dotnet on Linux.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Viva La Renaissance&lt;/em&gt; !&lt;/p&gt;
&lt;p&gt;Reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/microsoft/dotnet/"&gt;.NET core docker images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-run?tabs=netcore2x"&gt;dotnet command reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/hosting?tabs=aspnetcore2x"&gt;.NET hosting enviromental variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2017/12/21/answer-the-phone.html</id><title type="html">Answering the phone, functionally</title><published>2017-12-21T06:30:00Z</published><updated>2017-12-21T06:30:00Z</updated><author><name>David</name></author><link rel="alternate" type="text/html" title="Answering the phone, functionally" href="https://blogs.conceptfirst.com/2017/12/21/answer-the-phone.html" /><content type="html">&lt;h1 id="f-workflow-for-working-with-twilio"&gt;F# workflow for working with Twilio&lt;/h1&gt;
&lt;p&gt;This post is part of the &lt;a href="https://sergeytihon.com/2017/10/22/f-advent-calendar-in-english-2017/"&gt;2017 F# Advent calendar&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lammy the elf is frustrated.  He's constantly interupted by the phone when trying to get on with his work,
and Santa isn't the most tolerent this time of year, there is a &lt;strong&gt;lot&lt;/strong&gt; to be done.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/elf.jpg" alt="happy elf" /&gt;&lt;/p&gt;
&lt;p&gt;As well as being a semi-magical creature and full time toy maker, Lammy likes to code in his spare time.
He's been using C# for years, and in the past has used &lt;a href="https://www.twilio.com"&gt;Twilio&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="a-brief-introduction-to-twilio"&gt;A brief introduction to Twilio&lt;/h2&gt;
&lt;p&gt;Twilio is a hosted service where you rent a telephone number from them, and when somebody calls (or txts) the number, the Twilio servers
call an API you
provide, and the Twilio software will do what you tell it to do (e.g. hangup, forward to another number, take a message, etc).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.twilio.com/learn/twilio-101/what-is-twilio"&gt;What is Twilio and How Does the Twilio API Work?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Basically a phone number is setup with Twilio. When that number is called, the Twilio server calls a configured API via an HTTP POST
with various form variables set like the Call ID, which number is calling, etc.&lt;/p&gt;
&lt;p&gt;The API returns TwiML (which is their XML based language for controlling the call) to tell the server what to do, and it carries it out.&lt;/p&gt;
&lt;p&gt;For example, the following sequence shows a new call to a number, followed by an API requesting a message is said, 2 digits are captured,
and then the call is hung up:&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/sequence.svg" alt="sequence" /&gt;&lt;/p&gt;
&lt;p&gt;The say and gather TwiML looks like:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#808080;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Response&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#808080;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Say&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;Please type in your pin number to proceed&lt;span style="color:#808080;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Say&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#808080;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Gather&lt;/span&gt; &lt;span style="color:#92CAF4;"&gt;input&lt;/span&gt;&lt;span style="color:#808080;"&gt;=&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;dtmf&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;&lt;/span&gt; &lt;span style="color:#92CAF4;"&gt;numDigits&lt;/span&gt;&lt;span style="color:#808080;"&gt;=&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;2&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Gather&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#808080;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Response&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is how a number is configured on the Twilio website, a webhook is configured to make a POST to a given URL.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/api_setup.png" alt="config" /&gt;&lt;/p&gt;
&lt;p&gt;Twilio can do lots of other things as well, including outbound calls, conferencing, calls from the browser and mobile apps, but
Lammy has decided he just wants to implement something simple to save himself time.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/twilio.png" alt="twilio_summary" /&gt;&lt;/p&gt;
&lt;h2 id="the-challenge"&gt;The challenge&lt;/h2&gt;
&lt;p&gt;Lammy decides a Twilio phone system can automate answering the phone, leaving him more time to build toys for the world's children.&lt;/p&gt;
&lt;p&gt;He sits down with an &lt;a href="http://flowchart.js.org/"&gt;online  tool&lt;/a&gt; and quickly whips up a flowchart for the flow he wants
to implement.  He ends up with 3 different things he wants to happen during a call, depending on when the call is, and what the caller would like:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hangup after reading a message that the North Pole is shut.&lt;/li&gt;
&lt;li&gt;Take a message and email to the customer service team for them to followup at a later date.&lt;/li&gt;
&lt;li&gt;Forward the call to one of the 3 customer service departments (outsourced), run out of the South Pole.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="/files/flow.png" alt="flowchart" /&gt;&lt;/p&gt;
&lt;h2 id="workflows"&gt;Workflows&lt;/h2&gt;
&lt;p&gt;Last time Lammy worked with Twilio, he used C#. It worked but he ended up with lots of different functions, and different
API endpoints, and he struggled to understand the logic a week later when reading the code.&lt;/p&gt;
&lt;p&gt;An example of some old C# code is below, with lots of different actions in an MVC site, the logic of the call is unclear:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;

&lt;span style="color:#569CD6;"&gt;public&lt;/span&gt; IActionResult Chosen_Department(&lt;span style="color:#569CD6;"&gt;string&lt;/span&gt; Digits)
{
    &lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; (Digits == &lt;span style="color:#D69D85;"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; || Digits == &lt;span style="color:#D69D85;"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; || Digits == &lt;span style="color:#D69D85;"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)
        &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Logic.TakeMessageAndEmail().xml();
    &lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; (Digits == &lt;span style="color:#D69D85;"&gt;&amp;quot;6&amp;quot;&lt;/span&gt;)
        &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Logic.GetPIN().xml();
    &lt;span style="color:#57A64A;"&gt;// Anything else go back to start&lt;/span&gt;
    &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Logic.GobackToStart().xml();
}

&lt;span style="color:#569CD6;"&gt;public&lt;/span&gt; IActionResult Pin_entered(&lt;span style="color:#569CD6;"&gt;string&lt;/span&gt; Digits)
{
    &lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; (Digits == &lt;span style="color:#D69D85;"&gt;&amp;quot;321&amp;quot;&lt;/span&gt;)
        &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Logic.CallConference( callbackForConference() ).xml();
    &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Logic.GobackToStart().xml();
}

&lt;span style="color:#569CD6;"&gt;public&lt;/span&gt; IActionResult Chosen_Person(&lt;span style="color:#569CD6;"&gt;string&lt;/span&gt; Digits)
{
    &lt;span style="color:#569CD6;"&gt;switch&lt;/span&gt; (Digits)
    {
        &lt;span style="color:#569CD6;"&gt;case&lt;/span&gt; &lt;span style="color:#D69D85;"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;: &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Logic.PhoneElf1().xml();
        &lt;span style="color:#569CD6;"&gt;case&lt;/span&gt; &lt;span style="color:#D69D85;"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;: &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Logic.PhoneElf2().xml();
        &lt;span style="color:#569CD6;"&gt;default&lt;/span&gt;:
                  &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Logic.ListPeople().xml();
    }
}

&lt;span style="color:#57A64A;"&gt;// With an example of the logic calls being:&lt;/span&gt;

&lt;span style="color:#569CD6;"&gt;public&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;static&lt;/span&gt; TwiML ListPeople() =&amp;gt; 
    &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; VoiceResponse().Append(
        &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; Gather(numDigits: &lt;span style="color:#B5CEA8;"&gt;1&lt;/span&gt;, action: action(&lt;span style="color:#D69D85;"&gt;&amp;quot;chosen_person&amp;quot;&lt;/span&gt;), method: HttpMethod.Get).
            Play(sample(&lt;span style="color:#D69D85;"&gt;&amp;quot;TalkToElf1.wav&amp;quot;&lt;/span&gt;)).
            Play(sample(&lt;span style="color:#D69D85;"&gt;&amp;quot;TalkToElf2.wav&amp;quot;&lt;/span&gt;))).
        Redirect(action(&lt;span style="color:#D69D85;"&gt;&amp;quot;new&amp;quot;&lt;/span&gt;), method: HttpMethod.Get);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although he still enjoys C#, he had become increasingly interested in F# over the last couple of years. He's been faithfully
reading &lt;a href="https://fsharpforfunandprofit.com"&gt;F# for fun and profit&lt;/a&gt;, and in particular he has recently been reading about an
advanced F# feature called &lt;a href="https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/computation-expressions"&gt;Computation Expressions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;He knows from a local talk at the NPHUG (North Pole Haskell Usergroup) that &lt;code&gt;Computation Expressions&lt;/code&gt; implement syntactic
sugar for &lt;code&gt;Monoids&lt;/code&gt;, &lt;code&gt;Monads&lt;/code&gt;, &lt;code&gt;MonadPlus&lt;/code&gt; and maybe a couple of others, but he doesn't really know what that means. He does
know that its allows him to interupt the normal flow of statments, so he quickly reads the &lt;a href="https://fsharpforfunandprofit.com/series/computation-expressions.html"&gt;Computation Expression Series&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="starting-off"&gt;Starting off&lt;/h2&gt;
&lt;p&gt;His first step is to model what he want's the Twilio server to do for him. He quickly defines a union type:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#608B4E;"&gt;///&lt;/span&gt;&lt;span style="color:#608B4E;"&gt; Represents what we will tell the Twilio phone system to do&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; PhoneCommand =
&lt;span style="color:#608B4E;"&gt;///&lt;/span&gt;&lt;span style="color:#608B4E;"&gt; Connect the caller to a given phone queue&lt;/span&gt;
| ConnectToQueue &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; queueName:string
&lt;span style="color:#608B4E;"&gt;///&lt;/span&gt;&lt;span style="color:#608B4E;"&gt; Say the message, and then hangup&lt;/span&gt;
| Hangup &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; msg:string
&lt;span style="color:#608B4E;"&gt;///&lt;/span&gt;&lt;span style="color:#608B4E;"&gt; Say the message, then record the caller&amp;#39;s message&lt;/span&gt;
| TakeMessage &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; msg:string
&lt;span style="color:#608B4E;"&gt;///&lt;/span&gt;&lt;span style="color:#608B4E;"&gt; Say the message, then wait for a user to input a given number of key presses&lt;/span&gt;
| WaitForKeypresses &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; msg:string * numberDigits:int
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The next step is to think how to model the flow of information.
The easiest situation is when a single message is returned and then the call is complete.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; CallHandlingProgram =
| Complete &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; result:PhoneCommand
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Given this, he builds a very basic computation expression (or workflow as he prefers to call it), that
can return a single message to the Twilio call. It has a single definition, Return, which describes how to
wrap up the return.  In this case its is wrapped in the &lt;code&gt;CallHandlingProgram.Complete&lt;/code&gt; case.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; CallBuilder() =
    &lt;span style="color:#57A64A;"&gt;// No Zero method - we must return something&lt;/span&gt;
    &lt;span style="color:#569CD6;"&gt;member&lt;/span&gt; this.Return(a:PhoneCommand) = Complete a
&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; call = &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; CallBuilder()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this in place, the first couple of steps can be written.
Note at this stage, he is just returning the PhoneCommand cases defined above. Later they will be converted into XML.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; takeCall fromNumber toNumber (now:System.DateTime) =
    call {
        &lt;span style="color:#57A64A;"&gt;// 1. If the call is on Christmas Eve or later, leave a message saying we are busy&lt;/span&gt;
        &lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; now.DayOfYear &amp;gt;= 358 &lt;span style="color:#569CD6;"&gt;then&lt;/span&gt;        &lt;span style="color:#57A64A;"&gt;// 358 is the 24th of December&lt;/span&gt;
            &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Hangup &lt;span style="color:#D69D85;"&gt;&amp;quot;I&amp;#39;m sorry, we are now shut for the rest of year, happy holidays !&amp;quot;&lt;/span&gt;
        &lt;span style="color:#569CD6;"&gt;else&lt;/span&gt;
            &lt;span style="color:#57A64A;"&gt;// 2. If the call is out of hours, request a message is left and email it to ourselves&lt;/span&gt;
            &lt;span style="color:#57A64A;"&gt;// Elves are 9 to 5 workers&lt;/span&gt;
            &lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; now.Hour &amp;lt;= 8 || now.Hour &amp;gt;= 17 &lt;span style="color:#569CD6;"&gt;then&lt;/span&gt;
                &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; TakeMessage &lt;span style="color:#D69D85;"&gt;&amp;quot;I&amp;#39;m sorry, we are closed for the day, please leave a message and we&amp;#39;ll get back to you asap&amp;quot;&lt;/span&gt;
            &lt;span style="color:#569CD6;"&gt;else&lt;/span&gt;
                &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Hangup &lt;span style="color:#D69D85;"&gt;&amp;quot;Sorry, the rest of the program hasn&amp;#39;t been written yet&amp;quot;&lt;/span&gt;
    }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lammy is happy with this, he can write a nice DSL that describes what he wants to do, but it hasn't given him anything he couldn't
do in C#.  What about the interaction ? how to get the user to press keys, and his workflow get called back to continue on ?&lt;/p&gt;
&lt;p&gt;He realises he needs to extend his concept of a CallHandlingProgram.&lt;/p&gt;
&lt;p&gt;He knows that ultimately Twilio will be calling back over HTTP, so the input is going to be some sort of string.
So he represents the callback by extending the &lt;code&gt;CallHandlingProgram&lt;/code&gt; - adding another case, which is where the
workflow is in progress, waiting for more information from the Twilio server.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; CallHandlingProgram =
| Complete &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; result:PhoneCommand
| InProgress &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; result:PhoneCommand * nextStep: (string &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; CallHandlingProgram)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;InProgress&lt;/code&gt; case captures the command to send back to the server, &lt;strong&gt;and&lt;/strong&gt; the function to carry on with once an answer arrives.&lt;/p&gt;
&lt;h2 id="using-bind-to-handle-inputs"&gt;Using bind to handle inputs&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;Bind&lt;/code&gt; call allows the behaviour of the workflow to be altered. Given:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
    &lt;span style="color:#569CD6;"&gt;let!&lt;/span&gt; something = producer()
    ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The compiler will convert it into a call something like&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
    CallBuilder.Bind( producer(), &lt;span style="color:#569CD6;"&gt;fun&lt;/span&gt; something &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; ... )
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives Lammy the opportunity to suspend the computation, send the response to Twilio, and run it later when Twilio calls back.
He creates a new type to capture that more information is needed.  The &lt;code&gt;bind&lt;/code&gt; uses this to wrap the response now, and the future callback
into the new InProgress case. He adds a helper to wrap the &lt;code&gt;WaitForKeypresses&lt;/code&gt; into &lt;code&gt;NeedsKey&lt;/code&gt;.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;

&lt;span style="color:#608B4E;"&gt;///&lt;/span&gt;&lt;span style="color:#608B4E;"&gt; Use internally for any step where we need to wait for a string&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; Internal =
| NeedKey &lt;span style="color:#569CD6;"&gt;of&lt;/span&gt; PhoneCommand

&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; CallBuilder() =
    &lt;span style="color:#57A64A;"&gt;// No zero - we must return something&lt;/span&gt;
    &lt;span style="color:#569CD6;"&gt;member&lt;/span&gt; this.Return(a:PhoneCommand) = Complete a
    &lt;span style="color:#569CD6;"&gt;member&lt;/span&gt; this.Bind(NeedKey(x),f) =
            InProgress(x, &lt;span style="color:#569CD6;"&gt;fun&lt;/span&gt; x &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; f(x) )

&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; waitForKeypress msg num = 
    WaitForKeypresses(msg,num) |&amp;gt; NeedKey

&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is all that is needed to write code like:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
call {   
        &lt;span style="color:#569CD6;"&gt;let!&lt;/span&gt; keyPress = waitForKeypress &lt;span style="color:#D69D85;"&gt;&amp;quot;Please press 1 to discuss naughty lists, press 2 to discuss a reindeer malfunction, press 3 for any other enquires&amp;quot;&lt;/span&gt; 1
        &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; keyPress &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
        | &lt;span style="color:#D69D85;"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; ConnectToQueue &lt;span style="color:#D69D85;"&gt;&amp;quot;Naughty children&amp;quot;&lt;/span&gt;
        | &lt;span style="color:#D69D85;"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; ConnectToQueue &lt;span style="color:#D69D85;"&gt;&amp;quot;Naughty raindeer&amp;quot;&lt;/span&gt;
        | &lt;span style="color:#D69D85;"&gt;&amp;quot;3&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; ConnectToQueue &lt;span style="color:#D69D85;"&gt;&amp;quot;Account enquires&amp;quot;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will define a call program that returns WaitForKeypress message back to Twilio, and wrap up the match code in a future
function, all put into a &lt;code&gt;InProgress&lt;/code&gt; wrapper.&lt;/p&gt;
&lt;p&gt;There is one last simple step required. The flowchart needs to repeatadly read a message to the user and wait for a key press, so looping is needed.
In a functional program, this often means recursion. By adding a &lt;code&gt;ReturnFrom&lt;/code&gt; method to the builder, the &lt;code&gt;call&lt;/code&gt; workflow can call itself using &lt;code&gt;return!&lt;/code&gt;:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; CallBuilder() =
    &lt;span style="color:#57A64A;"&gt;// No zero - we must return something&lt;/span&gt;
    &lt;span style="color:#569CD6;"&gt;member&lt;/span&gt; this.Return(a:PhoneCommand) = Complete a
    &lt;span style="color:#569CD6;"&gt;member&lt;/span&gt; this.ReturnFrom(a) = a
    &lt;span style="color:#569CD6;"&gt;member&lt;/span&gt; this.Bind(NeedKey(x),f) =
            InProgress(x, &lt;span style="color:#569CD6;"&gt;fun&lt;/span&gt; x &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; f(x) )

&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; listQueuesAndWaitForResponse() =
    &lt;span style="color:#57A64A;"&gt;// We make this recursive so we can try a number of times before bugging out&lt;/span&gt;
    &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;rec&lt;/span&gt; handleQueues retries = call {   
        &lt;span style="color:#569CD6;"&gt;let!&lt;/span&gt; keyPress = waitForKeypress &lt;span style="color:#D69D85;"&gt;&amp;quot;Please press 1 to discuss naughty lists, press 2 to discuss a reindeer malfunction, press 3 for any other enquires&amp;quot;&lt;/span&gt; 1
        &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; keyPress &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
        | &lt;span style="color:#D69D85;"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; ConnectToQueue &lt;span style="color:#D69D85;"&gt;&amp;quot;Naughty children&amp;quot;&lt;/span&gt;
        | &lt;span style="color:#D69D85;"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; ConnectToQueue &lt;span style="color:#D69D85;"&gt;&amp;quot;Naughty raindeer&amp;quot;&lt;/span&gt;
        | &lt;span style="color:#D69D85;"&gt;&amp;quot;3&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; ConnectToQueue &lt;span style="color:#D69D85;"&gt;&amp;quot;Account enquires&amp;quot;&lt;/span&gt;
        | _   &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; 
            &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; retries &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;            
            | i &lt;span style="color:#569CD6;"&gt;when&lt;/span&gt; i &amp;gt;= 3 &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Hangup &lt;span style="color:#D69D85;"&gt;&amp;quot;Sorry, key not recognised&amp;quot;&lt;/span&gt;
            | _             &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return!&lt;/span&gt; handleQueues (retries+1)
    }
    handleQueues 0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note the addition of a counter so the code can give up after a certain number of times asking the caller to press a key.&lt;/p&gt;
&lt;h2 id="interpreting-the-callhandlingprogram"&gt;Interpreting the CallHandlingProgram&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;call&lt;/code&gt; computation expression will now build everything that is needed, a recursive &lt;code&gt;CallHandlingProgram&lt;/code&gt; that describes
the process of handling a call. What is needed now is to &lt;em&gt;run&lt;/em&gt; his final call handling program:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; listQueuesAndWaitForResponse() =
    &lt;span style="color:#57A64A;"&gt;// We make this recursive so we can try a number of times before bugging out&lt;/span&gt;
    &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;rec&lt;/span&gt; handleQueues retries = call {   
        &lt;span style="color:#569CD6;"&gt;let!&lt;/span&gt; keyPress = waitForKeypress &lt;span style="color:#D69D85;"&gt;&amp;quot;Please press 1 to discuss naughty lists, press 2 to discuss a reindeer malfunction, press 3 for any other enquires&amp;quot;&lt;/span&gt; 1
        &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; keyPress &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
        | &lt;span style="color:#D69D85;"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; ConnectToQueue &lt;span style="color:#D69D85;"&gt;&amp;quot;Naughty children&amp;quot;&lt;/span&gt;
        | &lt;span style="color:#D69D85;"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; ConnectToQueue &lt;span style="color:#D69D85;"&gt;&amp;quot;Naughty raindeer&amp;quot;&lt;/span&gt;
        | &lt;span style="color:#D69D85;"&gt;&amp;quot;3&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; ConnectToQueue &lt;span style="color:#D69D85;"&gt;&amp;quot;Account enquires&amp;quot;&lt;/span&gt;
        | _   &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; 
            &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; retries &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;            
            | i &lt;span style="color:#569CD6;"&gt;when&lt;/span&gt; i &amp;gt;= 3 &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Hangup &lt;span style="color:#D69D85;"&gt;&amp;quot;Sorry, key not recognised&amp;quot;&lt;/span&gt;
            | _             &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return!&lt;/span&gt; handleQueues (retries+1)
    }
    handleQueues 0


&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; takeCall fromNumber toNumber (now:System.DateTime) =
    call {
        &lt;span style="color:#57A64A;"&gt;// 1. If the call is on Christmas Eve or later, leave a message saying we are busy&lt;/span&gt;
        &lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; now.DayOfYear &amp;gt;= 358 &lt;span style="color:#569CD6;"&gt;then&lt;/span&gt;        &lt;span style="color:#57A64A;"&gt;// 358 is the 24th of December&lt;/span&gt;
            &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Hangup &lt;span style="color:#D69D85;"&gt;&amp;quot;I&amp;#39;m sorry, we are now shut for the rest of year, happy holidays !&amp;quot;&lt;/span&gt;
        &lt;span style="color:#569CD6;"&gt;else&lt;/span&gt;

            &lt;span style="color:#57A64A;"&gt;// 2. If the call is out of hours, request a message is left and email it to ourselves&lt;/span&gt;
            &lt;span style="color:#57A64A;"&gt;// Elves are 9 to 5 workers&lt;/span&gt;
            &lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; now.Hour &amp;lt;= 8 || now.Hour &amp;gt;= 17 &lt;span style="color:#569CD6;"&gt;then&lt;/span&gt;
                &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; TakeMessage &lt;span style="color:#D69D85;"&gt;&amp;quot;I&amp;#39;m sorry, we are closed for the day, please leave a message and we&amp;#39;ll get back to you asap&amp;quot;&lt;/span&gt;
            &lt;span style="color:#569CD6;"&gt;else&lt;/span&gt;

                &lt;span style="color:#57A64A;"&gt;// 3. Offer to talk to elves, or take a mesasge&lt;/span&gt;
                &lt;span style="color:#569CD6;"&gt;let!&lt;/span&gt; keyPress = waitForKeypress &lt;span style="color:#D69D85;"&gt;&amp;quot;Please press 1 to talk to one of our elves, or 2 to leave us a message&amp;quot;&lt;/span&gt; 1
                &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; keyPress &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;                
                | &lt;span style="color:#D69D85;"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return!&lt;/span&gt; listQueuesAndWaitForResponse()
                | &lt;span style="color:#D69D85;"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; TakeMessage &lt;span style="color:#D69D85;"&gt;&amp;quot;Please leave your message after the beep&amp;quot;&lt;/span&gt;
                &lt;span style="color:#57A64A;"&gt;// Strictly here we should repeadly read the message using recursion, but for conciseness just hangup&lt;/span&gt;
                | _   &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Hangup &lt;span style="color:#D69D85;"&gt;&amp;quot;Happy christmas!&amp;quot;&lt;/span&gt;   
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lammy whips out a quick test, writing a small harness that takes a call program, and a list of key presses, and runs the
workflow, listing out progress and what is returns at each step:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;rec&lt;/span&gt; runIt listOfKeyPresses csr =
    &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; csr &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
    | Complete(x)        &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; 
        printfn &lt;span style="color:#D69D85;"&gt;&amp;quot;Complete: %A&amp;quot;&lt;/span&gt; x
    | InProgress(x,next) &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; 
        printfn &lt;span style="color:#D69D85;"&gt;&amp;quot;Stepped: %A&amp;quot;&lt;/span&gt; x
        &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; listOfKeyPresses &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
        | [] &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; 
            failwith &lt;span style="color:#D69D85;"&gt;&amp;quot;Run out of input keys&amp;quot;&lt;/span&gt;
        | keysPressed::futureKeys &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;
            printfn &lt;span style="color:#D69D85;"&gt;&amp;quot;key = %s&amp;quot;&lt;/span&gt; keysPressed
            runIt futureKeys (next keysPressed)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lammy tries out the different scenarios to make sure everything is working as expected:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
takeCall &lt;span style="color:#D69D85;"&gt;&amp;quot;123&amp;quot;&lt;/span&gt; &lt;span style="color:#D69D85;"&gt;&amp;quot;456&amp;quot;&lt;/span&gt; (DateTime(2017,12,24)) |&amp;gt; runIt [ ]
&lt;span style="color:#57A64A;"&gt;// Complete: Hangup &amp;quot;I&amp;#39;m sorry, we are now shut for the rest of year, happy holidays !&amp;quot;&lt;/span&gt;

takeCall &lt;span style="color:#D69D85;"&gt;&amp;quot;123&amp;quot;&lt;/span&gt; &lt;span style="color:#D69D85;"&gt;&amp;quot;456&amp;quot;&lt;/span&gt; (DateTime(2017,12,22,17,0,0)) |&amp;gt; runIt [ ]
&lt;span style="color:#57A64A;"&gt;// Complete: TakeMessage &amp;quot;I&amp;#39;m sorry, we are closed for the day, please leave a message and we&amp;#39;ll get back to you asap&amp;quot;&lt;/span&gt;

takeCall &lt;span style="color:#D69D85;"&gt;&amp;quot;123&amp;quot;&lt;/span&gt; &lt;span style="color:#D69D85;"&gt;&amp;quot;456&amp;quot;&lt;/span&gt; (DateTime(2017,12,22,12,0,0)) |&amp;gt; runIt [ &lt;span style="color:#D69D85;"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; ]
&lt;span style="color:#57A64A;"&gt;// Stepped: WaitForKeypresses (&amp;quot;Please press 1 to talk to one of our elves, or 2 to leave us a message&amp;quot;,1)&lt;/span&gt;
&lt;span style="color:#57A64A;"&gt;// key = 2&lt;/span&gt;
&lt;span style="color:#57A64A;"&gt;// Complete: TakeMessage &amp;quot;Please leave your message after the beep&amp;quot;&lt;/span&gt;

takeCall &lt;span style="color:#D69D85;"&gt;&amp;quot;123&amp;quot;&lt;/span&gt; &lt;span style="color:#D69D85;"&gt;&amp;quot;456&amp;quot;&lt;/span&gt; (DateTime(2017,12,22,12,0,0)) |&amp;gt; runIt [ &lt;span style="color:#D69D85;"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;; &lt;span style="color:#D69D85;"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;; &lt;span style="color:#D69D85;"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; ]
&lt;span style="color:#57A64A;"&gt;// Stepped: WaitForKeypresses (&amp;quot;Please press 1 to talk to one of our elves, or 2 to leave us a message&amp;quot;,1)&lt;/span&gt;
&lt;span style="color:#57A64A;"&gt;// key = 1&lt;/span&gt;
&lt;span style="color:#57A64A;"&gt;// Stepped: WaitForKeypresses (&amp;quot;Please press 1 to discuss naughty lists, press 2 to discuss a reindeer malfunction, press 3 for any other enquires&amp;quot;, 1)&lt;/span&gt;
&lt;span style="color:#57A64A;"&gt;// key = 4&lt;/span&gt;
&lt;span style="color:#57A64A;"&gt;// Stepped: WaitForKeypresses (&amp;quot;Please press 1 to discuss naughty lists, press 2 to discuss a reindeer malfunction, press 3 for any other enquires&amp;quot;, 1)&lt;/span&gt;
&lt;span style="color:#57A64A;"&gt;// key = 2&lt;/span&gt;
&lt;span style="color:#57A64A;"&gt;// Complete: ConnectToQueue &amp;quot;Naughty raindeer&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="hooking-up-to-the-real-server"&gt;Hooking up to the real server&lt;/h2&gt;
&lt;p&gt;Lammy is now very happy, he just needs to plumb the workflow logic into a server, ready to be called by Twilio.&lt;/p&gt;
&lt;p&gt;The twilio server expects XML, so the first job is to map from nice F# types to yucky OO XML objects, using the Twilio
nuget pacakge, and reading the &lt;a href="https://www.twilio.com/docs/api/twiml/twilio_request"&gt;TwiML docs&lt;/a&gt; gives:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#608B4E;"&gt;///&lt;/span&gt;&lt;span style="color:#608B4E;"&gt; Serialize the TwiML objects to XML string&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; toXml (r:#TwiML) = r.ToString(System.Xml.Linq.SaveOptions.None)

&lt;span style="color:#608B4E;"&gt;///&lt;/span&gt;&lt;span style="color:#608B4E;"&gt; Convert our internal commands into the XML that twilio expects&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; commandToXML url email cmd = 
    &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; say msg = VoiceResponse().Append(Say(msg))

    &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; cmd &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;

    | ConnectToQueue(queueName) &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span style="color:#57A64A;"&gt;// https://www.twilio.com/docs/api/twiml/dial&lt;/span&gt;
        &lt;span style="color:#57A64A;"&gt;// Assume: conferences are used for call queues&lt;/span&gt;
        VoiceResponse().Append( Dial().Append(Conference(queueName)))

    | Hangup(msg) &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span style="color:#57A64A;"&gt;// https://www.twilio.com/docs/api/twiml/hangup&lt;/span&gt;
        say(msg).Append(Twilio.TwiML.Voice.Hangup())

    | TakeMessage(msg) &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span style="color:#57A64A;"&gt;// https://www.twilio.com/labs/twimlets/voicemail&lt;/span&gt;
        say(msg).Append(Redirect( Uri( sprintf &lt;span style="color:#D69D85;"&gt;&amp;quot;http://twimlets.com/voicemail?Transcribe=false&amp;amp;Message=&amp;#39;&amp;#39;&amp;amp;Email=%s&amp;quot;&lt;/span&gt; email )))

    | WaitForKeypresses(msg, numberDigits) &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span style="color:#57A64A;"&gt;// https://www.twilio.com/docs/api/twiml/gather&lt;/span&gt;
        say(msg).Append(Gather(input = Gather.InputEnum.Dtmf, numDigits = Nullable.op_Implicit(numberDigits)))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So for example&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
Hangup &lt;span style="color:#D69D85;"&gt;&amp;quot;I&amp;#39;m sorry, we are now shut for the rest of year, happy holidays !&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;would be converted to the following xml:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#808080;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Response&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#808080;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Say&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;I&amp;#39;m sorry, we are now shut for the rest of year, happy holidays !&lt;span style="color:#808080;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Say&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#808080;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Hangup&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Hangup&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#808080;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#E6E6E6;"&gt;Response&lt;/span&gt;&lt;span style="color:#808080;"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The last step is to run the logic and store the state. Feeling a bit dirty (it is Christmas after all), he uses a mutable Map
that tracks each incoming call (by its &lt;code&gt;CallSid&lt;/code&gt;, the unique id that Twilio for each call), that holds the callbacks when needed.&lt;/p&gt;
&lt;p&gt;He defines a simple &lt;code&gt;handleCall&lt;/code&gt; that takes a url (in case any of the TwiML commands need to set a different return URL),
an email address (needed for taking a message), and a dictionary of key:value pairs. He can then plug this into different server
technologies like &lt;a href="https://suave.io"&gt;Suave&lt;/a&gt;, &lt;a href="https://github.com/giraffe-fsharp/Giraffe"&gt;Giraffe&lt;/a&gt;, or any C# webserver.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;open&lt;/span&gt; System.Collections.Generic

&lt;span style="color:#569CD6;"&gt;type&lt;/span&gt; Callback = DateTime * (string &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; CallHandlingProgram)
&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;mutable&lt;/span&gt; callsInProgress: Map&amp;lt;string,Callback&amp;gt; = Map.empty

&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; removeFromMap callsid = 
    &lt;span style="color:#569CD6;"&gt;fun&lt;/span&gt; _ &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; callsInProgress &amp;lt;- callsInProgress.Remove(callsid) 
    |&amp;gt; lock callsInProgress 

&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; addToMap callsid f =
    &lt;span style="color:#569CD6;"&gt;fun&lt;/span&gt; _ &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt; callsInProgress &amp;lt;- callsInProgress.Add(callsid,(DateTime.Now,f))  
    |&amp;gt; lock callsInProgress 

&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; stepProgram callid inMap step = 
    &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; step &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
    | Complete(response)-&amp;gt;
        &lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; inMap &lt;span style="color:#569CD6;"&gt;then&lt;/span&gt; removeFromMap callid
        response
    | InProgress(response,f) &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;
        addToMap callid f
        response

&lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; handleCall (url:string) (email:string) (parms:Dictionary&amp;lt;string,string&amp;gt;) : VoiceResponse =
    &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; callid = parms.[&lt;span style="color:#D69D85;"&gt;&amp;quot;CALLSID&amp;quot;&lt;/span&gt;]

    &lt;span style="color:#569CD6;"&gt;match&lt;/span&gt; callsInProgress.TryFind callid &lt;span style="color:#569CD6;"&gt;with&lt;/span&gt;
    | None &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span style="color:#57A64A;"&gt;// This is a new call, lets get the workflow to run&lt;/span&gt;
        &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; program = takeCall parms.[&lt;span style="color:#D69D85;"&gt;&amp;quot;FROM&amp;quot;&lt;/span&gt;] parms.[&lt;span style="color:#D69D85;"&gt;&amp;quot;TO&amp;quot;&lt;/span&gt;] System.DateTime.Now
        stepProgram callid &lt;span style="color:#569CD6;"&gt;false&lt;/span&gt; program

    | Some (_,program) &lt;span style="color:#569CD6;"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span style="color:#57A64A;"&gt;// This is a program waiting for a callback, so run it with the digits entered&lt;/span&gt;
        &lt;span style="color:#569CD6;"&gt;let&lt;/span&gt; result = program parms.[&lt;span style="color:#D69D85;"&gt;&amp;quot;DIGITS&amp;quot;&lt;/span&gt;]
        stepProgram callid &lt;span style="color:#569CD6;"&gt;true&lt;/span&gt; result

    |&amp;gt; TwilioResults.commandToXML url email
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lammy happens to have an existing Asp.net core 2 C# site, so he adds the F# as a class library, and uses:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;public&lt;/span&gt; IActionResult Elf()
{
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; details = Request.Method == &lt;span style="color:#D69D85;"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt; ?
        Request.Query.ToDictionary(a =&amp;gt; a.Key.ToUpper(), a =&amp;gt; a.Value.First()) :
        Request.Form.ToDictionary(a =&amp;gt; a.Key.ToUpper(), a =&amp;gt; a.Value.First());
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; url = String.Format(&lt;span style="color:#D69D85;"&gt;&amp;quot;{0}://{1}{2}&amp;quot;&lt;/span&gt;, Request.Scheme, Request.Host, Request.Path);
    &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; Workflow.handleCall(url, &lt;span style="color:#D69D85;"&gt;&amp;quot;lammy@TheNorthPole.mil&amp;quot;&lt;/span&gt;, details).xml();
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;He configures the Twilio number to send webhook calls to the &lt;code&gt;Elf&lt;/code&gt; action url, and he's away !&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/elf_cheer.jpg" alt="elf cheer" /&gt;&lt;/p&gt;
&lt;p&gt;One thing the Lammy worries about, is what happens if a call is half way through and Twilio never calls back. Isn't he
going to be left with a half done workflow, taking up memory.&lt;/p&gt;
&lt;p&gt;He decides that a simple solution is a check once every minute
and clear up any old workflows that haven't been called in the last 5 minutes (the &lt;code&gt;callsInProgress&lt;/code&gt; Map already tracks when the workflow was last run ).&lt;/p&gt;
&lt;p&gt;He plans to write this, and get rid of the mutable state by putting it in an Agent, but runs out of time due to his toy making workload (nothing to do with the Eggnog I can assure you).&lt;/p&gt;
&lt;h2 id="discussion"&gt;Discussion&lt;/h2&gt;
&lt;p&gt;There are lots of ways Lammy could extend this approach:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;He could use an Agent to host each individual call, and the receive with a timeout feature would be ideal for clearing up.&lt;/li&gt;
&lt;li&gt;He could extend the different things we can ask Twilio to do by adding to the &lt;code&gt;PhoneCommand&lt;/code&gt; type.&lt;/li&gt;
&lt;li&gt;He could make the callbacks more type safe, representing other situations like timeouts etc. within the type system.&lt;/li&gt;
&lt;li&gt;He could write a similar workflow for SMS message handling&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Within the workflow itself, he could:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ask the caller to enter a security number and lookup customer info from a database based on the number they are calling from,
validating the caller with the security number&lt;/li&gt;
&lt;li&gt;Use outgoing calls to Twilio to check how many people are currently waiting in queues, and take a message if they are too busy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;etc.&lt;/p&gt;
&lt;p&gt;Writing workflows can be difficult to get your head around at first (it was for Lammy), but they are worth it, allowing you to write
complex logic in a simple way, without needing to wait for the compiler team (e.g. async await in C#).&lt;/p&gt;
&lt;p&gt;The full code can be found &lt;a href="https://gist.github.com/davidglassborow/4f56ab18162a7e9ab3ebb246c1394c7f"&gt;on github&lt;/a&gt; or &lt;a href="/files/elf.fsx"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy Christmas !&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/santa-on-phone.gif" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="references-and-more-information"&gt;References and more information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/computation-expressions"&gt;Microsoft Computation Expression docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fsharpforfunandprofit.com/series/computation-expressions.html"&gt;F# for fun and profit - computation expression series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tomasp.net/academic/papers/computation-zoo/poster-tfp.pdf"&gt;Computation Zoo Poster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tomasp.net/academic/papers/computation-zoo/computation-zoo.pdf"&gt;The F# Computation Expression Zoo paper by Tomas and Don&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fsharp.org/specs/language-spec/4.0/FSharpSpec-4.0-latest.pdf"&gt;FSharp Spec&lt;/a&gt;, section 6.3.10 - Computation Expressions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/40052256/how-does-continuation-monad-really-work"&gt;Stackoverflow: How does continuation monad really work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.sigfpe.com/2008/12/mother-of-all-monads.html"&gt;The Mother of all Monads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.haskellforall.com/2012/12/the-continuation-monad.html"&gt;The Continuation Monad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2017/11/23/recent-presentations.html</id><title type="html">Recent F# and FP Presentations</title><published>2017-11-23T08:29:00Z</published><updated>2017-11-23T08:29:00Z</updated><author><name>David</name></author><link rel="alternate" type="text/html" title="Recent F# and FP Presentations" href="https://blogs.conceptfirst.com/2017/11/23/recent-presentations.html" /><content type="html">&lt;p&gt;I've recently given a few presentations on functional programming, and in particular F#, to a couple of the local
developer meetups:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Exeter-NET-Meetup"&gt;Exeter .NET meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Exeter-Functional-Programmers"&gt;Exeter Functional programmers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The slides are all up on github:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://davidglassborow.github.io/f--for-c-/"&gt;An introduction to F# and FP, especially for C# devs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://davidglassborow.github.io/fsharp-intro/"&gt;Novel FP features in F#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another recent presentation I did was on CQRS and FRP:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://davidglassborow.github.io/cqrs-presentation/"&gt;CQRS, ES and FRP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2017/05/02/Typescript.html</id><title type="html">TypeScript: Setting Up and Settling In</title><published>2017-05-02T10:33:00+01:00</published><updated>2017-05-02T10:33:00+01:00</updated><author><name>Alex Lorimer</name></author><link rel="alternate" type="text/html" title="TypeScript: Setting Up and Settling In" href="https://blogs.conceptfirst.com/2017/05/02/Typescript.html" /><content type="html">&lt;p&gt;Recently weve been considering the move to something &lt;em&gt;better&lt;/em&gt; than JavaScript for front-end development, offering type safety and organisational constructs that more readily support robust code.&lt;/p&gt;
&lt;p&gt;I spent a week exploring TypeScript (a typed &lt;em&gt;superset&lt;/em&gt; of JavaScript) as a candidate in Visual Studio 2015. Here are the issues and fixes I encountered along the way, relating to initial setup, libraries, unanticipated runtime/compile-time behaviour, and general comments (focusing on issues that are not obvious from TypeScript &lt;a href="https://www.typescriptlang.org/docs/tutorial.html"&gt;documentation&lt;/a&gt;).&lt;/p&gt;
&lt;h4 id="tldr"&gt;TL;DR,&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Setup&lt;/strong&gt;
TypeScript is installed by default in VS 2015. However, for non-ASP. NET projects configuration is NOT automated and various elements need to be added to the .csproj file for correct build and debugging behaviour. Integration with ASP. NET projects is easy, and project configuration takes place automatically following the inclusion of the first .ts file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using Library Code&lt;/strong&gt;
Declaration files (typings) are required to consume libraries such as JQuery from TypeScript code (acting like C header files), and these are available for popular libraries via NuGet (DefinitelyTyped is a popular repository). Dependent on configuration, declaration files in a project will be located automatically by IntelliSense.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unanticipated Runtime/Compile-time behaviour&lt;/strong&gt;
Despite the appearance of a statically, strongly typed language like C#, there are still limitations to the compile time warnings that TypeScript provides. The initial appearance of more safety than you are actually getting can result in unanticipated runtime behaviour.&lt;/p&gt;
 &lt;!--more--&gt;
&lt;h4 id="general-comments"&gt;General Comments&lt;/h4&gt;
&lt;p&gt;Generally, in my brief experience, the type safety and IntelliSense features that TypeScript provides out-of-the-box makes coding in TypeScript faster and easier, once you get passed the initial settling in. However, re-writing existing JavaScript code in TypeScript (to make it appear less like &lt;em&gt;traditional&lt;/em&gt;, pre-&lt;a href="http://es6-features.org"&gt;ES6&lt;/a&gt; JavaScript by making use of organisational features like classes) can result in quite a bit of refactoring, and may actually result in slightly more code than the original JavaScript file. For existing, pre-ES6 JavaScript code, it may make more sense (quicker and easier) to minimally refactor the code to the point of passing the compiler type checks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Despite claims that TypeScript is a superset of JavaScript, arguably that isn't really the case, so long as TypeScript compile-time errors are regarded as just that (errors) and not just suggestions. In this case, all JavaScript code is NOT valid typescript code.&lt;/p&gt;
&lt;h4 id="initial-setup"&gt;Initial Setup&lt;/h4&gt;
&lt;p&gt;Steven Fentons &lt;a href="https://www.stevefenton.co.uk/2012/10/Adding-TypeScript-To-An-Existing-Visual-Studio-Project/"&gt;blog post&lt;/a&gt; provides useful information for setting up TypeScript support in a VS project.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are using Visual Studio 2013 and you have the TypeScript Visual Studio Extension installed, youll get the following message as soon as you add a TypeScript file to your project 'Your project has been configured to support TypeScript...'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However, this only seems to be the case in ASP. NET projects. For non-ASP. NET projects, at least in VS 2013+, the following import clause should be included in the .csproj file manually, as the last child of the Project element.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;Import Project=&amp;quot;$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TypeScript\Microsoft.TypeScript.targets&amp;quot; Condition=&amp;quot;Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TypeScript\Microsoft.TypeScript.targets')&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will make a TypeScript Build section accessible through the project properties pane in VS&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; If a .tsconfig file (&lt;a href="https://www.typescriptlang.org/docs/handbook/asp-net-4.html#set-up-the-build"&gt;recommend&lt;/a&gt; in the TypeScript documentation for configuring the transcompiler) is detected somewhere in the project then the TypeScript Build pane becomes disabled. Using a .tsconfig file seems to be buggy in Visual Studio (changes to the .tsconfig do not always seem to be applied and library scripts are not automatically detected - these issues could have been caused by conflicts with the .csproj file, or incorrect .tsconfig formatting), so it seems best to only use the TypeScript Build pane provided by VS.&lt;/p&gt;
&lt;p&gt;Following this manual addition to the .csproj file, navigate to the TypeScript Build pane in the project properties, and perform the following steps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ensure the Configuration dropdown list is set to Debug&lt;/li&gt;
&lt;li&gt;In the Output section tick 'Redirect JavaScript output to directory' and specify the appropriate debug output directory in the provided field &amp;quot;...bin\Debug\Scripts&amp;quot;&lt;/li&gt;
&lt;li&gt;Now set the Configuration dropdown list to Release&lt;/li&gt;
&lt;li&gt;In the Output section tick 'Redirect JavaScript output to directory' and specify the appropriate release output directory in the provided field &amp;quot;...bin\Release\Scripts&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, after making updates to TypeScript files, the TypeScript transcompiler should place the transpiled JavaScript files in the specified locations automatically (this mode dependent behaviour does not seem to be configurable through the use of a .tsconfig file - another reason to use the TypeScript Build pane).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In the TypeScript Build pane, &amp;quot;allow implicit 'any' types&amp;quot; is ticked by default. It seems to be generally more useful to disallow implicit 'any' types to take full advantage of compile time type checking.&lt;/p&gt;
&lt;h4 id="debug-setup"&gt;Debug Setup&lt;/h4&gt;
&lt;p&gt;To enable TypeScript debugging from the browser the TypeScript Build option 'Generate source maps' must be ticked. For ASP. NET projects this seems to be all that is required.&lt;/p&gt;
&lt;p&gt;If not using ASP. NET, the .ts files should also be explicitly included in the output directory (copy if newer). Also, as the build action for .ts files is automatically and necessarily set to 'TypeScriptCompile' (as opposed to 'Content') an MSBuild task must be added to csproj to copy the .ts files to the output directory (see below).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;Target Name=&amp;quot;BeforeBuild&amp;quot;&amp;gt;
    &amp;lt;ItemGroup&amp;gt;
      &amp;lt;Content Include=&amp;quot;@(TypeScriptCompile)&amp;quot; Condition=&amp;quot;'$(TypeScriptSourceMap)' == 'true'&amp;quot; /&amp;gt;
    &amp;lt;/ItemGroup&amp;gt;
  &amp;lt;/Target&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;@(TypeScriptCompile)&lt;/em&gt; refers to a collection of .ts files that will be automatically defined elsewhere in the .csconfig file. &lt;em&gt;$(TypeScriptSourceMap)&lt;/em&gt; is a variable that should be auto generated after making changes in the TypeScript Build project property section, which specifies if source maps are generated (if not TypeScript debugging can't take place anyway, hence the condition in the above MSBuild task).&lt;/p&gt;
&lt;p&gt;Edge appears to not work very well with .ts debugging (it sometimes points to an entirely different location in the TypeScript code), but Chrome seems to do a great job, with far more informative error messages.&lt;/p&gt;
&lt;h4 id="using-library-code-pretty-simple"&gt;Using Library Code (pretty simple)&lt;/h4&gt;
&lt;p&gt;Declaration files (typings) are required to consume libraries such as JQuery from TypeScript code, acting as an interface for the transcompiled JavaScript (implementation details are stripped away in TypeScript declaration files).&lt;/p&gt;
&lt;p&gt;DefinitelyTyped is a popular declaration file repository, providing JQuery and other popular library typings. These can be installed via NuGet.&lt;/p&gt;
&lt;p&gt;So long as a .tsconfig file is not being used, IntelliSense seems to locate TypeScript declaration files automatically without needing to specify a folder.&lt;/p&gt;
&lt;h4 id="unanticipated-runtimecompile-time-behaviour"&gt;Unanticipated Runtime/Compile-time Behaviour&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TypeScript Class Definitions are Not Hoisted&lt;/strong&gt;
In TypeScript it seems valid at compile time to declare/define a class at the bottom of a file, and instantiate and use this object somewhere else in that file (as is the case in C#, Java, etc.).&lt;/p&gt;
&lt;p&gt;However, in the transcompiled JavaScript the 'class' definition is not hoisted to the top of the file, or above where it is used (this is a problem as the transpiled JavaScript equivalent of declaring a TypeScript class is to run an immediately invoked function that returns a constructor). Despite the hoisting of variable declarations taking place when JavaScript is interpreted anyway, the actual initialisation of variables are not. This results in a runtime error &amp;quot;Object doesn't support this action&amp;quot; (in Edge) or &amp;quot;... is not a constructor&amp;quot; (in Chrome).&lt;/p&gt;
&lt;p&gt;Moving class declarations above where the classes are instantiated in TypeScript solves this problem (TypeScript does not warn or prompt about this).&lt;/p&gt;
&lt;p&gt;Also be wary of introducing a race condition, through use of the $(document).ready shorthand, as below.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
$(() =&amp;gt; {
    let myObject = &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; MyClass();
});

&lt;span style="color:#57A64A;"&gt;// MyClass definition goes here&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above code will almost always work, unless the JQuery document.ready callback runs before the MyClass definition. It therefore seems best practice to place TypeScript entry points at the bottom of the file, or at least below all type declarations/definitions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;'this' Keyword Confusion&lt;/strong&gt;
Non-static class members must always be dereferenced with an instance qualifier (instance name, or this, i.e this.property), however care must be taken when using callback or local functions inside TypeScript classes. See the behaviour commented in the code below.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;class&lt;/span&gt; MyClass {
    myProperty: &lt;span style="color:#569CD6;"&gt;number&lt;/span&gt; = 1;

    &lt;span style="color:#569CD6;"&gt;private&lt;/span&gt; helperFunction() {
        console.log(&lt;span style="color:#D69D85;"&gt;&amp;quot;myProperty&amp;quot;&lt;/span&gt;, &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;.myProperty);
    }

    myMethod() {
        &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;.helperFunction(); &lt;span style="color:#57A64A;"&gt;// logs &amp;quot;myProperty 1&amp;quot;&lt;/span&gt;
        localHelperFunction(); &lt;span style="color:#57A64A;"&gt;// logs &amp;quot;myProperty undefined&amp;quot;&lt;/span&gt;

        &lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; localHelperFunction() {
            console.log(&lt;span style="color:#D69D85;"&gt;&amp;quot;myProperty&amp;quot;&lt;/span&gt;, &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;.myProperty);
        }
    }
}
&lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; MyClass().myMethod();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Essentially, 'this' does NOT necessarily refer to the class instance when used inside a class, and instead behaves as in JavaScript, referring to the caller of the function (such as the enclosing method).&lt;/p&gt;
&lt;p&gt;TypeScript does not explicitly warn that the 'this.myProperty' inside the localHelperFunction is not defined (or 'this.blahblah' for that matter, probably due to the fact that properties can be added to JavaScript objects at runtime). Nevertheless, this can be detected by clicking on the myProperty declaration and noticing which 'myProperty' references are highlighted by IntelliSense.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Instance Dereferencing Inconsistencies&lt;/strong&gt;
There are at least three different kinds of syntax for defining the methods of a class, see methods print1, 2, and 3 in the class definition below.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;class&lt;/span&gt; MyClass {
    property: &lt;span style="color:#569CD6;"&gt;string&lt;/span&gt; = &lt;span style="color:#D69D85;"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;;

    print1 = () =&amp;gt; console.log(&lt;span style="color:#D69D85;"&gt;&amp;quot;print1, this.property = &amp;quot;&lt;/span&gt;, &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;.property);

    print2 = &lt;span style="color:#569CD6;"&gt;function&lt;/span&gt;() {
        console.log(&lt;span style="color:#D69D85;"&gt;&amp;quot;print2, this.property = &amp;quot;&lt;/span&gt;, &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;.property);
    }

    print3() {
        console.log(&lt;span style="color:#D69D85;"&gt;&amp;quot;print3, this.property = &amp;quot;&lt;/span&gt;, &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;.property);
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The syntax used with print3 is used by Microsoft in the official TypeScript documentation (in the &lt;a href="https://www.typescriptlang.org/docs/handbook/classes.html"&gt;Classes&lt;/a&gt; section), but the other ways appear to be just as valid (no compile time issues). Instantiating MyClass and calling the print methods directly results in no unexpected behaviour.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
let myClass = &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; MyClass();

console.log(&lt;span style="color:#D69D85;"&gt;&amp;quot;calling print methods directly...&amp;quot;&lt;/span&gt;)
myClass.print1();
myClass.print2();
myClass.print3();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;print1, this.property =  Hello
print2, this.property =  Hello
print3, this.property =  Hello&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However, I encountered an issue when wanting to pass a class' method as an argument to another function. As a simplified example see the code and output below:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
let myClass = &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; MyClass();
let lambda: () =&amp;gt; &lt;span style="color:#569CD6;"&gt;void&lt;/span&gt;;

console.log(&lt;span style="color:#D69D85;"&gt;&amp;quot;calling print methods via a variable (in case you want to pass it around)...&amp;quot;&lt;/span&gt;)

lambda = myClass.print1;
lambda();

lambda = myClass.print2;
lambda();

lambda = myClass.print3;
lambda();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;print1, this.property =  Hello
print2, this.property =  undefined
print3, this.property =  undefined&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While print1 (the method that was defined in MyClass as an 'expression bodied member') works as expected, the other two syntaxes result in what appears to be buggy behaviour.&lt;/p&gt;
&lt;p&gt;I looked into why this was the case. See below for the transcompiled JavaScript for defining MyClass.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; MyClass = (&lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; () {
    &lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; MyClass() {
        &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; _this = &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;;
        &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;.property = &lt;span style="color:#D69D85;"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;;
        &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;.print1 = &lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; () {
            &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; console.log(&lt;span style="color:#D69D85;"&gt;&amp;quot;print1, this.property = &amp;quot;&lt;/span&gt;, _this.property);
        };
        &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;.print2 = &lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; () {
            console.log(&lt;span style="color:#D69D85;"&gt;&amp;quot;print2, this.property = &amp;quot;&lt;/span&gt;, &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;.property);
        };
    }
    MyClass.prototype.print3 = &lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; () {
        console.log(&lt;span style="color:#D69D85;"&gt;&amp;quot;print3, this.property = &amp;quot;&lt;/span&gt;, &lt;span style="color:#569CD6;"&gt;this&lt;/span&gt;.property);
    };
    &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; MyClass;
}());
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem is again related to use of the keyword 'this', which obviously varies based on the calling context.&lt;/p&gt;
&lt;p&gt;You can see that the TypeScript developers have got around the issue by storing a '_this' variable to capture the MyClass context. However '_this' is only dereferenced by print1, while print2 and print3 utilize the 'this' keyword directly.&lt;/p&gt;
&lt;p&gt;When called normally 'this' refers to MyClass. However, when assigned to and invoked via a variable, 'this' ends up referring to the global Window object. This was the context at the time of lambda initialisation. Nevertheless, this inconsistency is actually recognised as proper TypeScript behaviour. The fat arrow syntax/semantics is newer, and is recognised as the means of correctly keeping a class this context (see this TypeScript &lt;a href="https://github.com/Microsoft/TypeScript/wiki/%27this%27-in-TypeScript#user-content-use-instance-functions"&gt;wiki article&lt;/a&gt;).&lt;/p&gt;
&lt;h4 id="tslint"&gt;TSLint&lt;/h4&gt;
&lt;p&gt;I looked into the use of &lt;a href="https://palantir.github.io/tslint/"&gt;TSLint&lt;/a&gt;, hoping that it would provide compile time warnings for some of these issues that are not picked up by the TypeScript compiler. Despite available NuGet packages it appears to be difficult to setup in VS 2015 (at least for non-ASP. NET projects). The easiest way seems to be to install Mads Kristensen's &lt;a href="https://marketplace.visualstudio.com/items?itemName=MadsKristensen.WebAnalyzer"&gt;Web Analyzer extension&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;TSLint picked up on a missing colon in my code and a call to parseInt() without using a radix argument. Other than that, by default TSLint is very strict about always using type definitions, even when the TypeScript compiler and IntelliSense can easily infer the type or when the type is blatantly obvious to developers, i.e.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;let i = 0;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;needs to become&lt;/p&gt;
&lt;p&gt;&lt;code&gt;let i : number = 0;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Despite this, unfortunately TSLint doesn't provide warnings for any of the runtime issues described in this post.&lt;/p&gt;
&lt;h4 id="overall"&gt;Overall&lt;/h4&gt;
&lt;p&gt;As a final thought, the usefulness of compilers such as those for .NET, JAVA, C++ etc. are obviously that they compile down to MSIL or bytecode that isn't readable and can't be coded in by hand, or to different assembly languages based on the target operating system. JavaScript is already a readable language and it is already standardised.&lt;/p&gt;
&lt;p&gt;TypeScript is nice to use, once you get passed the initial settling in, but it is difficult to say whether or not it is worth it in terms of learning the syntax and quirks of constructs such as TypeScript classes. When it comes to refactoring &lt;em&gt;traditional&lt;/em&gt; JavaScript (pre-ES6), it is probably best to view TypeScript as more of a JavaScript code analysis tool with a few preprocessor directives thrown in for specifying types when they aren't initialised inline.&lt;/p&gt;
&lt;p&gt;On the other hand, it is worth noting that there is significant overlap between TypeScript syntax and that of ECMAScript 6 (the latest JavaScript specification), and maybe even future ECMAScript standards (&lt;a href="https://hackernoon.com/is-typescript-worth-the-effort-1b3314e89cc#fe4b"&gt;speculatively&lt;/a&gt;), making the effort likely to be worthwhile in the long run.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2015/04/03/big-data-and-functional-programming.html</id><title type="html">Big data and functional programming</title><published>2015-04-03T10:51:00+01:00</published><updated>2015-04-03T10:51:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Big data and functional programming" href="https://blogs.conceptfirst.com/2015/04/03/big-data-and-functional-programming.html" /><content type="html">&lt;p&gt;As we work more with big data, analysing large swathes of information, we are increasingly looking at functional programming languages for our development.&lt;/p&gt;
&lt;p&gt;Recently I've been learning, and working with, the &lt;a href="http://fsharp.org"&gt;F#&lt;/a&gt; programming language, originally developed by &lt;a href="http://en.wikipedia.org/wiki/Microsoft_Research"&gt;Microsoft Research&lt;/a&gt; and now released as &lt;a href="https://github.com/fsharp/fsharp"&gt;Open Source on github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/microsoft_research.png" alt="MS Research logo" /&gt;&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Functional programming has been on the rise recently, even since the advent of multi-core processors. Traditional OO languages are designed around the concept for mutability, and this makes it especially challenging to write code that is robust when running concurrently.&lt;/p&gt;
&lt;p&gt;Functional programming is, by design, immutable, with message passing and immutable data structures meshing perfectly with highly concurrent computation.&lt;/p&gt;
&lt;p&gt;One of the most interesting thing about Functional Programming is it's links with mathematics, and with higher level of abstractions such as Monoids and Monads (from an area of maths called category theory).&lt;/p&gt;
&lt;p&gt;I'm not going to discuss Monads (they are just &lt;a href="http://stackoverflow.com/questions/3870088/a-monad-is-just-a-monoid-in-the-category-of-endofunctors-whats-the-problem"&gt;monoids in the category of endofunctors&lt;/a&gt; after all ;-), or go into great detail, but monoids are a confusing name for a simple mathematical concept.&lt;/p&gt;
&lt;p&gt;The concept is around breaking a mathematical problem into a definition that allows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Incremental calculation&lt;/em&gt;: you've just calculated the mean of 100 million numbers, and a new one has just been recorded, how do you incrementally update your answer without recalculating everything ?&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Parallel calculation&lt;/em&gt;: divide and conquer is the classic parallel data strategy, how do we split up a big calculation into lots of little ones, run them, and put it all back together.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you can show your calculation is a monoid, you get the advantages listed above for free.&lt;/p&gt;
&lt;p&gt;Sound like this would be helpful in cloud computing at all ?  ;-)&lt;/p&gt;
&lt;p&gt;These formulations have been around forever, they are the basis of &lt;a href="https://en.wikipedia.org/wiki/MapReduce"&gt;Map Reduce&lt;/a&gt;, of distributed databases, etc.&lt;/p&gt;
&lt;p&gt;The interesting thing is when you can capture and operate on them within your programming language. F# is very powerful, and has something called &lt;em&gt;Computation Expressions&lt;/em&gt;. This allows you to extend the language to support home grown monads, monoids, and other different models of computation (e.g. asynchronous processing).&lt;/p&gt;
&lt;p&gt;There is a wonderful library called &lt;a href="http://www.m-brace.net"&gt;MBrace&lt;/a&gt;, which adds computation expressions to F# that allow you to very easily take your computations and move them straight into the cloud.&lt;/p&gt;
&lt;p&gt;For example, if you have a simple function that prints the time you just need to put &lt;code&gt;cloud {}&lt;/code&gt; around the calls and you can run it on azure:&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/mbrace.png" alt="mbrace example" /&gt;.&lt;/p&gt;
&lt;p&gt;The framework will handle all the communication, spinning up servers, exception handling etc. If you're used to 'async/await' in C#, it's like that, but for the cloud.&lt;/p&gt;
&lt;p&gt;Model your data as monoids, and you can suddenly run your data analysis in parallel, without a massive investment in infrastructure and tooling.&lt;/p&gt;
&lt;p&gt;For more examples have a quick look at the &lt;a href="http://www.m-brace.net/programming-model.html"&gt;MBrace programming model&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Their code is opensource on &lt;a href="https://github.com/mbraceproject"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'm loving F#, and with the cloud and big data on the rise, these functional concepts are becoming ever more important.&lt;/p&gt;
&lt;p&gt;Further details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fsharpforfunandprofit.com/series/understanding-monoids.html"&gt;Understanding Monoids&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fsharpforfunandprofit.com/series/computation-expressions.html"&gt;Understanding Computation Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msdn.microsoft.com/en-us/library/dd233182.aspx"&gt;MSDN Computation Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/EirikGeorgeTsarpalis/mbrace-cloud-computing-with-f"&gt;Cloud computing with MBrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fsharp.org/guides/cloud/"&gt;Cloud computing with F# generally - azure, amazon, etc.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2015/03/30/du90.html</id><title type="html">DU90 - Assessing the Quality of Drug Prescribing</title><published>2015-03-30T15:44:00+01:00</published><updated>2015-03-30T15:44:00+01:00</updated><author><name>Dan Jones</name></author><link rel="alternate" type="text/html" title="DU90 - Assessing the Quality of Drug Prescribing" href="https://blogs.conceptfirst.com/2015/03/30/du90.html" /><content type="html">&lt;p&gt;One of the key principles behind the &lt;a href="http://www.rx-info.co.uk/products/define.ashx"&gt;Define Platform&lt;/a&gt; (an ongoing development in our collaboration with &lt;a href="http://www.rx-info.co.uk/"&gt;Rx-info&lt;/a&gt;) is to turn drug prescribing data into information on which financial and clinical decisions can be based.&lt;/p&gt;
 &lt;!--more--&gt;
&lt;p&gt;We've been working on a good example of this recently: using the Drug Utilization 90% (DU90) method to assess and benchmark the quality of drug prescribing across NHS Trusts.  For details of the DU90 method see the &lt;a href="http://www.researchgate.net/profile/Bjorn_Wettermark/publication/13657446_Drug_utilization_90--a_simple_method_for_assessing_the_quality_of_drug_prescribing/links/545b1eb50cf2c46f664394a9.pdf"&gt;1997 paper in Pharmacoepidemiology and Prescription&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/DU90_from_pdf.png" alt="Example of DU90 graphs from pdf" /&gt;&lt;/p&gt;
&lt;p&gt;We've previously used the hundreds of millions of drug prescribing records gathered and stored by the Define Platform to produce graphs of drug product usage:&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/DU100.png" alt="Example of Define report showing drug product usage" /&gt;&lt;/p&gt;
&lt;p&gt;We've now extended the options for these reports to allow NHS professionals to restrict the view to the top 90% of drug usage for their Trusts:&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/DU90.png" alt="Screenshot of DU90 graph in Define" /&gt;&lt;/p&gt;
&lt;p&gt;The historic data available through the Define Platform will also provide a view of how adherence to recommended drugs has changed over time (something we're currently working on).  These recent additions to the Define Platform will provide quick and easy access to this important benchmark allowing health professionals to efficiently target changes in prescribing and clinical practice.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2015/03/06/antimicrobial-homogeneity.html</id><title type="html">Benchmarking Antibiotic Homogeneity Index using the Rx-info Define Platform</title><published>2015-03-06T15:21:00Z</published><updated>2015-03-06T15:21:00Z</updated><author><name>Dan Jones</name></author><link rel="alternate" type="text/html" title="Benchmarking Antibiotic Homogeneity Index using the Rx-info Define Platform" href="https://blogs.conceptfirst.com/2015/03/06/antimicrobial-homogeneity.html" /><content type="html">&lt;p&gt;Through our ongoing collaboration with &lt;a href="http://www.rx-info.co.uk/"&gt;Rx-info&lt;/a&gt; and our continued development of the &lt;a href="http://www.rx-info.co.uk/products/define.ashx"&gt;Define Platform&lt;/a&gt; we've recently been involved in an exciting area of antibiotic research within the NHS.  Consultants at the &lt;a href="http://www.leedsth.nhs.uk/research/"&gt;Leeds Teaching Hospitals NHS Trust&lt;/a&gt; and researchers at the &lt;a href="http://www.leeds.ac.uk/research-and-innovation"&gt;University of Leeds&lt;/a&gt; have been exploring whether wider diversity in antibiotic use could stabalise and maybe even reduce antimicrobial resistance.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;The &lt;a href="http://jac.oxfordjournals.org/content/57/6/1197.full"&gt;Sandiumunge paper from 2006&lt;/a&gt; proposes a &amp;quot;Antimicrobial Homogeneity Index&amp;quot; (AHI) to quantify the degree of antibiotic homogeneity through the use of a modified version of the &lt;a href="http://www.le.ac.uk/biology/gat/virtualfc/Stats/peterson.htm"&gt;Peterson Homogeneity Index&lt;/a&gt;.  Our part of this project was to develop a method for calculating the AHI for NHS Trusts using the 1/3 of a trillion prescription records held in the Define system.&lt;/p&gt;
&lt;p&gt;The resulting reports now provide the NHS with a real time picture of the AHI across the whole country, and a view of the historic AHI and how it has changed over time:&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/Antimicrobial_Homogeneity.png" alt="Screenshot of AHI in Define" /&gt;&lt;/p&gt;
&lt;p&gt;These reports are an important part of the bigger picture and may help to build a case for new standard practices for reducing microbial resistance.  Combined with the results of other antimicrobial research projects and further insights from the Define platform we are hoping to see positive results soon.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2015/03/05/software-conservatives-and-liberals.html</id><title type="html">Software conservatives and liberals</title><published>2015-03-05T14:03:00Z</published><updated>2015-03-05T14:03:00Z</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Software conservatives and liberals" href="https://blogs.conceptfirst.com/2015/03/05/software-conservatives-and-liberals.html" /><content type="html">&lt;p&gt;I ran across a great article again, one I originally read six month ago, written by Steve Yegge (Googlier, used to work at Amazon, outspoken about many design topics), and remembered how great it was:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://plus.google.com/110981030061712822816/posts/KaSKeg4vQtz"&gt;His original post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://plus.google.com/110981030061712822816/posts/iuRbQe6EoiK"&gt;The followup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I won't ruin the article for you, but I think this is a very valuable way to look at your style of software, and to take this into account when choosing work for customers. You may end up working in a way that wouldn't be your first choice, but at least being aware of divergent outlooks can warn you about where there is likely to be disagreement and push back on design choices.&lt;/p&gt;
&lt;p&gt;If you like those posts, most of his other posts are definitely worth reading, I especially liked &lt;a href="http://steve-yegge.blogspot.co.uk/2006/03/execution-in-kingdom-of-nouns.html"&gt;execution in the kingdom of the nonus&lt;/a&gt;.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2015/02/11/big-data-lessons.html</id><title type="html">Big data challenges</title><published>2015-02-11T12:01:00Z</published><updated>2015-02-11T12:01:00Z</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Big data challenges" href="https://blogs.conceptfirst.com/2015/02/11/big-data-lessons.html" /><content type="html">&lt;p&gt;Following on from my article about working with Azure: &lt;a href="/blog/2014/10/15/azure-lessons/"&gt;Azure Lessons&lt;/a&gt;, here are some of the lessons I've learnt recently working with &lt;em&gt;Big Data&lt;/em&gt; and cloud computing.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Cloud_computing.svg/400px-Cloud_computing.svg.png" alt="CloudComputingImage" /&gt;&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;We've been working on various projects for clients (I can't give too many details for reasons of commercial confidentality), with large amounts of data.  As I expect is the same for a lot of developers these days, we are all getting involved in Big Data.  One of our projects has involved Telemetry data from Scada systems, and in this instance the challenge has been providing real-time views of lots of fast  changing data.  In another project around Health Care, we've been writing systems looking for patterns in data, where the data size is into the hundreds of millions.&lt;/p&gt;
&lt;p&gt;So in order of importance:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You'll spend 10 times longer that you plan on cleaning your data.&lt;/li&gt;
&lt;li&gt;Confidentially vs Cloud Computing&lt;/li&gt;
&lt;li&gt;Normalisation for the win&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="cleaning-data"&gt;Cleaning data&lt;/h2&gt;
&lt;p&gt;The issue crops up again and again in general software development, Machine Learning, Data Analysis, and science in general. Getting data cleaned up from the noisy, messy real world, is complicated, time consuming and very frustrating.&lt;/p&gt;
&lt;p&gt;Really nothing has changed, it's just when you’re dealing with billions of records the impact becomes more and more profound. The choices of how you categories data in those uncertain situations can significantly impact your analysis, your stats and your results.  Its like the &lt;a href="https://en.wikipedia.org/wiki/Law_of_large_numbers"&gt;law of large numbers&lt;/a&gt;, unlikely problems quickly become significant at scale.&lt;/p&gt;
&lt;p&gt;At the moment, I don't have any good answers for this, apart from being aware up front of the issue, and the time commitment that needs to be made. In the long run I'm hoping as data collection gets better (i.e. more apps, less Excel spreadsheets), the issue will become more manageable.&lt;/p&gt;
&lt;h2 id="confidentiality"&gt;Confidentiality&lt;/h2&gt;
&lt;p&gt;The advantages of cloud computing are many including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On demand provision, only paying for what you need&lt;/li&gt;
&lt;li&gt;Reduction of spend on maintenance and support of your own hardware&lt;/li&gt;
&lt;li&gt;Economies of scale so providers can keep prices low&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We've been involved in various cloud and data centre projects ( Amazon Web Services, Azure, data centres with Sky Television, CRM hosting with the &lt;a href="http://www.channelregister.co.uk/2014/02/20/what_we_learned_from_2e2_collapse/"&gt;now defunct 2e2&lt;/a&gt; ). One of the big challenges that comes up is confidentiality of data. Some of this is the difference in location (indeed some of the Sky data was intentionally stored abroad due to more relaxed laws), and some of it is around personal identifiable data. Health care in particularly worries about this, and rightfully so. The NHS doesn't allow any data to leave it's N3 secured network. 2E2 had a UK data centre so that companies could keep data under UK law.&lt;/p&gt;
&lt;p&gt;Without the ability to easily move between data centres, we are in danger of losing the advantages of the cloud, especially around on demand provision.&lt;/p&gt;
&lt;p&gt;Microsoft Research is looking at hardened virtual provisioning through projects like &lt;a href="http://research.microsoft.com/apps/pubs/default.aspx?id=223450"&gt;Haven&lt;/a&gt;, but more interesting to us at the moment is the use of &lt;a href="https://en.wikipedia.org/wiki/Homomorphic_encryption"&gt;Homomorphic Encryption&lt;/a&gt;. This is the use of certain types of encryption that allow the records you store with your cloud provider to be completely secure and opaque to them, but you can still use their machines to search, filter and calculate on the data. It's an excited area, with new reaseach being published all the time.  Google already have a &lt;a href="https://github.com/google/encrypted-bigquery-client"&gt;prototype&lt;/a&gt; for their Big Query cloud offering.&lt;/p&gt;
&lt;h2 id="normalisation-for-the-win"&gt;Normalisation for the Win&lt;/h2&gt;
&lt;p&gt;For us, normalisation in data design has been a huge win. As our databases become larger and larger, we are loathed to move away from Relational models to less structured data like key-value stores and graph databases. it's not that these systems aren't great at scale, it's just you lose a lot of flexible ad-hoc querying as soon as you get that big. We've had great success at stalling the move to NoSql stores by ruthlessly normalising our database designs.&lt;/p&gt;
&lt;p&gt;By taking database designs and introducing entities that don’t necessarily represent business concepts but do radically normalise the data model, we've seen reductions in size by an order of magnitude, and this has often given equally dramatic improvements in performance.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2015/02/01/great-dilbert-cartoons.html</id><title type="html">Great dilbert cartoons</title><published>2015-02-01T15:23:00Z</published><updated>2015-02-01T15:23:00Z</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Great dilbert cartoons" href="https://blogs.conceptfirst.com/2015/02/01/great-dilbert-cartoons.html" /><content type="html">&lt;p&gt;These really rung true for me.&lt;/p&gt;
&lt;p&gt;The centralise - decentralise dance:
&lt;img src="/files/dilbert_central.jpg" alt="Centralise" /&gt;&lt;/p&gt;
&lt;p&gt;I don't think we need complicate the document with alternatives:
&lt;img src="/files/dilbert_writing.jpg" alt="Careful with the truth" /&gt;&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2014/10/18/windows-gets-docker.html</id><title type="html">Windows gets docker</title><published>2014-10-18T09:41:00+01:00</published><updated>2014-10-18T09:41:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Windows gets docker" href="https://blogs.conceptfirst.com/2014/10/18/windows-gets-docker.html" /><content type="html">&lt;p&gt;As I &lt;a href="/blog/2014/07/17/windows-needs-docker/"&gt;mentioned&lt;/a&gt; before, I really believe Docker would help the windows ecosystem.
All my clients end up having loads of server boxes, doing nothing, with 1 app per box, just to keep the isolated so nothing breaks something else.&lt;/p&gt;
&lt;p&gt;Docker gets all the advantages of virtual machines, within out the overhead, making better use of hardware, saving money, burning less fuel, and causing world peace ;-)&lt;/p&gt;
&lt;p&gt;Microsoft have just &lt;a href="https://blog.docker.com/2014/10/docker-microsoft-partner-distributed-applications/"&gt;announced&lt;/a&gt; a partnership with Docker to add the necessary OS support for container deployment !!&lt;/p&gt;
&lt;p&gt;They have obviosuly been researching this for a while, see this MS research project &lt;a href="http://research.microsoft.com/en-us/projects/drawbridge/"&gt;Drawbridge&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2014/10/15/azure-lessons.html</id><title type="html">Azure lessons</title><published>2014-10-15T15:01:00+01:00</published><updated>2014-10-15T15:01:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Azure lessons" href="https://blogs.conceptfirst.com/2014/10/15/azure-lessons.html" /><content type="html">&lt;p&gt;I've spent a frustrating week trying to get a legacy app running against SQL Server into the Microsoft Azure cloud.&lt;/p&gt;
&lt;p&gt;Here are the things I wish I knew before I started:&lt;/p&gt;
&lt;!--more--&gt;
&lt;ol&gt;
&lt;li&gt;Azure SQL Server is not the same as normal SQL Server, it doesn't work the same&lt;/li&gt;
&lt;li&gt;Azure Virtual Machines cannot host normal VPNs&lt;/li&gt;
&lt;li&gt;The two different Azure dashboards do subtly different things&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="azure-sql-server"&gt;Azure SQL Server&lt;/h2&gt;
&lt;p&gt;Summary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uploading an existing database is not straight forward&lt;/li&gt;
&lt;li&gt;SQL Server Management Studio (SSMS) 2012 can connect to Azure, but you lose a lot of the standard functionality (e.g. it cannot setup users, just gives you a script that is wrong )&lt;/li&gt;
&lt;li&gt;You can only connect using SSMS as a administrator user, you cannot connect as a normal user at all&lt;/li&gt;
&lt;li&gt;Microsoft Access doesn't work with Azure databases at all (and it never will)&lt;/li&gt;
&lt;li&gt;It seemed to regularly drop connections that normal SQL Server wouldn't (I guess a consequence of a shared box), even when I was only connected 2 or 3 times&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I needed to move a SQL Server 2012 database into the 'cloud', i.e. on to Azure. I stupidly assumed this would be easy, it wasn't !!.&lt;/p&gt;
&lt;p&gt;After installed Management Studio 2012, there is a nice 'Task' to move the database to azure. Of course it didn't work&lt;/p&gt;
&lt;p&gt;Problems that will break import to azure include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Orphaned user accounts - use &lt;code&gt;EXEC sp_change_users_login 'Report'&lt;/code&gt; to list and &lt;code&gt;EXEC sp_change_users_login 'Auto_Fix', 'user'&lt;/code&gt; to fix&lt;/li&gt;
&lt;li&gt;Fill factors on indexes (never found a solution for this, &lt;a href="http://stackoverflow.com/questions/16542191/sql-server-change-fill-factor-value-for-all-indexes-by-tsql"&gt;this&lt;/a&gt; didn't work for me)&lt;/li&gt;
&lt;li&gt;Tables without a clustered index&lt;/li&gt;
&lt;li&gt;Extended properties (like created by database diagrams, see &lt;a href="http://stackoverflow.com/a/17853448/131701"&gt;stackoverflow&lt;/a&gt; note my comments)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can check if your database is okay to put on azure by using a command line tool installed with SQL Server 2012 (all editions) - see &lt;a href="http://msdn.microsoft.com/en-us/library/hh550080.aspx"&gt;documentation&lt;/a&gt; and use the action:export option.  This will produce the same list of errors that the 'Deploy Database to SQL Azure' tool in Management Studio.&lt;/p&gt;
&lt;p&gt;This and a few other approachs are listed &lt;a href="https://social.technet.microsoft.com/Forums/en-US/cef8d994-1378-4403-870d-c851d324508c/how-to-importexport-sql-azure-database-from-one-dabase-server-to-another-programmetically?forum=ssdsgetstarted"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I had no success with these (and didn't explore more complex ones like &lt;a href="http://blogs.msdn.com/b/ssdt/archive/2012/04/19/migrating-a-database-to-sql-azure-using-ssdt.aspx"&gt;this&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;I scripted the database import in the end, which took a while, but in the end Azure SQL Server just didn't work for us for the reasons above, I ended up setting up a virtual machine and installing SQL Server Express (the database was only small so express was fine).&lt;/p&gt;
&lt;h2 id="azure-virtual-machines"&gt;Azure Virtual Machines&lt;/h2&gt;
&lt;p&gt;After frustration of trying to get a simple PPTP VPN setup, turns out Azure doesn't support VPN protocols through its firewalls. Apparently there is some custom software called 'Azure connect' for this, but I need a Linux box to connect to my VM, so I'm going the OpenVPN route.&lt;/p&gt;
&lt;h2 id="azure-dashboards"&gt;Azure Dashboards&lt;/h2&gt;
&lt;p&gt;There is the old dashboard, and the new portal which is in beta:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://manage.windowsazure.com"&gt;https://manage.windowsazure.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://portal.azure.com"&gt;https://portal.azure.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The new port is nicer to use, but there are subtle differences in how the provisions machines. For example a new VM will end up with differently configured end points depending on which route you follow, and there are somethings the new portal cannot currently do (like configure Azure SQL Server backups).&lt;/p&gt;
&lt;p&gt;In the end I used the old dashboard to change things, and used the new portal as read only (until its out of beta).&lt;/p&gt;
&lt;p&gt;Anyway hope this information saves somebody else some hair :D&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2014/09/26/leaflet-map-with-google-maps-and-geolocation.html</id><title type="html">Leaflet map with google maps and geolocation</title><published>2014-09-26T15:32:00+01:00</published><updated>2014-09-26T15:32:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Leaflet map with google maps and geolocation" href="https://blogs.conceptfirst.com/2014/09/26/leaflet-map-with-google-maps-and-geolocation.html" /><content type="html">&lt;p&gt;&lt;a href="/files/superleaflet.html"&gt;Here&lt;/a&gt; is a &lt;a href="http://leafletjs.com"&gt;leaflet.js&lt;/a&gt; map, using plugins to show various sources including OpenStreetmap, MapBox and Google Maps.  It also includes a search facility using the OSM geolocator.&lt;/p&gt;
&lt;p&gt;It's mostly here for my own development use.
You can pass a lat/lng on the query string to auto centre and zoom the mapp when loaded, e.g. &lt;a href="/files/superleaflet.html?lat=51.5&amp;amp;lng=0&amp;amp;zoom=16"&gt;lat=51.5&amp;amp;lng=0&amp;amp;zoom=16&lt;/a&gt; gives us &lt;img src="/files/leaflet_greenwich.png" alt="greenwich" /&gt;&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2014/09/23/there-has-got-to-be-a-better-term-than-technical-debt.html</id><title type="html">There has got to be a better term than technical debt</title><published>2014-09-23T14:56:00+01:00</published><updated>2014-09-23T14:56:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="There has got to be a better term than technical debt" href="https://blogs.conceptfirst.com/2014/09/23/there-has-got-to-be-a-better-term-than-technical-debt.html" /><content type="html">&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Technical_debt"&gt;Technical Debt&lt;/a&gt; is a common term used in IT circles, and a useful metaphor when discussing planning and tradeoffs (although too often I fear management don't understand the interest repayments side of it)&lt;/p&gt;
&lt;p&gt;Want I want is a term that is more easily understood by non technical business users and management, something which says to them &amp;quot;&lt;em&gt;Your half considered last minute must have change is going to leave the system in a right bloody mess, and its going to take lots of time and effort in the future to clean it up&lt;/em&gt;&amp;quot;, but in a nice punchy phrase.&lt;/p&gt;
&lt;p&gt;Any ideas ? Some word to do with foundations, rotting, derelict, decay, structurally unsound, negleted, condemned ?&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2014/07/17/windows-needs-docker.html</id><title type="html">Windows needs docker</title><published>2014-07-17T09:22:00+01:00</published><updated>2014-07-17T09:22:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Windows needs docker" href="https://blogs.conceptfirst.com/2014/07/17/windows-needs-docker.html" /><content type="html">&lt;p&gt;I've been using &lt;a href="https://www.docker.com"&gt;Docker&lt;/a&gt; a lot recently when setting up our Linux main server. If you've never used it is, I highly recommend it. It is a way of compartmentising your software. You run software in its own docker containers, they share the same machine, but are isolated from each other, can have different versions of common dependancies (like dlls).&lt;/p&gt;
&lt;p&gt;Its like have lots of VMs running, without the massive overhead of running virtual machines.&lt;/p&gt;
&lt;p&gt;It's built on Linux kernel features that allow processes to be isolated from each other (having their own network stack, etc) and union file systems that isolate the file systems efficiently from each other.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.docker.com/whatisdocker/"&gt;https://www.docker.com/whatisdocker/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Microsoft Windows really needs this&lt;/strong&gt;. Every client I've worked with ends up having loads of Windows servers, all running at 1% utilisation, just so everything is isolated, and that one version of SQL Server won't break another version, or that the latest version of the C++ runtime breaks a product you bought 3 years ago ...&lt;/p&gt;
&lt;p&gt;Unfortunately the Win32 API doesn't have the features to implement it presently, and the &lt;a href="http://msdn.microsoft.com/en-gb/library/windows/desktop/ms684161.aspx"&gt;Jobs API&lt;/a&gt; that looked like it could be the way to go, seems recently to have been depreciated and not fully supported in each version of the OS (just search stack overflow for all the problems).&lt;/p&gt;
&lt;p&gt;Lets hope Microsoft feel the pressure from Linux on this, but they probably too busy relaunching Bing or rebranding &lt;em&gt;Windows Phone 7.5 Embedded Mobile CE&lt;/em&gt; to notice.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2014/07/10/seriously-it-depends.html</id><title type="html">Seriously it depends!</title><published>2014-07-10T09:19:00+01:00</published><updated>2014-07-10T09:19:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Seriously it depends!" href="https://blogs.conceptfirst.com/2014/07/10/seriously-it-depends.html" /><content type="html">&lt;p&gt;I recently watched the discussions between Kent Beck, Martin Fowler and DHH, on &lt;a href="http://martinfowler.com/articles/is-tdd-dead/"&gt;Is TDD dead?&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The discussions are fine, but the problem is one that all analysts are familar with, &lt;em&gt;It Depends&lt;/em&gt;. DHH writes relatively simple end project management SAAS tool, Fowler works in much more complex business environments, and Kent deals with infrastructure at Google.  Is it really surprising that they have different opinions on how and when to apply to TDD, when their problem domains are so differernt ?&lt;/p&gt;
&lt;p&gt;In most of my code, testing hasn't been helpful, but in 2 situations its been an absolutely life saver. One is testing third party web services, one a CRM system, another a ERP, that were insulating by a SOAP/HTTP end-point for other systems to use.  The tests allowed me to capture third party issues, but more importantly allowed aggressive refactoring without fear of breaking things.&lt;/p&gt;
&lt;p&gt;The second was for an overtimes claims systems, with very complex payroll rules around which claims were valid, how much they were paid, etc. The rules had very complex interactions, and by testing them we were able to find inconsistency in their business rules, and again to support future changes without breaking existing systems.&lt;/p&gt;
&lt;p&gt;Other development where I've done testing, it hasn't helped, or it has been a hinderance. The value of experience is of course that ability to answer &lt;em&gt;On What&lt;/em&gt; it depends.&lt;/p&gt;
&lt;p&gt;Nobody expects doctors or engineers to give the same advice in every situation, so why does that have to be one set of rules for testing in software development ....&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2014/07/07/this-is-what-happens-when-you-sequence-a-graph-model-into-a-relational-database.html</id><title type="html">What happens when you squeeze a graph model into a relational database</title><published>2014-07-07T12:41:00+01:00</published><updated>2014-07-07T12:41:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="What happens when you squeeze a graph model into a relational database" href="https://blogs.conceptfirst.com/2014/07/07/this-is-what-happens-when-you-sequence-a-graph-model-into-a-relational-database.html" /><content type="html">&lt;p&gt;Microsoft CRM Dynamics is becoming a popular solution of CRM, case management, etc. It has reasonably complex data model, with support for Activities (e.g. Email, Phone calls) which are things the users need to do (email somebody, go to an appointment, etc.). These activities can be related to pretty much anything in the system, which makes sense, the Activities are the &lt;em&gt;verbs&lt;/em&gt; of the system, with the other tables being the &lt;em&gt;Nouns&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/CrmStandardModel.png" alt="CrmEntityDiagram" /&gt;&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Unfortunalty CRM runs on a SQL Server, and in particular takes certain design decisions (around the use of GUIDs), that leads to the following picture. The ActivityPointerBase is the base table for holding activities in one the customer systems I support.&lt;/p&gt;
&lt;p&gt;The table itself is 8Gb, which is big but understandable.  The indexes are &lt;strong&gt;23Gb&lt;/strong&gt; however !!  The database is growing very quickly, and the largest culprit by far is these indexes. CRM Dynamics creates indexes to handle every possible link between entities in the system, but in this instance (with relatively little customisation) we are already up to 51 indexes on that table, and response time for the users is getting progressively worse ...&lt;/p&gt;
&lt;p&gt;Maybe they should of used a &lt;a href="http://en.wikipedia.org/wiki/Graph_database"&gt;Graph database&lt;/a&gt; like &lt;a href="http://neo4j.com"&gt;Neo4J&lt;/a&gt; which is really a better fix for highly related data like CRM.  You also get the feeling that the Microsoft designers of the database didn't have much real world experience ...&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/CrmActivityIndex.png" alt="Indexes" /&gt;&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2014/07/04/dont-change-the-name-of-your-crm-server.html</id><title type="html">Don't change the name of your CRM server</title><published>2014-07-04T12:37:00+01:00</published><updated>2014-07-04T12:37:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Don't change the name of your CRM server" href="https://blogs.conceptfirst.com/2014/07/04/dont-change-the-name-of-your-crm-server.html" /><content type="html">&lt;p&gt;Or rather if you do, be careful what you change the config in the &lt;code&gt;MSRCRM_CONFIG&lt;/code&gt; table to.&lt;/p&gt;
&lt;p&gt;One of our clients recently had an outage where nobody could login to CRM dynamics 2011 for most of the day. All users got the following useful message:&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/CrmRecordIsUnavailable.jpg" alt="CrmUnavilable" /&gt;&lt;/p&gt;
&lt;p&gt;Luckily the Windows Event Log recorded:&lt;/p&gt;
&lt;!--more--&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;Event code: 3005 
Event message: An unhandled exception has occurred. 
Event time: 04/07/2014 12:25:32 
Event time (UTC): 04/07/2014 11:25:32 
Event ID: c15710915a4141728256c575c3ab2412 
Event sequence: 1015 
Event occurrence: 1014 
Event detail code: 0 
 
Application information: 
    Application domain: /LM/W3SVC/2/ROOT-1-130489361515699691 
    Trust level: Full 
    Application Virtual Path: / 
    Application Path: C:\Program Files\Microsoft Dynamics CRM\CRMWeb\ 
    Machine name: CompanySQL 
 
Process information: 
    Process ID: 904 
    Process name: w3wp.exe 
    Account name: NT AUTHORITY\NETWORK SERVICE 
 
Exception information: 
    Exception type: CrmConfigObjectNotFoundException 
    Exception message: Server ID Was Not Found
   at Microsoft.Crm.ServerLocatorService.GetServerIdFromDatabase()
   at Microsoft.Crm.ServerLocatorService.GetServerId()
   at Microsoft.Crm.ServerLocatorService.GetServerSetting(String settingName)
   at Microsoft.Crm.Etm.EtmServerConfiguration.Initialize()
   at Microsoft.Crm.Etm.RequestGovernor.Initialize()
   at Microsoft.Crm.RunInitializerTracker.TryRun(Type typeOfInitializer, RunInitializerDelegate RunInitializerDelegate)
   at Microsoft.Crm.ApplicationInitializer.Microsoft.Crm.IApplicationInitializer.Initialize()
   at Microsoft.Crm.MainApplication.Initialize(String nameCallerMethod)
   at Microsoft.Crm.MainApplication.Application_OnBeginRequest(Object sender, EventArgs eventArguments)
   at System.Web.HttpApplication.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()
   at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp;amp; completedSynchronously)

 
 
Request information: 
    Request URL: http://Companysql:5555/CompanyGroupLtd/XRMServices/2011/Organization.svc?wsdl 
    Request path: /CompanyGroupLtd/XRMServices/2011/Organization.svc 
    User host address: 10.3.0.98 
    User:  
    Is authenticated: False 
    Authentication Type:  
    Thread account name: NT AUTHORITY\NETWORK SERVICE 
 
Thread information: 
    Thread ID: 24 
    Thread account name: NT AUTHORITY\NETWORK SERVICE 
    Is impersonating: True 
    Stack trace:    at Microsoft.Crm.ServerLocatorService.GetServerIdFromDatabase()
   at Microsoft.Crm.ServerLocatorService.GetServerId()
   at Microsoft.Crm.ServerLocatorService.GetServerSetting(String settingName)
   at Microsoft.Crm.Etm.EtmServerConfiguration.Initialize()
   at Microsoft.Crm.Etm.RequestGovernor.Initialize()
   at Microsoft.Crm.RunInitializerTracker.TryRun(Type typeOfInitializer, RunInitializerDelegate RunInitializerDelegate)
   at Microsoft.Crm.ApplicationInitializer.Microsoft.Crm.IApplicationInitializer.Initialize()
   at Microsoft.Crm.MainApplication.Initialize(String nameCallerMethod)
   at Microsoft.Crm.MainApplication.Application_OnBeginRequest(Object sender, EventArgs eventArguments)
   at System.Web.HttpApplication.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()
   at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp;amp; completedSynchronously)
 
 
Custom event details: 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Various google searches listed other people with issues around machine names (although most seemed to be around getting the async background services running rather the IIS itself failing).  After messing around a bit, a quick &lt;code&gt;SELECT Name FROM MSCRM_CONFIG.dbo.Server&lt;/code&gt; showed the server name in config was not the same as the machine name (DEV had been put on the end), which prevents CRM from doing anything apparently. Putting in the correct name fixed the problem in two seconds.&lt;/p&gt;
&lt;p&gt;Looks like a sys admin got confused between a production and sandpit instance, and updated the wrong config :D&lt;/p&gt;
&lt;p&gt;Hopefully this helps somebody else with this particular issue.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2014/05/08/microsoft-crm-dynmaics-the-good.html</id><title type="html">Microsoft CRM Dynmaics: the good, the bad and the massive</title><published>2014-05-08T09:03:00+01:00</published><updated>2014-05-08T09:03:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Microsoft CRM Dynmaics: the good, the bad and the massive" href="https://blogs.conceptfirst.com/2014/05/08/microsoft-crm-dynmaics-the-good.html" /><content type="html">&lt;p&gt;I've been working with Microsoft CRM dynamics for about three years now, with a couple of different clients.  Both clients use CRM is quite different ways, and having varing levels of customisation and integration. Here is a shortish list of my experiences with it, and thoughts around what to consider when choosing and implementing it.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Here is a diagram of the key entities in standard CRM for reference:
&lt;img src="/files/CrmStandardModel.png" alt="CrmEntityDiagram" /&gt;&lt;/p&gt;
&lt;h2 id="positive"&gt;Positive&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rich filtering and user defined views of records makes it easy to define what to work on&lt;/li&gt;
&lt;li&gt;Creating new related records from the search is nice&lt;/li&gt;
&lt;li&gt;Templates (e.g. campaign)&lt;/li&gt;
&lt;li&gt;Good consistent keyboard shortcuts&lt;/li&gt;
&lt;li&gt;Drill down charts built in&lt;/li&gt;
&lt;li&gt;Can Connect any entity in the system to anything else&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="negative"&gt;Negative&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Quiet a learning curve to get comformtable with the system&lt;/li&gt;
&lt;li&gt;Expensive contractors if you need support&lt;/li&gt;
&lt;li&gt;Not clear to see relationships, a view of a single entity can only show 1 level of related data&lt;/li&gt;
&lt;li&gt;Lots to learn, doesn’t manage processes, very much data orientated&lt;/li&gt;
&lt;li&gt;Don’t have an english explanation (e.g. on service), need to jump around to fields to understand what it is (the narrative)&lt;/li&gt;
&lt;li&gt;All due dates as specific rather than SLAs from times. You need to write plugins to do SLA type code.&lt;/li&gt;
&lt;li&gt;Fragile: AD integration, Exchange, Sharepoint, etc.  Each on their own is complicated and scary, together they are very fragile !&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="the-massive"&gt;The massive&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The database is very large.  All primary keys are 128 bit guids, and there are lots of foreign keys leading to very wide tables.&lt;/li&gt;
&lt;li&gt;The flexible nature leads to lots of indexes to get reasonable performance, meaning your database will get big, quickly, especially on Activity entities.&lt;/li&gt;
&lt;li&gt;You will need big faster hardware to make it run reasonably.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="best-pracitises-when-customising"&gt;Best pracitises when customising&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Modelling your business up front is a good idea, but before making any changes, live with CRM for a couple of months before customising it.  Once its changed, you've diverged from standard CRM and its gets harder to support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rename the existing entities to better match your terminology. Cases might be better named Tickets for example.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you do customise, repurpose existing entities and their functionality, they have special abilities that custom entities can't have.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For processes, rather than change fields on an entity, create a new one to better model what actually happened (eg. if you try to call back a customer and can't get through, rather than just resetting the due date on the telephone call, make a new one and mark the old as failed to get through ). You will then better be able to report on what actually happened. Dialogs can be written to make this straight forward.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you have complex business processes, consider writing custom friend ends in standard web server code, and then using the CRM SDK behind the scenes to store the data in CRM. This way you can fully control the end experience for the user, and guarentee the data quality that ends up in CRM, making sure all records are correctly linked, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/gg509027.aspx"&gt;http://msdn.microsoft.com/en-us/library/gg509027.aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/190839/how-is-your-experience-with-microsoft-dynamics-crm"&gt;http://stackoverflow.com/questions/190839/how-is-your-experience-with-microsoft-dynamics-crm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msdynamicscrmblog.wordpress.com/2014/01/15/best-practices-for-reports-in-dynamics-crm-2013/"&gt;http://msdynamicscrmblog.wordpress.com/2014/01/15/best-practices-for-reports-in-dynamics-crm-2013/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blogs.msdn.com/b/crm/archive/2010/01/15/microsoft-dynamics-crm-workflow-authoring-best-practices.aspx"&gt;http://blogs.msdn.com/b/crm/archive/2010/01/15/microsoft-dynamics-crm-workflow-authoring-best-practices.aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blogs.msdn.com/b/lezamax/archive/2008/04/02/plug-in-or-workflow.aspx"&gt;http://blogs.msdn.com/b/lezamax/archive/2008/04/02/plug-in-or-workflow.aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dynamicsuniversity.com/blog/crm-implementation-best-practices"&gt;http://dynamicsuniversity.com/blog/crm-implementation-best-practices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2014/02/14/loading-dynamic-data-into-our-map.html</id><title type="html">Loading dynamic data into our map</title><published>2014-02-14T09:03:00Z</published><updated>2014-02-14T09:03:00Z</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Loading dynamic data into our map" href="https://blogs.conceptfirst.com/2014/02/14/loading-dynamic-data-into-our-map.html" /><content type="html">&lt;p&gt;Following on from &lt;a href="/blog/2014/02/04/Building-a-webmapping-system/"&gt;last time&lt;/a&gt;, we will now add dynamic data to our map. Will we have the webpage use dynamic ajax calls to load data from the server.&lt;/p&gt;
&lt;p&gt;First thing is to get a simple webserver up and running. We must host the website and the data feed at the same address for security reasons (although this can be got around using &lt;a href="http://en.wikipedia.org/wiki/JSONP"&gt;JSONP&lt;/a&gt;).  I'll use a simple ruby sinatra server:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-ruby"&gt;require 'sinatra'
require 'json'

get '/' do
  File.read('index.html')
end
&lt;/code&gt;&lt;/pre&gt;
&lt;!--more--&gt;
&lt;p&gt;Running this will bring up a simple server that just hosts our index page from last time (on port localhost:4567 by default)&lt;/p&gt;
&lt;p&gt;In order to show dynamic data we need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hook events on the map, allowing us to react to the user zooming and panning the map&lt;/li&gt;
&lt;li&gt;Call the server to load the data for the current view&lt;/li&gt;
&lt;li&gt;Handle the user showing and hiding different layers, and making sure we only request data from the server when needed&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="leaflet-map-events"&gt;Leaflet map events&lt;/h2&gt;
&lt;p&gt;There is a full API &lt;a href="http://leafletjs.com/reference.html"&gt;reference&lt;/a&gt; available, but in this instanace we need to request events just for &lt;code&gt;moveend&lt;/code&gt;. The moveend will tell us when the user has finised panning or zooming.&lt;/p&gt;
&lt;p&gt;Below we hook up a js function to be called every time the map moves. In the event handler we get the current bounds of the view, and the zoom level, and output it to the console.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#57A64A;"&gt;// Event handler for the map being moved/zoomed&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; map_moved() {
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; bnd = map.getBounds();
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; zoom = map.getZoom();
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; loc = bnd.toBBoxString() + &lt;span style="color:#D69D85;"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; + zoom;
    console.log(loc);
}

&lt;span style="color:#57A64A;"&gt;// Listen to move event&lt;/span&gt;
map.on(&lt;span style="color:#D69D85;"&gt;&amp;#39;moveend&amp;#39;&lt;/span&gt;, map_moved);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Moving around a bit gives us this:&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/leaflet_coords.png" alt="map with coords" /&gt;&lt;/p&gt;
&lt;h2 id="calling-the-server"&gt;Calling the server&lt;/h2&gt;
&lt;p&gt;Now we want to call the server, letting it now the current view of data. To call the server we can use standard jquery. We pass a query parameter of box which contains the view of the map, and the current zoom level. Once a response comes from the server, we just dump it to the console.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;script&lt;/span&gt; &lt;span style="color:#FF0000;"&gt;src&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;=&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;//code.jquery.com/jquery-1.11.1.min.js&amp;quot;&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#A31515;"&gt;script&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; map_moved() {
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; bnd = map.getBounds();
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; zoom = map.getZoom();
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; loc = bnd.toBBoxString() + &lt;span style="color:#D69D85;"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; + zoom;
	console.log(loc);
	$.getJSON(&lt;span style="color:#D69D85;"&gt;&amp;#39;/1?box=&amp;#39;&lt;/span&gt; + loc , &lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; (serverData) {
		console.log(serverData);
	});			
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We need to hook up the server side as well. We add a route that returns JSON, for the minute just returning JSON that contains the params we passed in, to confirm all comms are working.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-ruby"&gt;require 'sinatra'
require 'json'

get '/' do
  File.read('index.html')
end

get '/1' do
  # Incoming call will look like http://localhost:4567/1?box=-3.517792224884033,50.71578134208988,-3.498995304107666,50.71930006299481,16
  box = params[:box].split(',')
  content_type :json
  {
    min_lng:box[0],
    min_lat:box[1],
    max_lng:box[2],
    max_lat:box[3],
    zoom:box[4]
  }.to_json
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can now see in the javascript console the reponse from the server, confirming everything is working properly.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/leaflet_serverresponse.png" alt="server response" /&gt;&lt;/p&gt;
&lt;p&gt;Now we will return some actual GeoJSON to display on the map. For this demo we will just create a cross on the screen.&lt;/p&gt;
&lt;p&gt;We will extend our ruby server side code to generate some GeoJSON for a cross.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-ruby"&gt;get '/1' do
  box = params[:box].split(',')
  # Incoming call will look like http://localhost:4567/1?box=-3.517792224884033,50.71578134208988,-3.498995304107666,50.71930006299481,16

  content_type :json
  {
    type: &amp;quot;FeatureCollection&amp;quot;,
    features: [
      {
        type:'Feature',
        geometry: {
          type:'LineString',
          coordinates: [ [box[0], box[1]],[box[2], box[3]] ]
        },
        properties: {}        
      },
      {
        type:'Feature',
        geometry: {
          type:'LineString',
          coordinates: [ [box[0], box[3]],[box[2], box[1]] ]
        },
        properties: {}        
      }    
    ]
  }.to_json
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which will return something looking like:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
{
    &lt;span style="color:#D69D85;"&gt;&amp;quot;features&amp;quot;&lt;/span&gt;: [
        {
            &lt;span style="color:#D69D85;"&gt;&amp;quot;geometry&amp;quot;&lt;/span&gt;: {
                &lt;span style="color:#D69D85;"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;: [
                    [
                        &lt;span style="color:#D69D85;"&gt;&amp;quot;-3.517792224884033&amp;quot;&lt;/span&gt;,
                        &lt;span style="color:#D69D85;"&gt;&amp;quot;50.71578134208988&amp;quot;&lt;/span&gt;
                    ],
                    [
                        &lt;span style="color:#D69D85;"&gt;&amp;quot;-3.498995304107666&amp;quot;&lt;/span&gt;,
                        &lt;span style="color:#D69D85;"&gt;&amp;quot;50.71930006299481&amp;quot;&lt;/span&gt;
                    ]
                ],
                &lt;span style="color:#D69D85;"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style="color:#D69D85;"&gt;&amp;quot;LineString&amp;quot;&lt;/span&gt;
            },
            &lt;span style="color:#D69D85;"&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;: {},
            &lt;span style="color:#D69D85;"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style="color:#D69D85;"&gt;&amp;quot;Feature&amp;quot;&lt;/span&gt;
        },
        {
            &lt;span style="color:#D69D85;"&gt;&amp;quot;geometry&amp;quot;&lt;/span&gt;: {
                &lt;span style="color:#D69D85;"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;: [
                    [
                        &lt;span style="color:#D69D85;"&gt;&amp;quot;-3.517792224884033&amp;quot;&lt;/span&gt;,
                        &lt;span style="color:#D69D85;"&gt;&amp;quot;50.71930006299481&amp;quot;&lt;/span&gt;
                    ],
                    [
                        &lt;span style="color:#D69D85;"&gt;&amp;quot;-3.498995304107666&amp;quot;&lt;/span&gt;,
                        &lt;span style="color:#D69D85;"&gt;&amp;quot;50.71578134208988&amp;quot;&lt;/span&gt;
                    ]
                ],
                &lt;span style="color:#D69D85;"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style="color:#D69D85;"&gt;&amp;quot;LineString&amp;quot;&lt;/span&gt;
            },
            &lt;span style="color:#D69D85;"&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;: {},
            &lt;span style="color:#D69D85;"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style="color:#D69D85;"&gt;&amp;quot;Feature&amp;quot;&lt;/span&gt;
        }
    ],
    &lt;span style="color:#D69D85;"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style="color:#D69D85;"&gt;&amp;quot;FeatureCollection&amp;quot;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We just change our map_moved event handler to load the data into our previous beach layer (note we need to clear out the previous data first):&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; map_moved() {
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; bnd = map.getBounds();
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; zoom = map.getZoom();
    &lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; loc = bnd.toBBoxString() + &lt;span style="color:#D69D85;"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; + zoom;
    $.getJSON(&lt;span style="color:#D69D85;"&gt;&amp;#39;/1?box=&amp;#39;&lt;/span&gt; + loc , &lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; (serverData) {
        beach_layer.clearLayers();
        L.geoJson(serverData).addTo(beach_layer);
    });
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's not particularly impressive, but it does open up huge possibilities for loading server side dynamic views easily.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/leaflet_cross.png" alt="Lovely cross" /&gt;&lt;/p&gt;
&lt;h2 id="next-steps"&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;The next steps to make this fully featured would be to handle the &lt;code&gt;overlayadd&lt;/code&gt; and &lt;code&gt;overlayremove&lt;/code&gt; events from the map, to only request data when a layer is being displayed, and to hide or load as soon as the user makes their choice.&lt;/p&gt;
&lt;p&gt;The javascript can be easily extended to handle as many layers are required, with custom styles, minimum zoon levels, etc.  This is left as an exercise for the reader :D&lt;/p&gt;
&lt;p&gt;For example, the following config should give you some ideas:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#57A64A;"&gt;// Definition of overlays&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; overlays = {

    Beaches: {
        url: &lt;span style="color:#D69D85;"&gt;&amp;#39;Data/1?box=&amp;#39;&lt;/span&gt;,
        min_zoom: 17,
        style: {
            weight: 2,
            color: &lt;span style="color:#D69D85;"&gt;&amp;#39;#03F&amp;#39;&lt;/span&gt;
        }
   },

   Roads: {
       url: &lt;span style="color:#D69D85;"&gt;&amp;#39;Data/2?box=&amp;#39;&lt;/span&gt;,
       min_zoom: 17,
       style: {
           weight: 2,
           color: &lt;span style="color:#D69D85;"&gt;&amp;#39;#bc8f8f&amp;#39;&lt;/span&gt;
       }
&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Added dynamic data is pretty easy, and the asynchronous nature of AJAX calls means the user isn't slowed down waiting for dynamic data to load.&lt;/p&gt;
&lt;p&gt;For a more robust solution we would need to consider server errors, netork problems, showing to the user when data is loading, etc.&lt;/p&gt;
&lt;p&gt;Although it is straight forward to build this yourself, there are various &lt;a href="http://leafletjs.com/plugins.html"&gt;plugins&lt;/a&gt; to leaflet available to make it even easier.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2014/02/04/Building-a-webmapping-system.html</id><title type="html">Building a webmapping system</title><published>2014-02-04T19:10:00Z</published><updated>2014-02-04T19:10:00Z</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Building a webmapping system" href="https://blogs.conceptfirst.com/2014/02/04/Building-a-webmapping-system.html" /><content type="html">&lt;p&gt;We will look at how easy it is to create your own web mapping platform.&lt;/p&gt;
&lt;p&gt;First we will start with creating the javascript platform, pulling in data to display over the top.  Will then go on to creating our own tile server based on &lt;a href="http://OpenStreetmap.org"&gt;OpenStreetmap.org&lt;/a&gt; data (I'll use the abbreviation OSM) in future articles.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id="a-basic-javascript-client"&gt;1 - A basic javascript client&lt;/h2&gt;
&lt;p&gt;Start with a basic webpage, and use &lt;a href="http://leafletjs.com"&gt;leaflet.js&lt;/a&gt; to show a map, using OSM tiles hosted by &lt;a href="http://mapbox.com"&gt;Mapbox&lt;/a&gt;. We use the CDN versions of the leaflet javascript and CSS.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;&amp;lt;!&lt;/span&gt;&lt;span style="color:#A31515;"&gt;DOCTYPE&lt;/span&gt; &lt;span style="color:#FF0000;"&gt;html&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;html&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;head&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
	&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;title&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;Basic fullscreen map&lt;span style="color:#569CD6;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#A31515;"&gt;title&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
	&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;meta&lt;/span&gt; &lt;span style="color:#FF0000;"&gt;charset&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;=&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;/&amp;gt;&lt;/span&gt;
	&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;meta&lt;/span&gt; &lt;span style="color:#FF0000;"&gt;name&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;=&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span style="color:#FF0000;"&gt;content&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;=&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&amp;quot;&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
	&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;link&lt;/span&gt; &lt;span style="color:#FF0000;"&gt;rel&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;=&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span style="color:#FF0000;"&gt;href&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;=&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css&amp;quot;&lt;/span&gt; &lt;span style="color:#569CD6;"&gt;/&amp;gt;&lt;/span&gt;
	&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;style&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
		html, body, #map { height:100%; width:100%; padding:0px; margin:0px; } 
	&lt;span style="color:#569CD6;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#A31515;"&gt;style&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#A31515;"&gt;head&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;	
&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;body&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
	&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;div&lt;/span&gt; &lt;span style="color:#FF0000;"&gt;id&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;=&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;map&amp;quot;&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#A31515;"&gt;div&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
 	&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;script&lt;/span&gt; &lt;span style="color:#FF0000;"&gt;src&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;=&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js&amp;quot;&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#A31515;"&gt;script&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
	&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;script&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
		&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; map = L.map(&lt;span style="color:#D69D85;"&gt;&amp;#39;map&amp;#39;&lt;/span&gt;).setView([51.505, -0.09], 13);
		L.tileLayer(&lt;span style="color:#D69D85;"&gt;&amp;#39;https://{s}.tiles.mapbox.com/v3/{id}/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;, {
			maxZoom: 18,
			attribution: &lt;span style="color:#D69D85;"&gt;&amp;#39;Map data &amp;amp;copy; &amp;lt;a href=&amp;quot;http://openstreetmap.org&amp;quot;&amp;gt;OpenStreetMap&amp;lt;/a&amp;gt; contributors, &amp;#39;&lt;/span&gt; +
				&lt;span style="color:#D69D85;"&gt;&amp;#39;&amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by-sa/2.0/&amp;quot;&amp;gt;CC-BY-SA&amp;lt;/a&amp;gt;, &amp;#39;&lt;/span&gt; +
				&lt;span style="color:#D69D85;"&gt;&amp;#39;Imagery &amp;#169; &amp;lt;a href=&amp;quot;http://mapbox.com&amp;quot;&amp;gt;Mapbox&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;,
			id: &lt;span style="color:#D69D85;"&gt;&amp;#39;examples.map-i875mjb7&amp;#39;&lt;/span&gt;
		}).addTo(map);
	&lt;span style="color:#569CD6;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#A31515;"&gt;script&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#A31515;"&gt;body&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#A31515;"&gt;html&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;

&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We set the CSS of the html, body and map all to 100% which makes the map fullscreen. We set the viewport correctly so the map will work correctly on mobile devices.
&lt;img src="/files/leaflet_basic.png" alt="Basic Map" /&gt;&lt;/p&gt;
&lt;h2 id="pull-in-data-to-show-over-the-top"&gt;2 - Pull in data to show over the top&lt;/h2&gt;
&lt;p&gt;Now we add some dynamic data and display it on top of the map. For the moment we will load a static &lt;a href="http://geojson.org"&gt;GeoJSON&lt;/a&gt; file of UK surfing spots, but obviously this can be loaded via AJAX dynamically as required.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
 	&lt;span style="color:#569CD6;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#A31515;"&gt;script&lt;/span&gt; &lt;span style="color:#FF0000;"&gt;src&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;=&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;quot;beaches.js&amp;quot;&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#A31515;"&gt;script&lt;/span&gt;&lt;span style="color:#569CD6;"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This file contains each beach marked up in GeoJSON:&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
{
    &lt;span style="color:#D69D85;"&gt;&amp;quot;geometry&amp;quot;&lt;/span&gt;: {
        &lt;span style="color:#D69D85;"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;: [
            -4.2315,
            51.1159
        ],
        &lt;span style="color:#D69D85;"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style="color:#D69D85;"&gt;&amp;quot;Point&amp;quot;&lt;/span&gt;
    },
    &lt;span style="color:#D69D85;"&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;: {
        &lt;span style="color:#D69D85;"&gt;&amp;quot;link&amp;quot;&lt;/span&gt;: &lt;span style="color:#D69D85;"&gt;&amp;quot;http://magicseaweed.com//Saunton-Sands-Surf-Report/1322/&amp;quot;&lt;/span&gt;,
        &lt;span style="color:#D69D85;"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;: &lt;span style="color:#D69D85;"&gt;&amp;quot;Saunton Sands&amp;quot;&lt;/span&gt;,
        &lt;span style="color:#D69D85;"&gt;&amp;quot;swell&amp;quot;&lt;/span&gt;: &lt;span style="color:#D69D85;"&gt;&amp;quot;SW - NW&amp;quot;&lt;/span&gt;
    },
    &lt;span style="color:#D69D85;"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span style="color:#D69D85;"&gt;&amp;quot;Feature&amp;quot;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We then add the points to the map, passing in options to allow us to customise the look and feel of the points.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; geojsonMarkerOptions = {
    radius: 5,
    fillColor: &lt;span style="color:#D69D85;"&gt;&amp;quot;#ff7800&amp;quot;&lt;/span&gt;,
    color: &lt;span style="color:#D69D85;"&gt;&amp;quot;#EE4500&amp;quot;&lt;/span&gt;,
    weight: 1,
    opacity: 1,
    fillOpacity: 0.8
};

L.geoJson(beaches, {
    pointToLayer: &lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; (feature, latlng) {
        &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; L.circleMarker(latlng, geojsonMarkerOptions);
    }
}).addTo(map);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will also change the default position of the map to highlight some coastline.
&lt;img src="/files/leaflet_beachblobs.png" alt="Blob Map" /&gt;&lt;/p&gt;
&lt;p&gt;We now take advantage of the properties of each surf spot in the GeoJSON, by adding a popup in javascript to show us information about the beach when we click on it. To do this we just add an option passed to the geoJson call in leaflet that deals with click events&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#57A64A;"&gt;// Function for displaying appropriate information in the popup&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; onEachFeature(feature, layer) {
	&lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; (!feature.properties || !feature.properties.swell)
		&lt;span style="color:#569CD6;"&gt;return&lt;/span&gt;;		
	&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; popupContent = &lt;span style="color:#D69D85;"&gt;&amp;quot;&amp;lt;h3&amp;gt;&amp;quot;&lt;/span&gt; + feature.properties.name + &lt;span style="color:#D69D85;"&gt;&amp;quot;&amp;lt;/h3&amp;gt;&amp;quot;&lt;/span&gt; + &lt;span style="color:#D69D85;"&gt;&amp;quot;Swell direction: &amp;quot;&lt;/span&gt; +
		feature.properties.swell + &lt;span style="color:#D69D85;"&gt;&amp;quot;&amp;lt;br&amp;gt;&amp;lt;a href=&amp;#39;&amp;quot;&lt;/span&gt; + feature.properties.link + &lt;span style="color:#D69D85;"&gt;&amp;quot;&amp;#39;&amp;gt;Surf report&amp;lt;/a&amp;gt;&amp;quot;&lt;/span&gt;
	layer.bindPopup(popupContent);
}
	
L.geoJson(beaches, {
    pointToLayer: &lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; (feature, latlng) {
        &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; L.circleMarker(latlng, geojsonMarkerOptions);
    },
	onEachFeature: onEachFeature
}).addTo(map);

&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src="/files/leaflet_popup.png" alt="Map with popupup" /&gt;&lt;/p&gt;
&lt;h2 id="supporting-more-than-one-sort-of-tile"&gt;3 - Supporting more than one sort of tile&lt;/h2&gt;
&lt;p&gt;Often with maps you want to be able to change the tiles you are viewing. With leaflet this is dead easy, lets add two more tiles to our example ( a greyscale set of tiles, and a darker version ). We define our multiple tile sources, and then use the leaflet layer control to allow them to be toggled.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#57A64A;"&gt;// Constants for URL and attribution&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; tile_url = &lt;span style="color:#D69D85;"&gt;&amp;#39;https://{s}.tiles.mapbox.com/v3/{id}/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;;
&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; attribution = &lt;span style="color:#D69D85;"&gt;&amp;#39;Map data &amp;amp;copy; &amp;lt;a href=&amp;quot;http://openstreetmap.org&amp;quot;&amp;gt;OpenStreetMap&amp;lt;/a&amp;gt; contributors, &amp;#39;&lt;/span&gt; +
		&lt;span style="color:#D69D85;"&gt;&amp;#39;&amp;lt;a href=&amp;quot;http://creativecommons.org/licenses/by-sa/2.0/&amp;quot;&amp;gt;CC-BY-SA&amp;lt;/a&amp;gt;, &amp;#39;&lt;/span&gt; +
		&lt;span style="color:#D69D85;"&gt;&amp;#39;Imagery &amp;#169; &amp;lt;a href=&amp;quot;http://mapbox.com&amp;quot;&amp;gt;Mapbox&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;;

&lt;span style="color:#57A64A;"&gt;// Build different tile layers (the id is what switchs between different mapbox tiles)&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; normal    = L.tileLayer(tile_url, { id: &lt;span style="color:#D69D85;"&gt;&amp;#39;examples.map-i875mjb7&amp;#39;&lt;/span&gt;, attribution: attribution}),
	dark      = L.tileLayer(tile_url, { id: &lt;span style="color:#D69D85;"&gt;&amp;#39;examples.map-0l53fhk2&amp;#39;&lt;/span&gt;, attribution: attribution}),
    grayscale = L.tileLayer(tile_url, { id: &lt;span style="color:#D69D85;"&gt;&amp;#39;examples.map-20v6611k&amp;#39;&lt;/span&gt;, attribution: attribution});

&lt;span style="color:#57A64A;"&gt;// Load the map&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; map = L.map(&lt;span style="color:#D69D85;"&gt;&amp;#39;map&amp;#39;&lt;/span&gt;, {
	center: [50.505, -4.49],
	zoom: 8,
	layers: [normal]
});

&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; baseLayers = {
	&lt;span style="color:#D69D85;"&gt;&amp;quot;Normal&amp;quot;&lt;/span&gt;: normal,
	&lt;span style="color:#D69D85;"&gt;&amp;quot;Grayscale&amp;quot;&lt;/span&gt;: grayscale,
	&lt;span style="color:#D69D85;"&gt;&amp;quot;Dark&amp;quot;&lt;/span&gt;: dark
};

&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; overlays = {
};

L.control.layers(baseLayers, overlays).addTo(map);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the screenshot below you can see the tile chooser top right, this is orignally an icon that opens up when you mouse over.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/leaflet_multipletiles.png" alt="Map with multiple tiles" /&gt;&lt;/p&gt;
&lt;h2 id="adding-back-our-beaches-and-toggling-them"&gt;4 - Adding back our beaches and toggling them&lt;/h2&gt;
&lt;p&gt;We want our nice beach display back, so we need to add them into a layer, and add the layer to layer control. We create a new layer group, add pass it the layer control by adding it to the overlays object. Now we load the GeoJSON as before, but rather than adding it direct to the map, we add it to the beach layer, to be show or hidden as desired.&lt;/p&gt;
&lt;div style="color:#DADADA;background-color:#1E1E1E;"&gt;&lt;pre&gt;
&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; beach_layer = &lt;span style="color:#569CD6;"&gt;new&lt;/span&gt; L.LayerGroup();

&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; overlays = {
	&lt;span style="color:#D69D85;"&gt;&amp;quot;Beaches&amp;quot;&lt;/span&gt;: beach_layer
};

L.control.layers(baseLayers, overlays).addTo(map);
	
&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; geojsonMarkerOptions = {
    radius: 5,
    fillColor: &lt;span style="color:#D69D85;"&gt;&amp;quot;#ff7800&amp;quot;&lt;/span&gt;,
    color: &lt;span style="color:#D69D85;"&gt;&amp;quot;#EE4500&amp;quot;&lt;/span&gt;,
    weight: 1,
    opacity: 1,
    fillOpacity: 0.8
};

&lt;span style="color:#57A64A;"&gt;// Function for displaying appropriate information in the popup&lt;/span&gt;
&lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; onEachFeature(feature, layer) {
	&lt;span style="color:#569CD6;"&gt;if&lt;/span&gt; (!feature.properties || !feature.properties.swell)
		&lt;span style="color:#569CD6;"&gt;return&lt;/span&gt;;
	&lt;span style="color:#569CD6;"&gt;var&lt;/span&gt; popupContent = &lt;span style="color:#D69D85;"&gt;&amp;quot;&amp;lt;h3&amp;gt;&amp;quot;&lt;/span&gt; + feature.properties.name + &lt;span style="color:#D69D85;"&gt;&amp;quot;&amp;lt;/h3&amp;gt;&amp;quot;&lt;/span&gt; + &lt;span style="color:#D69D85;"&gt;&amp;quot;Swell direction: &amp;quot;&lt;/span&gt; +
		feature.properties.swell + &lt;span style="color:#D69D85;"&gt;&amp;quot;&amp;lt;br&amp;gt;&amp;lt;a href=&amp;#39;&amp;quot;&lt;/span&gt; + feature.properties.link + &lt;span style="color:#D69D85;"&gt;&amp;quot;&amp;#39;&amp;gt;Surf report&amp;lt;/a&amp;gt;&amp;quot;&lt;/span&gt;
	layer.bindPopup(popupContent);
}

L.geoJson(beaches, {
    pointToLayer: &lt;span style="color:#569CD6;"&gt;function&lt;/span&gt; (feature, latlng) {
        &lt;span style="color:#569CD6;"&gt;return&lt;/span&gt; L.circleMarker(latlng, geojsonMarkerOptions);
    },
	onEachFeature: onEachFeature
}).addTo(beach_layer);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All done, now we can toggle our background tiles, and we can toggle the display of overlap information, beaches in our case. Below is a screenshot of the dark tiles with beach display turned on.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/leaflet_nightsurfing.png" alt="Night surfing" /&gt;&lt;/p&gt;
&lt;p&gt;Here is the &lt;a href="/files/leaflet_basic.html"&gt;interactive version&lt;/a&gt;.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2011/08/10/what-we-look-for-in-employees.html</id><title type="html">What We Look for in Employees</title><published>2011-08-10T16:10:00+01:00</published><updated>2011-08-10T16:10:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="What We Look for in Employees" href="https://blogs.conceptfirst.com/2011/08/10/what-we-look-for-in-employees.html" /><content type="html">&lt;p&gt;After a long break from blogging due to arrival and care of a couple of small children, I'm now hoping to get back in the habit again, so here goes.&lt;/p&gt;
&lt;p&gt;Our company &lt;a href="http://www.conceptfirst.com/"&gt;Concept First&lt;/a&gt; has currently been advertising and interviewing for a job position, and I wanted to feedback to the candidates that we didn't invite in, what we were looking for, and suggestions on how to improve their CVs.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;The classic developer article about interviewing is &lt;a href="http://www.joelonsoftware.com/articles/GuerrillaInterviewing3.html"&gt;Joel&lt;/a&gt;'s, which can be summarised as: find people who are 'Smart and Get Things Done'. I recommend reading this article, there is a lot of good advice in it, and we certainly look for the passion he discusses.&lt;/p&gt;
&lt;p&gt;I grabbed the following screen shot, from a &lt;a href="http://www.myplick.com/view/7CRyJCWLM71/CSUA-talk"&gt;talk&lt;/a&gt;, which I think captures perfectly what we are looking for in a candidate: &lt;img src="/files/recruitment.png" alt="recruitment" /&gt;&lt;/p&gt;
&lt;p&gt;The last point is important, especially when hiring very intelligent candidates. Clever people are great, but I have come across far too many examples of overly complicated software, especially architecture, which is only complex as a mental exercise for the programmer, not the problem domain. We need people who can get things done, and in as simple a way as possible.&lt;/p&gt;
&lt;p&gt;In my experience keeping things simple is often the most challenging aspect of software development.&lt;/p&gt;
&lt;p&gt;The other things that we particularly look for on CVs, are proof that the developer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Has an aptitude for coding, rather than a given skill set&lt;/li&gt;
&lt;li&gt;Can work with other people&lt;/li&gt;
&lt;li&gt;Can read as well as write code&lt;/li&gt;
&lt;li&gt;Can code to a given style, rather than their own personal style&lt;/li&gt;
&lt;li&gt;Understand and work with source control&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The best thing a candidate can do to assure us of these things is to get involved in an open source project.  It doesn't matter what language it is, what the source control is in ( I'd recommend github, codeplex or google code  projects), but find a project that interests you, fix bugs, add features. This requires you to understand somebody else's code, that you fit in with their style, that you test your features, and overall that could can work as productive member of a group.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2007/11/02/upgrading-os-x-to-leopard.html</id><title type="html">Upgrading OS X to Leopard</title><published>2007-11-02T16:05:00Z</published><updated>2007-11-02T16:05:00Z</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Upgrading OS X to Leopard" href="https://blogs.conceptfirst.com/2007/11/02/upgrading-os-x-to-leopard.html" /><content type="html">&lt;p&gt;Having just returned from two holidays: Colorado with a motorbike (lovely people, stunning scenery) and Firenze with my lovely girlfriend (lovely people, stunning architecture and art) I decided to update my OS X partition to the new shiny leopard. Here are a couple of notes of how I got on, which is hopefully useful to anyone else doing the same.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h1 id="leopard"&gt;Leopard&lt;/h1&gt;
&lt;p&gt;Initially I chucked the disk in and just did an install, this installed the OS over the previous one. Everything seemed to work fine, except I had installed Java 1.6 beta from Apple, and this didn't work in the new OS (see google for rants about 1.6 JVM not being supported). I needed a working Java for programs such as &lt;a href="http://freemind.sourceforge.net/"&gt;FreeMind&lt;/a&gt;. I tried to sort it out by changing symlinks in the system folders, uninstalling the beta, but basically just broke everything. I decided to reinstall the whole thing, which requires you to notice the 'customise' button on the installer, allowing you to request it clear the disk first (but usefully also allows you to not install various things like printer device drivers which saves you gigs of space !).&lt;/p&gt;
&lt;p&gt;Having a new install, things definitely felt faster. I also booted into bootcamp, put in the 10.5 disk which installed the latest windows drivers for everything.&lt;/p&gt;
&lt;p&gt;I got most of my development software sorted in an hour or so. The new OS seems to have lots of development tools built in (I installed the XCode package from the install disk as well), like subversion, ruby and even ruby on rails (saves on things to install via &lt;a href="http://www.macports.org/"&gt;MacPorts&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;When you buy a Mac, it comes with the iLife software (iPhoto, iDVD and all that) but an OS upgrade doesn't contain them, so I reinstalled iPhoto from my 10.4 disks which worked fine.&lt;/p&gt;
&lt;h1 id="parallels"&gt;Parallels&lt;/h1&gt;
&lt;p&gt;To get Parallels working I had a look on google and people recommended running the newly released Beta 5540 (your license will work fine with this, no need for beta license) - find it &lt;a href="http://www.parallels.com/products/desktop/beta"&gt;here&lt;/a&gt;. I installed it, it detected my bootcamp partition, but trying to run it caused an immediate OS X crash. I restarted the machine any everything was fine. Or so I thought.&lt;/p&gt;
&lt;p&gt;Next time I logged into windows I got an error immediately after entering my log in details: &lt;strong&gt;A problem is preventing Windows from accurately checking the license for this computer. Error code: 0x80070002&lt;/strong&gt;, followed by an immediate logout. I tried both Parallels and Bootcamp and the same issue on both ! A Microsoft &lt;a href="http://support.microsoft.com/kb/310794"&gt;kb&lt;/a&gt; describes this as related to an issue in Windows paranoid licensing checks. Other similar issues seemed related the use of Volume Licensing keys (I use our company's VL keys for my windows machines) - I tried the suggested fixes but no help. After lots of messing around, I found a &lt;a href="http://www.jsifaq.com/SF/Tips/Tip.aspx?id=8521"&gt;post&lt;/a&gt; on the interweb that suggested it was an issue with some files in system32, oembios.*. Looking at these 3 files, they had change dates in the last 24 hours. A copy of the files from another XP SP2 installation fixed the issue (via Safemode and a USB key) , returning change dates back to 2004, got everything working perfectly again.&lt;/p&gt;
&lt;p&gt;No idea what broke these files, whether it was Parallels, Bootcamp drivers or something else ?&lt;/p&gt;
&lt;p&gt;Another oddity, to fix windows to run in both Parallels and Bootcamp, I had to apply the fix once in each mode (which is really weird - somehow related to the use of different hardware configurations to allow parallels to do its magic - anybody understand how this works ??)&lt;/p&gt;
&lt;h1 id="misc"&gt;Misc&lt;/h1&gt;
&lt;p&gt;The only other issue I have come across was that once connected to a VPN (to a windows 2000 server), DNS lookups on my Mac were really slow (like 20s). Looking on the net, there were suggestions that the resolver stack had changed slightly in the new OS, and may be working badly with old routers / dns servers in some way. Adding my local DNS server to the VPN's DNS settings (under Advanced in Network system preferences) seems to have done the trick though.&lt;/p&gt;
&lt;p&gt;Now having everything working fine and dandy, there's no excuse for putting off actual useful work, how disappointing ;-)&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2007/07/12/professional-development-on-a-macbook-pro.html</id><title type="html">Professional Development on a MacBook Pro</title><published>2007-07-12T16:53:00+01:00</published><updated>2007-07-12T16:53:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Professional Development on a MacBook Pro" href="https://blogs.conceptfirst.com/2007/07/12/professional-development-on-a-macbook-pro.html" /><content type="html">&lt;p&gt;Like a number of people in the Delphi Community ( &lt;a href="http://www.stevetrefethen.com/blog/RunningWindowsVistaOnAMacBookPro.aspx"&gt;Steve Trefethen&lt;/a&gt;, &lt;a href="http://www.distribucon.com/blog/PermaLink,guid,0966f2d8-377b-4223-99b0-b4feff53cd60.aspx"&gt;Dan Miser&lt;/a&gt; ), and the development community as a whole, I now do all my development on a MacBook Pro. I changed to an Apple machine six months ago, for a number of reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I needed a new laptop, and the MacBook Pro hardware is so goddamn thin, light, and good looking.&lt;/li&gt;
&lt;li&gt;I am becoming increasingly disillusioned by Windows, especially the new &lt;a href="http://www.forbes.com/security/2007/02/10/microsoft-vista-drm-tech-security-cz_bs_0212vista.html"&gt;DRM&lt;/a&gt; stuff.&lt;/li&gt;
&lt;li&gt;I fancied trying out OSX, a change is as good as a rest and all that.&lt;/li&gt;
&lt;li&gt;Bootcamp and virtualisation allow me to use Windows XP on an Apple laptop.&lt;/li&gt;
&lt;li&gt;The web is freeing us from being locked into particular Operating Systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a professional developer, most of my clients run Windows, and most of my native development is done using Visual Studio 2005 or Delphi 2006, connecting to SQL Server or Oracle backends. I boot my laptop into Windows to do this work, or use Parallels to run it with Mac OSX (when I got my MacBook Pro I got it with 3G of RAM so Windows runs pretty fast inside OSX). Increasingly though I am doing web development, which means I can do much more work inside just OSX.&lt;/p&gt;
&lt;p&gt;The more I have used OSX, the more I prefer it to Windows, so I have put together this list of tools and hints for doing professional development on OSX:&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id="using-bootcamp"&gt;Using Bootcamp&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Steve has got an excellent &lt;a href="http://www.stevetrefethen.com/blog/WindowsKeyboardShortcutsOnAMacBookPro.aspx"&gt;list&lt;/a&gt; of the keyboard mapping for Windows&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.parallels.com/products/desktop/"&gt;Parallels&lt;/a&gt; allows runs Windows (from a bootcamp partition) in OSX&lt;/li&gt;
&lt;li&gt;As does &lt;a href="http://www.vmware.com/products/desktop/fusion.html"&gt;VMWare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="using-osx"&gt;Using OSX&lt;/h2&gt;
&lt;p&gt;One of the things there first confused me using OSX is the link between a visual Window and a running program. Having used Windows for the best part of 15 years, I had the strong mental link between having a open window and having a program running. OSX is much more like the systray in a way. In most instances, a program carries on running even if all its windows are shut. At first this seems odd, but now I am actually used to Mail and iCal running in the background, collecting mail and showing me reminders, without having windows cluttering up the place or being minimised. Also the dock changes icons depending on status of the program, so I can see that new mail is waiting, without requiring an open window to tell me.&lt;/p&gt;
&lt;p&gt;I guess it is the unix heritage, but OSX seems much happier having loads of programs running a the same time, than Windows would (or maybe this laptop has just got too much memory).&lt;/p&gt;
&lt;p&gt;Another change from the Windows way of thinking is about installation of software. In OSX an application is a directory with a name of BlahBlah.app. It contains all that is necessary to run. So drag and drop to install software, move things around as desired, and delete it when no longer wanted. Only software that needs to make system changes needs to have install scripts.&lt;/p&gt;
&lt;p&gt;You need to install &lt;a href="http://quicksilver.blacktree.com/"&gt;Quicksilver&lt;/a&gt; for launches programs, and more advanced voodoo. Have a look at some of the screen casts at &lt;a href="http://feeds.feedburner.com/TheAppleBlogScreencasts"&gt;The Apply Blog&lt;/a&gt;, a good beginner one is &lt;a href="http://theappleblog.com/2007/06/29/screencast-quicksilver-for-beginners/"&gt;here&lt;/a&gt;. You won't believe for a powerful bit of software it is.&lt;/p&gt;
&lt;p&gt;Another thing worth getting your head around is this idea of OSX services. These are simple 'services' that are provided to all programs running, accessible of the programs menu. While there are some useful ones built in, there really come into the own where you start changing them using &lt;a href="http://www.manytricks.com/servicescrubber/"&gt;Service Scrubber&lt;/a&gt; and &lt;a href="http://wafflesoftware.net/thisservice/"&gt;This Service&lt;/a&gt;. See some examples from &lt;a href="http://daringfireball.net/2007/04/google_lucky_thisservice"&gt;John Gruber&lt;/a&gt; about writing your own scripts and making them available to all apps (although I'd recommend using Ruby over Perl ;-).&lt;/p&gt;
&lt;h2 id="web-development"&gt;Web Development&lt;/h2&gt;
&lt;p&gt;It goes without saying that you should be using Firefox with Firebug for web development. Day to day browsing I use &lt;a href="http://www.caminobrowser.org/"&gt;Camino&lt;/a&gt; which is the firefox engine inside a more OSX integrated and looking program.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://macromates.com/"&gt;Textmate&lt;/a&gt; is a great editor, as most people know, but if you are doing any JavaScript development make sure you get the &lt;a href="http://macromates.com/blog/2007/javascript-tools/"&gt;JS Tools&lt;/a&gt; bundle. Having your script 'lint'ed everything you save is a great productivity improver. Also get the &lt;a href="http://projects.validcode.net/getbundle"&gt;GetBundle&lt;/a&gt; bundle to make it easy to manage extensions and find new ones. Blog writing is easy with the built in &lt;a href="http://daringfireball.net/projects/markdown/"&gt;markdown&lt;/a&gt; support.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.eclipse.org/"&gt;Eclipse&lt;/a&gt; (especially with the new CodeGear betas running inside Eclipse ) has plugins to do pretty much everything (although I still use Textmate most of the time).&lt;/li&gt;
&lt;li&gt;Anybody know of a Fiddler equivalent for OSX ?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="subversion"&gt;Subversion&lt;/h2&gt;
&lt;p&gt;Does anybody use anything else anymore ?
I use the tigris plugin &lt;a href="http://scplugin.tigris.org/"&gt;scplugin&lt;/a&gt; to have subversion integration with the finder. It is not quite as good as tortoise. There is also &lt;a href="http://www.lachoseinteractive.net/en/community/subversion/svnx/features/"&gt;Svnx&lt;/a&gt; which is ok, but I don't find the UI all that intuitive.&lt;/p&gt;
&lt;h2 id="database-access"&gt;Database Access&lt;/h2&gt;
&lt;p&gt;For connecting to Oracle, I use the free &lt;a href="http://www.oracle.com/technology/products/database/sql_developer/index.html"&gt;SQL Developer&lt;/a&gt; which has a native OSX version. Most of the open source databases have native clients (e.g. Postgres), but otherwise I use &lt;a href="http://www.aquafold.com/downloads.html"&gt;Aqua Studio&lt;/a&gt; v4.7 which is free. One of the nice things is most of the tools are Java based, so if you can find a JDBC package for your database, chuck it in /Library/Java/Extensions and then all the Java apps on your machine have connectivity to it (I have found ones for SQL Server, Oracle, MySql and Postgres).&lt;/p&gt;
&lt;h2 id="other-languages-database-engines"&gt;Other Languages / Database Engines&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Anything available in the Open-source world, if not explicitly released for OSX, is normally available on &lt;a href="http://darwinports.com"&gt;DarwinPorts&lt;/a&gt; or &lt;a href="http://finkproject.org"&gt;Fink&lt;/a&gt;, projects to make linux/unix software compilable on OSX (which is a unix variant behind the scenes), and easily installable handling all the dependancies etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;Are there any useful development tools or hints I have missed ? Let me know and I'll try and keep a development bias list on this page.&lt;/p&gt;
&lt;p&gt;And if your still using boring old Windows, come and join the revolution !&lt;/p&gt;
&lt;h2 id="comments-on-old-platform"&gt;Comments (on old platform)&lt;/h2&gt;
&lt;p&gt;Steve Trefethen said ...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Great post. It's good to have  growing list of bloggers using this setup for Development to share information like this.  Thanks and subscribed!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Fernando Madruga said ...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nice to know that using OSX can be a viable solution now that MS is screwing up big time on their OSes! Heck, my father-in-law, which is a &amp;quot;regular&amp;quot; computer user, just had his notebook re-formated and installed Windows XP to &lt;em&gt;upgrade&lt;/em&gt; his brand new Vista! It suits him well, as I had warned him against Vista but then he bought a new laptop with Vista on it and after a couple months of suffering decided it was just about time to start working again! :)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Andre Voget said ...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We also develop our software programs on Mac OS X using Parallels Desktop. It's great to make backup images of the whole development setup.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Jose Crespo said ...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Me too.
I have a MacBook 2Gb. I don't use BootCamp. With Parallels I can run Delphi, VisualStudio, SQLServer,Firebird. My VM is congigured with 700MB. Untin my MacBook, I had two computers. Always a mac for enjoy and photos (since 1986 ... not the same of course, but I have all of them) and a PC for development in Delphi and VisualStudio.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rob Uttley said ...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My situation/setup is similar to Jose Crespo's (above).... 2Gb MacBook Pro (last summer's model, unfortunately, so it's Core Duo not Core 2 Duo).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;When I'm in the office it's plugged into an apple keyboard, mouse and 21&amp;quot; Cinema display, the laptop on a griffin stand and the laptop screen being a good place to leave Mail.app and browser windows open whilst I'm working on the big screen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I use Parallels (v2, build 3214) with a 15Gb virtual machine that include Delphi 7, SQL Server Express, Interbase, Office and chunks of VS2005, all running under XP Pro SP2. The Parallels system has about 700Mb of ram assigned to it, and configured so that it appears on my network as a machine in it's own right, alongside the Mac and various test machines (both real and virtual). I don't make use of coherence etc - I find it less confusing when developing to have the PC window taking almost all of the display space anyway.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The performance is great, and the convenience of bring able to back-up an entirely 'bootable' copy of my dev box every night is awesome (I have a little piece of applescript/automator that just pushes the vm harddrive over to a drive on the main file server). Given the price of diskspace, and the speed of networks, not only is this kind of backup perfectly feasible but once you start using it you quickly have a handful of different virtual machines, and you put the images on the hard drive that you're going to need for the next couple of days' work.... it's a really nice way to have everything to hand without having one huge monolithic drive with absolutely everything installed (and all the attendent problems that can bring).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Talking of convenience, the MacBook Pro is a dream. Okay, it's not small thanks to the 17&amp;quot; screen, but it's slim and light, and when I get on a train and start working it just goes and goes and goes - I get into the two-and-a-half-hours and still running stage frequently without making any real sacrifices on the battery front.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm not a huge fan of the keyboard, and having to ctrl-click on the trackpad for a right-click (when I haven't got a mouse plugged in) is a pain. Once you get used to OS X I find it a nicer place to 'play' in - my fiance is getting used to OS X over Windows XP and the next box I buy my mum will run Tiger/Leopard, not XP/Vista. For most of the time, it really does just work. :-)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Best of all is the reaction you get when you go out to a client's to demo something and they see you break out a Mac, then rapidly switch into a PC in a Window... :-)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="followup-from-2011"&gt;Followup from 2011&lt;/h2&gt;
&lt;p&gt;Revisiting this page when moving it to another blog engine, I'd suggest:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VMWare fusion for virtualisation&lt;/li&gt;
&lt;li&gt;Navigate lite database tools (free and on the AppStore)&lt;/li&gt;
&lt;li&gt;Versions for Subversion&lt;/li&gt;
&lt;li&gt;GitX for git&lt;/li&gt;
&lt;li&gt;Homebrew for installing software&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hem.bredband.net/catacombae/hfsx.html"&gt;HFSExplorer&lt;/a&gt; to access files when inside bootcamp&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cord.sourceforge.net/"&gt;CoRD&lt;/a&gt; for remote desktop into windows machines&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2007/07/12/rules-of-thumb-to-make-a-project-work.html</id><title type="html">Rules of Thumb to Make a Project Work</title><published>2007-07-12T15:53:00+01:00</published><updated>2007-07-12T15:53:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Rules of Thumb to Make a Project Work" href="https://blogs.conceptfirst.com/2007/07/12/rules-of-thumb-to-make-a-project-work.html" /><content type="html">&lt;p&gt;I am currently coming to the end of a large project for one of our clients, where I have been acting in the Business Analyst and Technical Lead roles. It has been a fun and successful project, and I wanted to pass along some of the lessons I've learnt (again) about how to make Technical Analysis (and the project as a whole) successful (and also make a checklist for next time around ;-).&lt;/p&gt;
&lt;p&gt;It must be remembered that IT solutions (and really any business change) are all about two things: Incentives and Trade-offs.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id="incentives"&gt;Incentives&lt;/h2&gt;
&lt;p&gt;Incentives are important because ultimately people are lazy, and this is A Good Thing. We all have way too many things to do in our lives, both personal and professional, and therefore being lazy is a very successful evolutionary adaptation on the part of Homo Sapiens. The body only bothers to grow stronger muscles when we actually need them, rather than paying the cost of having them all the time. The same approach can be seen in our behaviour.&lt;/p&gt;
&lt;p&gt;To make people want to use your new approach / program / business process, you need to make it worth their while. This seems obvious but I see it being forgotten time and again. Sometimes the incentive is fear of being fired, but ideally you want to make your user's lives easier and more efficient. If you can't incentivise them to change their behaviour, they won't.&lt;/p&gt;
&lt;h2 id="trade-offs"&gt;Trade-offs&lt;/h2&gt;
&lt;p&gt;Any new system involves trade-offs. If it was a simple no brainer, it would have been done ages ago. Management often want better visibly of information (and normally control as well), but they need to be made to understand that this will have added costs, whether that is in increased paperwork, administration, or work enjoyment for the staff. Often people assume they get increased efficiencies (or whatever) for free, but there is always a downside. Not that that is a problem, but it needs to be understood and communicated (it goes into the areas of risk management). Communicating this as quickly as possibly, and ideally suggesting different cost/benefit scenarios, makes sponsors think more about why they are asking for things, and better controls their expectations.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;From these two overriding principles, we then have a randomly ordered list of my current best practises.&lt;/p&gt;
&lt;h2 id="technical-analysis-best-practise"&gt;Technical Analysis Best Practise&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Always sit with the users&lt;/li&gt;
&lt;li&gt;It's all about incentive&lt;/li&gt;
&lt;li&gt;Mastery of language is important&lt;/li&gt;
&lt;li&gt;Its easier if you don't care&lt;/li&gt;
&lt;li&gt;Avoid the middle men&lt;/li&gt;
&lt;li&gt;Flexibly and Power =&amp;gt; Complex and slow&lt;/li&gt;
&lt;li&gt;Easy to think != Easy to do. Details matter&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The above points in more detail:&lt;/p&gt;
&lt;p&gt;1 - Always sit with the users&lt;/p&gt;
&lt;p&gt;Sounds obvious, but on every project I see it being ignored. 30 minutes of sitting with the actual users you are providing a solution for, will give you better and more accurate understanding than talking to management or reading analysis documentation for days. Business processes change, often the experts on that process are out of touch with what is actually going on. As well as getting a good detailed understand of what they do, and what their problems are, another benefit of watching users is how often there are tiny little changes you can make (trivial software changes like adding a shortcut, or making some non-modal) that can save each user huge amounts of time and stress everyday !&lt;/p&gt;
&lt;p&gt;If you haven't sat and watched your users recently, you're probably not building a system that solves their real problems !&lt;/p&gt;
&lt;p&gt;2 - It's all about incentive&lt;/p&gt;
&lt;p&gt;A reiteration of the point about, but really a reminder to think of the incentives of each distinct groups of users. Management will have different incentives than the day to day users. It is worth thinking how to incentivise each different group to use the system in the way you want it used.&lt;/p&gt;
&lt;p&gt;3 - Mastery of language is important&lt;/p&gt;
&lt;p&gt;The language you use, both in your application, but especially when communicating ideas and progress to project sponsors, is incredibly important. Firstly words are very powerful in the human mind, they are the key way we link thoughts, feelings, expectations and fears together. The project I have been working on was half way through when I came on board, and because it was late and not delivering, had a number of perceptions, worries and expectations, all hanging off the 'name' of the project. One of the first things the team did was change the project name. This gave us a blank sheet to work with, meant that people's previous perceptions were 'invalidated', giving us breathing room to solve the problems in a different way.&lt;/p&gt;
&lt;p&gt;Secondly, unless you use terms like Risk and Trade-off, management and sponsors won't consider these things. Just by using the words, you can make them better consider that they are asking for, and incentivise them to make better decisions (I am labouring the theme enough yet ? ;-)&lt;/p&gt;
&lt;p&gt;4 - Its easier if you don't care&lt;/p&gt;
&lt;p&gt;I am an outside supplier, so it is much easier for me to tell people the situation as is, rather than having to worry too much about internal politics. You obviously don't go out of your way to cause problems, and need be sensitive to the people from the business that you work with who don't have the same freedoms as you, but being truthful about situations is very important to the overall success of a project. Having said that, obviously always keep copies of all emails, and confirm verbal conversations via email, so you always have an audit trail to support your decisions.&lt;/p&gt;
&lt;p&gt;5 - Avoid the middle men&lt;/p&gt;
&lt;p&gt;In any remotely large business there will tend to be lots of layers of management (unless you work somewhere very groovy like Google Inc). Each layer will have there own agendas, desires and aims, and will wish to communicate information in ways that either make them look good or at least reduce how bad they look. Whilst this is understandable, and just human nature, projects are much more successful if you can talk honestly to the ultimate users at one end of the spectrum, and the key sponsors / decision makers at the other end. The more layers in the way, the more the problems, drivers, issues, etc. get obscured and less clear. Politically this can be hard, and take time, but it is worth it in the end.&lt;/p&gt;
&lt;p&gt;6 - Flexibly and Power =&amp;gt; Complex and slow&lt;/p&gt;
&lt;p&gt;This is really a more concrete example of the trade-off principle. Flexibility and powerful is what everybody wants their computer systems to be. However these two requirements ALWAYS imply complexity, and complexity implies complex (and potentially) slow running software. The art of being a good designer or architect is coming up with abstractions that are both powerful and a simple as possible, but always remember that powerful and flexibly implies clever decision making which implies complexity. Bacteria are very simple, but don't do a huge amount but breed. Look at the complexity, both in body and mind, to get something as flexible and powerful as a human being. Fight to keep things simple, and your are much more likely to get a working solution ready in time.&lt;/p&gt;
&lt;p&gt;A good example of this is the control issue. Management quite often want to stop people using systems in certain 'incorrect' ways (not entering data in certain ways, formats, sequences, whatever) . Often their approach is to wrap these systems in further layers that prevent the 'incorrect' use from occurring. Two problems with this though: 1. It's loads of work and 2. There are often certain exceptional situations where it is necessary to put in data 'incorrectly'. Often the simpler approach is just to provide an exception report. Management can use this to make sure systems are being used correctly, and if there is a valid reason using it wrongly, its not a problem. Making it a management rather than IT issue.&lt;/p&gt;
&lt;p&gt;7 - Easy to think != Easy to do. Details matter&lt;/p&gt;
&lt;p&gt;This is obvious to developers, but sometime can be hard to communicate to project sponsors. It is something I still have problems with conveying successfully. Steve Yegge &lt;a href="http://steve.yegge.googlepages.com/nonesuch-beast"&gt;discusses&lt;/a&gt; the same point. For the same 'lazy' reasons as discussed at the start, people don't think through what they are asking for, and whilst this is annoying, your job as a technical analyst is to communicate the consequences of what people are asking for. In a similar vein, any technology you have been asked to use should be 'proof of concept'ed as quickly as possible. Things often work in principle, but in practise are too buggy, slow or unreliable to actually use in production systems. Ultimately this is why I don't trust analysts who can't program, they never understand the need to capture the exact details of a project, because they don't actually have to build working systems, they don't really realise its importance.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Hope this list is useful for somebody. I'm off to work out what the trade-offs and incentives for writing blog articles are ;-)&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2007/06/05/feedburner-and-apache-redirects.html</id><title type="html">Feedburner and Apache Redirects</title><published>2007-06-05T16:15:00+01:00</published><updated>2007-06-05T16:15:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Feedburner and Apache Redirects" href="https://blogs.conceptfirst.com/2007/06/05/feedburner-and-apache-redirects.html" /><content type="html">&lt;p&gt;Looking at the load this blog is causing, virtually all of it's requests are for the syndication feeds so I decided to off-load the network bandwidth to &lt;a href="http://www.feedburner.com"&gt;Feed Burner&lt;/a&gt; ( recently acquired by Google).&lt;/p&gt;
&lt;p&gt;Feedburner basically checks your site every 30 minutes (you can also manually request an update) and caches the response. Rather than ask my subscribers to change the feeds source, I decided to use Apache to redirect all requests to my feeds to feedburner, unless it was actually feedburner requesting the information.&lt;/p&gt;
&lt;p&gt;To get this to work took a bit of Apache shenanigans, so I thought I would document it here both for myself and for anyone else who needs to do the same. It is also a useful example of how powerful Apache is, particularly as a forward facing server than manages the virtual URL space and links it up to various webs server technologies and platforms behind the scenes (loose URL =&amp;gt; implementation coupling). The blog is running on Ruby on Rails, Typo engine, running on port 4000 internally. Our firewall blocks outside access to this port, so we use Apache to proxy it for us (it rewrites any URL's on the way out to be the correct external address). We also use it as an SSL gateway, so we setup all the certificates in just one place.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;All configuration in Apache is done in the http.conf file. Here is the setup I am using for the blogs subdomain with notes of what is going on. There is also a similar &lt;code&gt;VirtualHost&lt;/code&gt; setting for 443 (SSL Access), but doesn't really add much by posting it here. I will give a quick summary of what is going on here, but full details can be found on the excellent &lt;a href="http://httpd.apache.org/docs/"&gt;Apache documentation&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Concept First blog
&amp;lt;VirtualHost *:80&amp;gt;
  ServerName blogs.conceptfirst.com
  DocumentRoot &amp;quot;e:/Blogs/www&amp;quot;
  ErrorLog &amp;quot;e:/blogs/logs/error.log&amp;quot;
  CustomLog e:/blogs/logs/access.log common
  DirectoryIndex index.html
  &amp;lt;Directory &amp;quot;e:/Blogs/www&amp;quot;&amp;gt;
    Options none
    AllowOverride None
    Order allow,deny
    Allow from all
  &amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tell apache which virtual host name this is for, where static files are, where to put log files, etc.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RewriteEngine on
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;RewriteEngine on tells apache to apply the following rules. Apache can handle redirects and proxying using &lt;code&gt;Redirect&lt;/code&gt; and &lt;code&gt;ProxyPass&lt;/code&gt; directives, but I had issues with the order things were being done in, so used rewrite rules for it all. Rewrite rules are more flexible and powerful than the individual Redirect or ProxyPass directives, so its worth understanding their capabilities in full.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RewriteLogLevel 0
  # RewriteLog &amp;quot;e:/rewrite.log&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If having problems debugging rewrite rules, I'd recommend just setting up a log file and turning RewriteLogLevel to 9. Turn it off by putting back to 0 when everything is working.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # Redirect feeds to feedburner unless actually feed burner. Only do main ones
  RewriteCond %{HTTP_USER_AGENT} !FeedBurner  
  RewriteRule /xml/rss20/feed.xml$ http://feeds.feedburner.com/ConceptFirst [R,L]
  RewriteCond %{HTTP_USER_AGENT} !FeedBurner  
  RewriteRule /xml/atom10/feed.xml$ http://feeds.feedburner.com/ConceptFirst [R,L]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is the configuration that tells Apache to redirect all my traffic to feedburner unless its from Feedburner itself.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RewriteCond: A condition rule, applies to the next line. It is negated by !&lt;/li&gt;
&lt;li&gt;RewriteRule: A rewriting rule, with a match part (regular expression) and a target&lt;/li&gt;
&lt;li&gt;[R]: Send a HTTP 302 redirect&lt;/li&gt;
&lt;li&gt;[P]: Do a internal proxy&lt;/li&gt;
&lt;li&gt;[L]: Stop applying rewrite rules after this one&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So the first two lines tells Apache (in random syntax pseudo-code): &lt;code&gt;IF (HTTP_USER_AGENT &amp;lt;&amp;gt; 'FeedBurner') AND (URL = '/xml/rss20/feed.xml') THEN SEND_REDIRECT_TO('http://feeds.feedburner.com/ConceptFirst') AND STOP_PROCESSING_RULES&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Feedburner uses the HTTP header USER_AGENT set to FeedBurner so that is how we detect it and don't redirect it to itself ! I am only redirecting my main feeds here, the categorised feeds and individual comment feeds are still handled by the blog engine.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # Make admin secure
  RewriteRule /accounts(.*) https://blogs.conceptfirst.com/accounts$1 [R,L] 
  RewriteRule /admin(.*) https://blogs.conceptfirst.com/admin$1 [R,L] 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These two lines use a similar rules to make sure the admin parts of the blog are handled through HTTPS so we don't get any cleartext passwords floating around on the net. The $1 at the end of the redirect is the matched data from (.*) in the regular expression. So if the URL is /admin/login, $1 will be /login.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # Proxy to mongrel for everything but the media directory
  RewriteCond $1 !^Media/(.*)
  RewriteRule /(.*) http://localhost:4000/$1 [P,L]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is the rule that actually gets the blog pages from the internal ruby on rails app. The condition rule is checking the URL match to make sure it is not part of the Media subdirectory (this is a static directory that apache serves up, it contains images for blog entries, etc). Everything else gets passed to the server running on 4000.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ExpiresActive On
  ExpiresByType text/html &amp;quot;now plus 1 day&amp;quot;
  ExpiresByType image/gif &amp;quot;now plus 1 week&amp;quot;
  ExpiresByType image/jpeg &amp;quot;now plus 1 week&amp;quot;
  ExpiresByType text/css &amp;quot;now plus 1 week&amp;quot;
  ExpiresByType image/png &amp;quot;now plus 1 week&amp;quot;
  ExpiresByType image/jpg &amp;quot;now plus 1 week&amp;quot;
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Expires stuff is the Apache way of setting the HTTP expires headers when sending responses. I've set images to be cached on the client for a week to help reduce bandwidth and load on the server.&lt;/p&gt;
&lt;p&gt;I greatly recommend Apache, its very easy to setup, and very powerful (although it does test your knowledge of regular expressions :-), we've used it to proxy Ruby On Rails, Cold Fusion, IIS and home grown web servers, and its great for rewriting URLs to make them technology agnostic and nice and RESTful.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2007/06/05/sql-server-2000-spatial.html</id><title type="html">SQL Server 2000 Spatial ?</title><published>2007-06-05T15:45:00+01:00</published><updated>2007-06-05T15:45:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="SQL Server 2000 Spatial ?" href="https://blogs.conceptfirst.com/2007/06/05/sql-server-2000-spatial.html" /><content type="html">&lt;p&gt;SQL Server 2000 has always been one of my favourite bits of software. I have written various software that runs on top of MSDE and always been really pleased with it.&lt;/p&gt;
&lt;p&gt;Having spent a great deal of time recently working with Oracle 10, I have really noticed how much easier administration is with SQL Server. I have also had lots of issues with Oracle drivers (in particular where CLOB fields are used).&lt;/p&gt;
&lt;p&gt;I have to admit to being rather underwelmed by SQL Server 2005. I'm not a great fan of stored procedures (I believe the logic should be in a middle tier) and certainly not of running .net code inside a DB server.&lt;/p&gt;
&lt;p&gt;One thing I was looking forward to was the addition of spatial algorithms to SQL Server.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Wikipedia notes that spatial data is planned for the next version, but for the mean time I will be using Oracle for my clients, and personally Postgres.&lt;/p&gt;
&lt;p&gt;I think Microsoft really missed out here. More and more of my clients need to store spatial data, I would love to use SQL Server, but my money has to goes to Oracle or an open source database.&lt;/p&gt;
&lt;p&gt;Pull your finger out Microsoft and make sure 2008 is spatial enabled !&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2007/02/01/firebug.html</id><title type="html">Firebug</title><published>2007-02-01T15:42:00Z</published><updated>2007-02-01T15:42:00Z</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Firebug" href="https://blogs.conceptfirst.com/2007/02/01/firebug.html" /><content type="html">&lt;p&gt;I've been having a lot of problems with comments on this blog taking forever to post, being silently rejected, etc.  After lots of messing around, I found it to be a combination of a) A theme that doesn't handle problems with comments being locked and b) the built in anti spam protection making comments take 30 seconds rather than half a second to post.&lt;/p&gt;
&lt;p&gt;I never want to calculate how much of my life I've lost to spam or spam filters, doesn't bare thinking about.&lt;/p&gt;
&lt;p&gt;Apologies to anybody who tried to post a comment.&lt;/p&gt;
&lt;p&gt;Whilst doing this, I used a great new feature of the absolutely essential web development plug in for Firefox, &lt;a href="http://getfirebug.com/"&gt;Firebug&lt;/a&gt;. One of the new views, network activity monitoring, shows all the files loaded (the contents of the request and response) and how long overall the process took.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Absolutely essential for debugging AJAX code, but also brilliant to see where you can speed up your page load times.  The following shows me debugging some time issues on one of a site using &lt;a href="http://dev.live.com/virtualearth/default.aspx?app=virtual_earth"&gt;Virtual Earth&lt;/a&gt;. Watching some of the files load from Microsoft's site, and take 10 seconds, suggested I make key files local. This massively reduces the load times, and makes the whole site feel much nicer.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/firebug.png" alt="Firebug" /&gt;&lt;/p&gt;
&lt;p&gt;I cannot recommend Firebug strongly enough !&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2007/01/14/useful-delphi-code.html</id><title type="html">Useful Delphi Code</title><published>2007-01-14T15:35:00Z</published><updated>2007-01-14T15:35:00Z</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Useful Delphi Code" href="https://blogs.conceptfirst.com/2007/01/14/useful-delphi-code.html" /><content type="html">&lt;p&gt;Just realised I haven't written a blog post for 2.5 months, and I've just got back from a lunchtime surfing session, so I'm not really in the mood for real work.
I thought I'd post some of my basic Delphi library code I use time and again in the hope it is of some use to other Delphi developers. Do what ever you want with it, I don't guarantee its without bugs, but most of it has been used in production code for quite a long time.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;The full file with all the implementation can be found here: &lt;a href="/files/blog.pas"&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The following are useful for conditional logic for development vs production code, debugging, etc.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;procedure BreakpointInIDE;
function CurrentExceptionMessage: string;
function IsRunningUnderIDE: boolean; inline;    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following function is useful for preventing the unsitely errors that can occur as a Delphi Application throws Exceptions as it shuts down. While ideally this should never happen, previous exceptions can leave forms in a have constructed state, and the TApplication's attempt to clean up them then causes horrible dialogs frightening users. Even the IDE has been known to do this. The code hooks the various Exception raised pointed in the RTL to silently ignore the errors. If running inside the IDE, it will also post a message to the event log, and cause the IDE to breakpoint to highlight there is an issue.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;procedure HookShutdownToHideExceptions;    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="/blog/2006/05/08/class-helpers-good-or-bad/"&gt;Helper Classes&lt;/a&gt; for TList, TStream and TStrings. In particular I use the ID accessors of TStrings a lot when putting records into UI elements. Makes it very easy to look up the ID of the record in a combo box, for example. It uses the Object field in a list item to store the ID. Helpers require at least Delphi 2006.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;TListHelper = class helper for TList
  procedure FreeSelfAndContainedObjects;
end;

TStringsHelper = class helper for TStrings
private
  function GetID(Index: Integer): ID;
  procedure SetID(Index: Integer; const Value: ID);
  function GetDescFromID(ID: ID): string;
  function GetIDFromDesc(const Desc: string): ID;
  function GetObjectByString(text: string): TObject;
public
  function AddPair(const Name, Value: string): integer;
  function AddID(const Desc: string; PrimaryKey: ID): Integer;
  function AddObj( const Name, Value: string; Obj: TObject ): Integer;
  function ContainsKey( const Key: string ): boolean;
  function ContainsString( const Text: string ): boolean;
  function ContainsValue( const Value: string ): boolean;
  procedure FreeSelfAndContainedObjects;
  function IndexOfID( ID: ID ): integer;
  property DescFromID[ID:ID]: string read GetDescFromID;
  property IDFromDesc[const Desc: string]: ID read GetIDFromDesc;
  property IDs[Index: Integer]: ID read GetID write SetID;
  property ObjectByString[ text: string ]: TObject read GetObjectByString;
end;

TStreamHelper = class helper for TStream
public
  function AsString: string;
  function RewindToStart: TStream;                                      // Returns self to allow easy chaining of calls
  procedure WriteString( const Text: string );
  procedure WriteStringAndBreak( const Text: string );
end;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following two classes are 2 example simple container objects based on records rather than classes. The nice thing is they don't have to be memory managed like classes do, the compiler will handle all of that for you. They are not as fully featured as string lists, but are useful for simple tasks. They are also reasonabilly efficient, as the dyanmic arrays they use are copy by reference. The only thing to remember is to use the Clone method if you actually want a whole new copy of the data. I have about 4 or 5 different variants of these to store ID =&amp;gt; Name, Name =&amp;gt; Variant, etc, but you get the idea.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;TSimpleStringList = record
private
  FItems: array of string;
  function  GetCount: integer; inline;
  function  GetItem(index: integer): string;
  procedure SetItem(index: integer; const Value: string);
public
  function  Add(const line: string): integer;
  procedure Clear;
  function  Clone: TSimpleStringList;
  function  Contains(const s: string): boolean;
  function  IndexOf(const s: string): integer;
  function  IsMissing(const s: string): boolean;
  property  Count: integer read GetCount;
  property  Items[index: integer]: string read GetItem write SetItem; default;
end;

TSimpleStringListHelper = record helper for TSimpleStringList
public
  function AsNewStringList: TStringList;
  function StringsCommaSeperated: string;
end;

TSimpleDictionary = record
private
  FKeys: array of string;
  FValues: array of string;
  function GetCount: integer; inline;
  function GetKey(index: integer): string;
  function GetValue(const Key: string): string;
  function GetValueByIndex(index: integer): string;
  procedure SetKey(index: integer; const Value: string);
  procedure SetValue(const Key, Value: string);
  procedure SetValueByIndex(index: integer; const Value: string);
public
  function  Add(const Key, Value: string): integer;
  function AsNewStringList: TStringList;
  procedure AddStrings(Strings: TStrings);
  procedure Clear;
  function Clone: TSimpleDictionary;
  function ContainsKey(const Key: string): boolean;
  function IndexOfKey(const Key: string): integer;
  function IndexOfValue(const Value: string): integer;
  property Count: integer read GetCount;
  property Keys[index: integer]: string read GetKey write SetKey;
  property Values[const Name: string]: string read GetValue write SetValue; default;
  property ValueFromIndex[ index: integer ]: string read GetValueByIndex write SetValueByIndex;
end;

TSimpleDictionaryHelper = record helper for TSimpleDictionary
public
  function KeysCommaSeperated: string;
  function SemicolonDelimitedString: string;
  procedure LoadFromSemiColonDelimitedString( Text: string );
  procedure LoadFromStringList( StringList: TStringList );
  function Text: string;
  function ValueOrDefault( const Key: string; const Default: string ): string;
end;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is a simple subclass of Exception to allow Assertions on any Exception derived object. I tried to do this via a helper class, but the 'self' object in a class level helper called on a class does not appear to be a valid reference, so I couldn't find a way to get it to work. Looking through the code to Indy inspired this approach to using Exceptions, I never use the raise statement anymore.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;EBase = class( Exception )
  class procedure Assert( Test: boolean; const Msg: string );
  class procedure Throw( const Msg: string ); virtual;
end;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The last function is &lt;code&gt;function ShowHourglass: IUnknown;&lt;/code&gt; This can be called in a UI function to make a form show a cursor, and when the function exits (normally or after an exception) be sure the cursor is returned to its previous state. The return value (IUnknwon) does not need to be stored, behind the scenes Delphi will store it anyway and make sure the compiler puts a hidden Try ... Finally in at the end to make sure it is cleaned up. The cleaning up of the interface is what we use to reset the cursor.&lt;/p&gt;
&lt;p&gt;Anyway hopefully this of some use to somebody. Happy New Year to everyone, here's to a good year from CodeGear.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2006/10/16/devco-wish-list.html</id><title type="html">Devco Wish List</title><published>2006-10-16T15:31:00+01:00</published><updated>2006-10-16T15:31:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Devco Wish List" href="https://blogs.conceptfirst.com/2006/10/16/devco-wish-list.html" /><content type="html">&lt;p&gt;This is my wishlist for Delphi when the new company running it is planning the next version.  My requests are not large things (except maybe the last one), and are in order of priority.&lt;/p&gt;
&lt;p&gt;Summary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Language construct: return&lt;/li&gt;
&lt;li&gt;. operators on basic types&lt;/li&gt;
&lt;li&gt;Include all source code (midas, dbExpress)&lt;/li&gt;
&lt;li&gt;Ruby&lt;/li&gt;
&lt;/ul&gt;
&lt;!--more--&gt;
&lt;h1 id="return"&gt;Return&lt;/h1&gt;
&lt;p&gt;Readable concise code is something we all try to acheive when coding.  I really miss the 'return' statement from C, because it makes code more concise. I'm bored of writing:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if blah then
begin
  Result := -1;
  exit;
end;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I want to be able to write just&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if blah then Return(-1);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Shorter, and the intention of the statement is much more obvious.
I would imagine it would be fairly easy to add to Delphi as a pseudo function (like 'continue' and 'break').&lt;/p&gt;
&lt;h1 id="dot-opeators"&gt;Dot Opeators&lt;/h1&gt;
&lt;p&gt;I've been doing a fair amount of Ruby recently, as well as some C#. Having the dot operator available on all basic types is lovely, and makes code much more readable. I'd much prefer&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;address.length
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;over&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;length(address)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Less visual clutter, much more OO.
Even if behind the scenes is just syntactic sugar to call the length procedure, that would be a huge win for the readability of Object Pascal in these Object Orientated times.&lt;/p&gt;
&lt;h1 id="source-code"&gt;Source Code&lt;/h1&gt;
&lt;p&gt;At Concept First we currently use the following third party libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Devexpress: Quantim Grid, Quantum Bars&lt;/li&gt;
&lt;li&gt;TChart charting component&lt;/li&gt;
&lt;li&gt;CoreLabs dbExpress driver for SQL Server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will &lt;em&gt;only&lt;/em&gt; buy a component if it comes with full source code.
Why ?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fixing bugs when we find them&lt;/li&gt;
&lt;li&gt;Adding new features&lt;/li&gt;
&lt;li&gt;Tracking their changes under source control&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We've made changes to all of the components we use, and I have all their source code under Subversion, so I can see what they have changed and see what possible impact it could have on my code.&lt;/p&gt;
&lt;p&gt;One of the great strengths of Delphi has always been that the VCL comes with full sources.  The two exceptions are the TClientDataset (midaslib.pas) and the dbExpress drivers.  Its very annoying not to be able to debug into their code.  I know Midas is in C++, but I have the full BDS with C++ support so that is not an issue. I use TClientDataset all over the place, and there are a few easy extensions that could make life much easier.&lt;/p&gt;
&lt;h1 id="ruby"&gt;Ruby&lt;/h1&gt;
&lt;p&gt;As mentioned before, i've been playing around with Ruby and Ruby on Rails recently, and the first thing I had to do with is knock up a quick syntax highlighting editor using the SynEdit control. Having Ruby (and in an ideal world Javascript) in Delphi, with code complete, would be great, something I would be happy to pay for). Web development seems to be the way of the future, and having a nice IDE supporting Ruby could be a big win for Delphi / Devco.&lt;/p&gt;
&lt;h1 id="summary"&gt;Summary&lt;/h1&gt;
&lt;p&gt;I don't know if my use of Delphi is similar to the majority of other users, but my priorities from it are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fast to develop in&lt;/li&gt;
&lt;li&gt;Looks nice (generally easy thanks to DevExpress)&lt;/li&gt;
&lt;li&gt;Source code so I don't get held up by bugs&lt;/li&gt;
&lt;li&gt;Reliable and fast IDE&lt;/li&gt;
&lt;li&gt;Small self contained EXEs, without frameworks to install.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I use delphi for Win32 client applications.  I don't use it for web applications. I now use either Ruby on Rails ( my personal choice ) or Cold Fusion ( trusted in Enterprise environments ).&lt;/p&gt;
&lt;p&gt;I'm not interested in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Delphi.net&lt;/li&gt;
&lt;li&gt;64 Bit support&lt;/li&gt;
&lt;li&gt;Mobile development (be nice if Delphi supported, but such a small % of our work I'd be happy enough to use Visual Studio).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anyway if I could have the requested changes made by the end of next week, that would be great DevCo ;-)&lt;/p&gt;
&lt;p&gt;Pretty Please ?&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2006/10/16/Moved-to-typo.html</id><title type="html">Moved to typo</title><published>2006-10-16T11:14:00+01:00</published><updated>2006-10-16T11:14:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Moved to typo" href="https://blogs.conceptfirst.com/2006/10/16/Moved-to-typo.html" /><content type="html">&lt;h1 id="what"&gt;What&lt;/h1&gt;
&lt;p&gt;I've moved my blog away from Blogger.com and on to a &lt;a href="http://typosphere.org"&gt;Typo&lt;/a&gt; installation hosted ourselves. Typo is a weblog application that runs on top of &lt;a href="http://www.rubyonrails.org/"&gt;Ruby On Rails&lt;/a&gt;, the latest poster child of the open source community. I chose a rails based blog because I've been doing work with rails recently, I understand it, and I really like it (I'm half way through writing up an entry about why I like it).&lt;/p&gt;
&lt;h1 id="why"&gt;Why&lt;/h1&gt;
&lt;p&gt;The main reason is that blogger feed does not include comments people make. I personally read most blogs in an aggregator, and without comments being included, its only one half of the conversation.&lt;/p&gt;
&lt;p&gt;For the last year we have been working on a product for a client that uses &lt;a href="http://en.wikipedia.org/wiki/Queuing_theory"&gt;Queuing Theory&lt;/a&gt; to model how servers operate under load, an area known as 'Capacity Management'. Performance agents log ongoing behaviour on the server, and then the results are plugged into various mathematical formulae that show how the server will work if your email doubles, your websites have 10 times as much load, etc.&lt;/p&gt;
&lt;p&gt;Here at Concept First we have a data centre hosted server that handles email, ftp, and various client's websites.  In the spirit of 'dog-fooding', I've been running monitoring software on our hosted server, and building models of its spare capacity.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;The results are: we have stupid amounts of spare capacity. The server is a 1U rack mounted server from Dell, 1G of RAM, mirrored RAID disks, a single 2Ghz processor.  A fairly low spec machine these days, we bought it about 3 years ago.  And basically it never does anything. I've never seen the CPU loads rise about 5%, same for disk utilisation.  Modern hardware is so fast, that a few web requests and a bit of email are not not giving it much of a workout.&lt;/p&gt;
&lt;p&gt;For that reason, I'm happy to run an interpreted language framework for this blog, because we really do have CPU cycles to waste, and I don't have time to waste.  Having a Rails app running on my server full time will also allow me to understand if it's stable under Windows.&lt;/p&gt;
&lt;h1 id="how"&gt;How&lt;/h1&gt;
&lt;h2 id="style"&gt;Style&lt;/h2&gt;
&lt;p&gt;Typo is easy to install if you've worked with Rails, its just a load of files in a directory. You can choose from 2 built in themes or download lots of others. I've taken one of the built in ones and just changed it to make use of the full screen.&lt;/p&gt;
&lt;p&gt;I &lt;em&gt;hate&lt;/em&gt; fixed width websites.  What is the point of my lovely 1920 wide screen laptop if the site is only 500 pixels wide !!  Adjusting to the display has always been a key strength of HTML.  Too many people are still designing for the web as though it was a piece of paper !&lt;/p&gt;
&lt;p&gt;However the move away from fixed width has caused a small bug to display in IE 6, when using the search box in the top right hand corner.  There is flickering as the AJAX call is done.  However the issue does not occur in IE 7 or Firefox so it is no doubt one of the boatload of IE 6 rendering bugs, so i'm not going to pursuit it. Life is too short.&lt;/p&gt;
&lt;h2 id="database"&gt;Database&lt;/h2&gt;
&lt;p&gt;Typo supports just about every database, but I've just left it running on a simple &lt;a href="http://en.wikipedia.org/wiki/SQLlite"&gt;SQLite&lt;/a&gt; database. Typo caches everything so i don't really need the hassle of putting it in a real RDBMS.  The server is already running SQL Server, MySQL and Oracle XE. Maintaining what apps use what databases, where, is a bit of a headache. A file based database is just easier to manage if you can get away with it.&lt;/p&gt;
&lt;h2 id="webserver"&gt;Webserver&lt;/h2&gt;
&lt;p&gt;Our server is running, or has run in the past, various different websites running on lots of different technologies: ASP, Websnap, Coldfusion, Zope, Php, Perl. To manage all this, we use Apache 2 running on Windows Server 2000. Apache has been good to us.  Its very flexible, well documented, secure, and scalable. It is our Internet facing webserver. It handles SSL, compression (via mod_deflate) and virtual hosting.&lt;/p&gt;
&lt;p&gt;To connect our hosted sites up to the Apache 'gateway' we've tried various things. We've tried Apache modules, ISAPI, &lt;a href="http://www.fastcgi.com/"&gt;FastCGI&lt;/a&gt;, SCGI, mod_php.&lt;/p&gt;
&lt;p&gt;Apache modules / ISAPI: Nice and fast, but too tightly bound.  When Apache versions change a recompile is required.  Restart the server and you lose server state, like current sessions. Bugs can jeopardise the server stability.&lt;/p&gt;
&lt;p&gt;FastCGI: Works well, we have various websnap sites running over FastCGI. However the protocol is complex, binary, and the whole FastCGI protocol is not actively developed any longer.&lt;/p&gt;
&lt;p&gt;SCGI: A simpler version of FastCGI, I've run a couple of Rails sites on SCGI.  The protocol is easier to understand, but its another set of config to learn, and not all technologies support SCGI.&lt;/p&gt;
&lt;p&gt;With this in mind, we now use simple HTTP proxing.  Each different application runs its own webserver on an internal port number, the firewall preventing any access to the outside world.  Apache then uses its mod_proxy settings to pass the request to the applications webserver, before passing it back to the web browser.&lt;/p&gt;
&lt;p&gt;Advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Debugging is simple. Just fire up a copy of &lt;a href="http://www.fiddlertool.com/fiddler/"&gt;Fiddler&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;All applications support SSL, Apache handles it.&lt;/li&gt;
&lt;li&gt;All applications support compression, Apache handles it.&lt;/li&gt;
&lt;li&gt;All application logged in same format, I can use the same tools.&lt;/li&gt;
&lt;li&gt;Apache can use its redirect rules to enforce my rules (e.g. admin in Typo must be secure).&lt;/li&gt;
&lt;li&gt;Upgrading any individual application has no effect on the others, everything is loosly coupled.&lt;/li&gt;
&lt;li&gt;Most importantly: One set of syntax for me to remember.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It all works beautifully.  It's happily proxing to Rails, to web services exposed in Indy components. It's fast, and it 'Just Works', not often you get to say that in the world of computing ...&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2006/05/23/GIS.html</id><title type="html">GIS</title><published>2006-05-23T11:14:00+01:00</published><updated>2006-05-23T11:14:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="GIS" href="https://blogs.conceptfirst.com/2006/05/23/GIS.html" /><content type="html">&lt;p&gt;I'm writing this posting for two reasons. Firstly my company is currently engaged in a project with a client about getting
more of their data onto their intranet based mapping tool, so I've spent the last 3 days researching and getting back up to speed
on the industry.&lt;/p&gt;
&lt;p&gt;Secondly my brother has just got a new job working as sales manager for a company providing GIS data, so I thought an introduction
and overview of the subject might be of use to him. Apologises if I get too technical Mike.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h1 id="geographic-information-systems"&gt;Geographic Information Systems&lt;/h1&gt;
&lt;p&gt;A GIS is a system the stores and displays maps electronically. Its a smart tool that helps us understand the world around us better,
to get our work done more efficiently.
I've been interested in GIS since one of my first jobs where I was in charge of writing a routing and optimising algorithm for
solving a variant of the &lt;a href="http://en.wikipedia.org/wiki/Traveling_salesman_problem"&gt;Travelling Sales Problem&lt;/a&gt;. Essentially our product was in charge of figuring out routes for workman
to get their work down in the most efficient way possible, and send them routes on their mobile devices so they didn't get lost.
It was really interesting work, we worked with providers of GIS data about the road network, and with the UK government for access
to electronic versions of their maps.&lt;/p&gt;
&lt;p&gt;I think part of my interest also comes from travelling. When I first go to a new city, I'm always keen to find a map, to give
me a feel of the layout. I always choose Lonely Planet over Rough Guide, because their maps are better. It was very strange when I
was in Guyana in the Jungle, the only maps we had were from satellite images taken over 10 years ago, at a very low resolution.
Most of the time we only have a vague idea of where we were at any time. Rivercourses flood, move, the tree cover prevents
identification of key features. It made me realise how much we take accurate maps for granted.&lt;/p&gt;
&lt;p&gt;GIS is everywhere at the moment. Tom Tom are advertising their navigation products on TV. Google Local can show me a map of my local
city in the time it takes to click a mouse, and Google Earth can let me zoom in from space to see my parents house, the roof of my
dad's land rover. NASA can let me look at the surface of Venus.&lt;/p&gt;
&lt;h2 id="raster-and-vector"&gt;Raster and Vector&lt;/h2&gt;
&lt;p&gt;The most important division in GIS to understand is the different between Raster and Vector information. Raster information is
pictures, its pixels that show us what our cities look like from space. Its the images that digital cameras give us. Its resolution
dependant. Vector information is mathematical in nature, its descriptions of things in terms of lines, circles, polygons.&lt;/p&gt;
&lt;p&gt;Google earth is predominately raster based, as you zoom in loads in images with more detail.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/GoogleEarth.JPG" alt="Google Earth" /&gt;&lt;/p&gt;
&lt;p&gt;Google Local is vector based, it shows you your local high street as a series of straight lines, it shows you the nearby river as a polygon.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/GoogleLocal.JPG" alt="Google Local" /&gt;&lt;/p&gt;
&lt;p&gt;The real power comes when we use raster and vector together. When we turn on the country boundaries in NASA's &lt;a href="http://worldwind.arc.nasa.gov/"&gt;World Wind&lt;/a&gt;
we seem them overlaid over the raster images of earth:&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/NasaWindwalker.JPG" alt="WindWalker" /&gt;&lt;/p&gt;
&lt;p&gt;Raster information is an approximation to the real world, its pictures of the world. Vectors are mathematical, they are 'idealised'
versions of the world. The mathematical nature of vectors allow us to use maths to answer questions like: &amp;quot;How many roads are there
within 2 miles of the river ?&amp;quot;. Or this more relevant example &amp;quot;Show me all the pubs within 2 miles of where I live&amp;quot; in Mappoint 2004:&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/Mappoint.JPG" alt="Mappoint" /&gt;&lt;/p&gt;
&lt;p&gt;Raster examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pictures of landscapes, from space or from aircraft&lt;/li&gt;
&lt;li&gt;Pictures of clouds&lt;/li&gt;
&lt;li&gt;Infrared pictures showing heat usage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vector examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Countries, Regions, Postal boundaries&lt;/li&gt;
&lt;li&gt;Streets, Motorways, Garages&lt;/li&gt;
&lt;li&gt;Wind speeds, wave heights&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="organisations"&gt;Organisations&lt;/h1&gt;
&lt;h2 id="opengis"&gt;OpenGIS&lt;/h2&gt;
&lt;p&gt;The main organisation dealing with GIS standards appears to be the &amp;quot;Open Geospatial Consortium&amp;quot;, a group of 300 organisation
worldwide. It has prepared various specifications for open standards:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GML: A geographical data format based on XML&lt;/li&gt;
&lt;li&gt;Simple Features (SFSQL): A standard way to store data within standard SQL Databases&lt;/li&gt;
&lt;li&gt;Various web interfaces for providing both vector and raster information in agreed formats (GML)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="companies"&gt;Companies&lt;/h2&gt;
&lt;p&gt;The leaders in the industry for GIS software seem to be &lt;a href="http://www.esri.com/"&gt;ESRI&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/MapInfo"&gt;Mapinfo&lt;/a&gt; and &lt;a href="http://intergraph.com/"&gt;Integraph&lt;/a&gt;.
The two largest data providers are &lt;a href="http://www.navteq.com/"&gt;NAVTEQ&lt;/a&gt;, used by Google maps, and &lt;a href="http://www.teleatlas.com/"&gt;TeleAtlas&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="representation"&gt;Representation&lt;/h1&gt;
&lt;p&gt;An important thing to understand in GIS is that there is no universal 'best' representation for coordinates on Earth. The earth
is not an exact sphere, its not flat, so various different schemes have been invented. Which is used is, as ever, is dependant
on what your trying to achieve.&lt;/p&gt;
&lt;h2 id="longitude-and-latitude"&gt;Longitude and Latitude&lt;/h2&gt;
&lt;p&gt;The standard way of representing points on the earth is obviously using long and lat. Longitude is the lines from the North Pole to
the South Pole, with 0 degrees going through Greenwich, London. Latitude is the lines around the 'waist' of the earth, with 0 degrees
at the equator, + 90 degrees being the north pole.
&lt;img src="/files/LongLat.png" alt="LongLat" /&gt;&lt;/p&gt;
&lt;p&gt;Longitude and Latitude are measured against a known &lt;em&gt;datum&lt;/em&gt;. This is the reference model used, i.e. the mathematical figures used
for calculating the best fit shape of the Earth. The most common currently in use is the WGS84 datum (WGS stands for 'World
Geodetic System'). It is possible to convert from one datum to another, but this can require some quite complex mathematics.&lt;/p&gt;
&lt;h2 id="gps"&gt;GPS&lt;/h2&gt;
&lt;p&gt;Global Positioning System is where a lot of GIS data is coming from. It is a set of satellites flying through space, transmitting
signals allowing the calculation of very accurate position. GPS figures are long/lat figures based on the WGS84 datum.&lt;/p&gt;
&lt;h2 id="grid-references"&gt;Grid References&lt;/h2&gt;
&lt;p&gt;Rather than capture coordinates as spherical coordinates (like long/lat), coordinates can be stored as a reference on a grid.
As the Earth is obviously not flat, this is an approximation, but can be easier to deal with when mapping smaller areas. The UK uses
a grid reference system for its 'Ordnance Survey' (OS) maps. In this coordinate system, points are measured in Eastings and Northings.
This grid is based on a different datum, OSGB36, based on a slightly different ellipsoid representation of the Earth. The 'Helmert'
datum transformation can be used to convert to WGS84, but with an approximate error of 7m (depending on location). The image below
shows where the eastings and northings are measured from. The letters in the grids allow another way of specifying location, called
&lt;em&gt;National Grid References&lt;/em&gt; (&lt;a href="http://en.wikipedia.org/wiki/British_national_grid_reference_system"&gt;NGR&lt;/a&gt;s), with further digits specifying easting and northing offsets within each 100km grid square.
More digits give more accuracy or specify a smaller area. An example of an NGR is 'NN 166 712'. This gives a 100m square area in
Scotland. The good thing about NGS's is that they are useful shorthand to give approximate position, or for capturing an 'area'.&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/OSGridReference.JPG" alt="OS GridRef" /&gt;&lt;/p&gt;
&lt;p&gt;The UK government can provide digital maps of the country in GML, with currently 440 million distinct features taking up 660
Gigabytes of storage. The data is called &lt;a href="http://en.wikipedia.org/wiki/OS_MasterMap"&gt;OS Mastermap&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="formats"&gt;Formats&lt;/h1&gt;
&lt;h2 id="gml-and-svg"&gt;GML and SVG&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Geography_Markup_Language"&gt;GML&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Svg"&gt;SVG&lt;/a&gt; are both XML based standards that are used within GIS. GML stands for &lt;em&gt;Geography Markup Language&lt;/em&gt;, and
is a format designed to hold geographical features, geometry (vector), raster information, as well as units, coordinate
representation systems, and map styles.&lt;/p&gt;
&lt;p&gt;SVG is actually just a generic format for holding vector graphic information, and stands for &lt;em&gt;Scalable Vector Graphics&lt;/em&gt;.
Its like an Open Standard version of Adobe's Flash files, and supports both raster and vector information of any kind, not just
geographic info.
The customer we are doing the GIS work for currently uses SVG for their display of GIS data inside a web browser, using
Adobe's free SVG plugin for Internet Explorer (note: firefox supports a subset of SVG natively now). SVG has well defined Javascript
bindings so its easy to create interactive displays.&lt;/p&gt;
&lt;p&gt;To me GML seems a better storage format and SVG a better display format.&lt;/p&gt;
&lt;h2 id="other"&gt;Other&lt;/h2&gt;
&lt;p&gt;There are various file formats in use within the industry. Although the OpenGIS is pushing GML, most data seems to be available
in either ESRI's shape format, or Mapinfo's standard file format. Both are proprietary, but easy to parse formats that most tools
support.&lt;/p&gt;
&lt;h2 id="databases"&gt;Databases&lt;/h2&gt;
&lt;p&gt;There seems to be a big push to moving 'spatial' capabilities into databases at the moment. This makes sense as really geometry
is just another attribute of an entity. Moving the geometry into database tables allows this data to be kept alongside other
attributes, as well as allowing databases to carry out geospatial queries.&lt;/p&gt;
&lt;p&gt;The market leader in geospatial databases is &lt;a href="http://www.oracle.com/"&gt;Oracle&lt;/a&gt;. All versions of their database support what they call &lt;em&gt;Locator&lt;/em&gt; features.
This allows the storages of complex vectors into tables, as well as support for complex queries (e.g. find me all objects that
lie within the boundary of this polygon, find me there nearest 5 customers to our store). The top end product also has &lt;em&gt;spatial&lt;/em&gt;
features that allow very complex geometric calculations to be done. The nice thing is that the free Oracle Express (10g at the
moment) supports the locator features. IBM's DB2 seems to have some sort of spatial &lt;em&gt;extender&lt;/em&gt; but I couldn't find any information
on the web about it.&lt;/p&gt;
&lt;p&gt;Some of the GIS software companies provide software to help with database storage, like ESRI's ArcSDE, but these are just 'layers'
that sit between software and the database, and are not open formats, tying you into using a particular vendor.&lt;/p&gt;
&lt;p&gt;Two of the open source database engines have recently added spatial features to their engines. Postgres SQL has the addon
&lt;a href="http://postgis.refractions.net/"&gt;PostGIS&lt;/a&gt; that supports the SFSQL specification mentioned above (as does Oracle). &lt;a href="http://dev.mysql.com/doc/refman/5.1/en/spatial-extensions.html"&gt;MySQL&lt;/a&gt; also has spatial extensions based
on the SFSQL spec, but the current version (5.0) seems only to support planar (flat) and not spherical coordinate systems. The
mathematics used for distances, areas, etc. are different for planar and spherical representations.&lt;/p&gt;
&lt;p&gt;It was hoped that Microsoft SQL Server would add some spatial features to the new 2005 release, but this was not the case. There
is however an interesting &lt;a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnsql90/html/TblValFuncSQL.asp"&gt;MSDN article&lt;/a&gt; showing how spatial features can be added to SQL Server, but this does not support
open standards (surprise surprise).&lt;/p&gt;
&lt;h2 id="spatial-indexes"&gt;Spatial Indexes&lt;/h2&gt;
&lt;p&gt;When reading about GIS formats, one of the key issues is how the formats are 'indexed' to make retrieval efficient. Oracle uses
&lt;em&gt;Helical Hyperspatial Codes&lt;/em&gt; (HHCodes), a data structure developed by the Canadian Hydrograph office. Despite the fancy name,
it seems to be a binary tree, dividing each dimension in order. Its designed to support as many dimensions as desired, to an
arbitrary level of detail. The &lt;a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnsql90/html/TblValFuncSQL.asp"&gt;MSDN article&lt;/a&gt; discusses the use of &lt;em&gt;Hierarchical Triangular Meshes&lt;/em&gt;, which is a technique of
covering a globe with a mesh of subdivided triangles. These seems work well for spherical mapping, but does not seem as general
case as HHCodes. PostGIS and MySQL seems to use extensions of standard database indexes, rather than specific spatial indexing.&lt;/p&gt;
&lt;h1 id="summary"&gt;Summary&lt;/h1&gt;
&lt;p&gt;The GIS industry is becoming more and more important, as developers I can see us having to deal with spatial information more and
more. If i get time I'll try and write an article on how to access SFSQL spatial data from within Delphi. For more information
see &lt;a href="http://en.wikipedia.org/wiki/Category:Geographic_Information_Systems"&gt;Wikipedia&lt;/a&gt;'s entry.&lt;/p&gt;
&lt;h1 id="comments-originally-on-blogger.com"&gt;Comments (originally on blogger.com)&lt;/h1&gt;
&lt;p&gt;Paul Ramsey said...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PostGIS and MySQL use R-Tree indexes, which are rather specifically for spatial data (well, any data type which can be
decomposed to a range rectangle). So does Oracle Spatial, for that matter. Space-filling curves, which map multi-dimensional
data to something sortable into a B-Tree are ways of leveraging non-spatial database technology to be more useful for
spatial data. Space-filling techniques tend not to be as balanced as R-Trees, however. The hierarchical grid is the final
trick, and can be quite performant, but needs to be carefully tuned to the characteristics of the data, unlike R-Trees which
automagically work for data of uneven scales.&lt;/p&gt;
&lt;/blockquote&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2006/05/22/Class-RTTI.html</id><title type="html">Class RTTI</title><published>2006-05-22T10:08:00+01:00</published><updated>2006-05-22T10:08:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Class RTTI" href="https://blogs.conceptfirst.com/2006/05/22/Class-RTTI.html" /><content type="html">&lt;p&gt;This post follows up my &lt;a href="/blog/2006/05/11/Interface-RTTI/"&gt;previous&lt;/a&gt; one about RTTI in Delphi, inspired by Hallvard's 2 posts &lt;a href="http://hallvards.blogspot.com/2006/04/published-methods_27.html"&gt;here&lt;/a&gt; and
&lt;a href="http://hallvards.blogspot.com/2006/05/under-hood-of-published-methods.html"&gt;here&lt;/a&gt;, and covers some advanced RTTI features in Delphi that I haven't seen mentioned anywhere else.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h1 id="methodinfo"&gt;$METHODINFO&lt;/h1&gt;
&lt;p&gt;While playing around with Websnap in Delphi, trying to extend some of the objects available for scripting, I
came across the compiler directive METHODINFO.&lt;/p&gt;
&lt;p&gt;The online documentation says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The $METHODINFO switch directive is only effective when runtime type information (RTTI) has been turned on with the
{$TYPEINFO ON} switch. In the {$TYPEINFO ON} state, the $METHODINFO directive controls the generation of more detailed
method descriptors in the RTTI for methods in an interface. Though {$TYPEINFO ON} will cause some RTTI to be generated
for published methods, the level of information is limited. The $METHODINFO directive generates much more detailed
(and much larger) RTTI for methods, which describes how the parameters of the method should be passed on the stack and/or in registers.
There is seldom, if ever, any need for an application to directly use the $METHODINFO compiler switch. The method
information adds considerable size to the executable file, and is not recommended for general use.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My &lt;a href="/blog/2006/05/11/Interface-RTTI/"&gt;previous&lt;/a&gt; article showed this isn't completely accurate, detailed RTTI is available for any Interface which
has $TYPEINFO or $M around it. $METHODINFO seems to affect classes, in particular it will store detailed RTTI information
for not only Published methods, but also Public ones.&lt;/p&gt;
&lt;p&gt;Doing a search for this compiler directive in the delphi win32 source code gives us only 1 instance in WebSnapObjs.pas.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{$METHODINFO ON}
TScriptableObject = class(TObjectDispatch)
private
  FLookupList: TStringList;
  FLookupValues: TInterfaceList;
protected
  FPreferChild: Boolean;
  function DispatchOfName(const AName: string): IDispatch; virtual;
  function FindObject(const AName: string): TObject; virtual;
public
  constructor Create;
  destructor Destroy; override;
  class function DispatchOfObject(const AObject: TObject): IDispatch;
  function GetIDsOfNames(const IID: TGUID; Names: Pointer;
    NameCount: Integer; LocaleID: Integer; DispIDs: Pointer): HRESULT;
    override;
  function Invoke(DispID: Integer; const IID: TGUID; LocaleID: Integer;
    Flags: Word; var Params; VarResult: Pointer; ExcepInfo: Pointer;
    ArgErr: Pointer): HRESULT; override;
end;
{$METHODINFO OFF}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="websnap"&gt;Websnap&lt;/h2&gt;
&lt;p&gt;Websnap is the poor cousin in the web framework world for delphi. Its never had much support, and seems now to be
overshadow by ASP.net and Intraweb. I personally quite like it, although I code my own templates in VBScript or JavaScript
rather than use any of the Design Time webpage design stuff.&lt;/p&gt;
&lt;p&gt;Under the hood, websnap uses the &lt;a href="http://msdn.microsoft.com/scripting/"&gt;ActiveScript&lt;/a&gt; engines provided in Windows. ActiveScript is a scripting host that can support
many different COM based scripting languages, and Windows comes with VBScript and JScript (which is basically JavaScript).
Other ActiveScript lanaguages are avaialbe including &lt;a href="http://www.activestate.com/Products/ActivePython/"&gt;Python&lt;/a&gt; and &lt;a href="http://www.activestate.com/Products/ActivePerl/"&gt;Perl&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The original ASP by Microsoft uses the ActiveScripting engine to do its work. The asp template is turned into a vBScript or
JScript program containing the HTML to output as well as the logic of the page. This is fed into the ActiveScripting engine
and compiled ready for running. The ActiveScripting engine then has 'objects' added to it so the program can do useful work.
The most obvious one is the Response object, but there are others like the Session object, etc. The program is then run and
the page rendered.&lt;/p&gt;
&lt;p&gt;Websnap pages, at least those using a TPageProducer, use this same process to produce HTML pages. The problem for the Delphi
deisgners was how to link arbitary Delphi objects up to the ActiveScripting engine, which uses late bound IDispatch COM for
communication. The IDispatch interface, one of the main underpining of the COM framework in Windows, uses a single call,
&lt;em&gt;Invoke&lt;/em&gt; for all method calls. This is where $METHODINFO comes it, the rich method RTTI is provided to allow a single procedure
entry, Invoke, to call arbitary Delphi methods.&lt;/p&gt;
&lt;p&gt;The VBScript or Javascript script running in the scripting of the websnap page needs to talk to Delphi objects (e.g. Page,
Session), and it uses this Rich RTTI to acheive this. You can see the websnap objects that are exposed to the script, have a look in
WebSnapObjs.pas, where TResponseObj, TProducerObj, etc.&lt;/p&gt;
&lt;p&gt;The unit ObjAuto contains the code and header for retrieving the RTTI information using the following function:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function GetMethodInfo(Instance: TObject; const MethodName: ShortString): PMethodInfoHeader;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In turn, the base class of TScriptableObject (marked with $METHODINFO) uses the RTTI to find methods, and call them, at run time.&lt;/p&gt;
&lt;h2 id="objauto.pas"&gt;ObjAuto.pas&lt;/h2&gt;
&lt;p&gt;This contains the code to search for a method's RTTI. Looking at GetMethodInfo, you can see it uses the system.pas vmtMethodTable
offset to get hold the method table for the class. It then uses a search to find the correct entry. It also contains the code that
allows an arbitary call to an object supporting RTTI to jump to the correct routine:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function ObjectInvoke(Instance: TObject; MethodHeader: PMethodInfoHeader;
  const ParamIndexes: array of Integer; const Params: array of Variant): Variant;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see you just pass it parameters and variants, and it packages them into the correct types and does the call. The source
code to this call shows all the complexity of packaging up all the parameters according different conventions, etc. This is ultimately
how VBScript objects call methods on Delphi objects inside Websnap.&lt;/p&gt;
&lt;h2 id="detailedrtti.pas"&gt;DetailedRTTI.pas&lt;/h2&gt;
&lt;p&gt;While playing with the metadata, I coded a few &lt;a href="/blog/2006/05/08/class-helpers-good-or-bad/"&gt;helper classes&lt;/a&gt; to aid exploration. You can download the &lt;a href="/files/DetailedRTTI.pas"&gt;code&lt;/a&gt; if you want to
have somewhere to start. Just calling .RTTIMethodsAsString() on any object to get a list of its methods and their parameters. Its a
bit rough and ready but you're welcome to use it for whatever.&lt;/p&gt;
&lt;h1 id="summary"&gt;Summary&lt;/h1&gt;
&lt;p&gt;This article, and the &lt;a href="/blog/2006/05/11/Interface-RTTI/"&gt;previous&lt;/a&gt; one have shown that rich metadata for methods is available in Delphi, with supporting routines
for accessing it. Interface metadata allows the VCL to support SOAP, multiple methods multiplexed to a single call. The rich class
metadata allows the VCL to support a single function automatically being routed to other methods, allowing Websnap to
expose objects to COM IDispatch automatically.&lt;/p&gt;
&lt;h1 id="comments-originally-on-blogger.com"&gt;Comments (originally on blogger.com)&lt;/h1&gt;
&lt;p&gt;Hallvard Vassbotn said...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Great posts, David!&lt;/p&gt;
&lt;p&gt;I reference them &lt;a href="http://hallvards.blogspot.com/2006/05/david-glassborow-on-extended-rtti.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2006/05/11/Interface-RTTI.html</id><title type="html">Interface RTTI</title><published>2006-05-11T10:08:00+01:00</published><updated>2006-05-11T10:08:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Interface RTTI" href="https://blogs.conceptfirst.com/2006/05/11/Interface-RTTI.html" /><content type="html">&lt;p&gt;Reading an &lt;a href="http://hallvards.blogspot.com/2006/04/published-methods_27.html"&gt;article&lt;/a&gt; and its &lt;a href="http://hallvards.blogspot.com/2006/05/under-hood-of-published-methods.html"&gt;follow up&lt;/a&gt; by Hallvard about RTTI inspired me to put together a couple of posts about two
related areas of RTTI in Delphi. In particular one of the comments on Hallvard's blog about using this RTTI to call
objects in some late bound fashion. This post and the next cover some of the advanced RTTI that I haven't seen covered
in other places. This post covers some of the possibilities for Interface metadata, and the next one will contain
details about richer &lt;a href="/blog/2006/05/22/Class-RTTI/"&gt;class RTTI&lt;/a&gt; for methods.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h1 id="interface-metadata"&gt;Interface Metadata&lt;/h1&gt;
&lt;p&gt;Delphi actually has richer metadata support for methods in an Interface that in a normal class. It looks like this was added
to support the SOAP features of the VCL. I'm not sure which version of Delphi it was added so your mileage may
vary if your not using 2006.&lt;/p&gt;
&lt;h2 id="iinvokable"&gt;IInvokable&lt;/h2&gt;
&lt;p&gt;To use SOAP, you use a WDSL file to specify the method calls, parameters, etc.
If you import a WSDL in Delphi, you will notice that all Interfaces in the generated file will be derived from IInvokable.
A quick peak in the System unit will show that IInvokable is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{$M+}
  IInvokable = interface(IInterface)
  end;
{$M-}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I.e. just a standard interface, but with RTTI metadata compiled in.&lt;/p&gt;
&lt;p&gt;Looking at the help in BDS 2006 for {$TYPEINFO ON} mentions this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note:
The IInvokable interface defined in the System unit is declared in the {$M+} state, so any interface derived
from IInvokable will have RTTI generated. The routines in the IntfInfo unit can be used to retrieved the RTTI.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="intfinfo.pas"&gt;IntfInfo.pas&lt;/h2&gt;
&lt;p&gt;The main procedure of interest in IntIfnfo is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;procedure GetIntfMetaData(Info: PTypeInfo; var IntfMD: TIntfMetaData; IncludeAllAncMethods: Boolean = False);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will give us a series of records describing the methods on the interface and the parameters needed for these interfaces, as
well as the unit it was defined within, the ancestor Interface and the interface's GUID. All the names are available. both
function / procedures and the names of their parameters. Calling this procedure with an interface not having RTTI will
raise an exception, calling it with a class's typeinfo will just cause an a/v :-)&lt;/p&gt;
&lt;p&gt;When doing SOAP calls, the developer just uses the defined interface like a normal interface.
Behind the scenes, Delphi packages up the parameters and sends them via a SOAP envelope to the remote server.
How Delphi does this shows us some of the potential of this RTTI in Delphi, and respect for the &lt;em&gt;Voodoo&lt;/em&gt; that is TRIO.&lt;/p&gt;
&lt;h2 id="rio.pas"&gt;RIO.pas&lt;/h2&gt;
&lt;p&gt;Located in the soap folder of Delphi's source code, RIO.pas contains the class TRIO. TRIO is an object that represents
a remote object, presumably it stands for Remote Interfaced Object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When an application casts a TRIO descendant to a registered invokable interface, it dynamically generates
an in-memory method table, providing an implementation to that invokable interface.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Looking at the source for TRIO, I've come to the conclusion that:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MyRioObject as IMyInvokableInterface
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Will cause the TRio object to&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get the meta data for IMyInvokableInterface (from a registry InvRegistry object defined in InvokeRegistry.pas)&lt;/li&gt;
&lt;li&gt;Allocate memory for a vtable for the interface&lt;/li&gt;
&lt;li&gt;Allocate memory for 'stub' routines, marks it as containing executable code&lt;/li&gt;
&lt;li&gt;Writes machine code stubs that takes the parameters and packages them up, then calls TRIO.Generic&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is a very crude representation I knocked up in Visio:&lt;/p&gt;
&lt;p&gt;&lt;img src="/files/InterfaceRTTI.gif" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;When you then make a call on the 'generated' interface, Delphi calls the vtable, the vtables holds the address of the
generated machine code. The generated machine code pushes the parameters then calls the Generic function. This packages
up the parameters, and then uses a SOAP call to call the remote service. The return is then packaged up and returned
in a similar way, back through the generated stub. If you are interested in how the actual machine code
is generated (taking into account the 5 different calling conventions, etc.) take a look at TRIO.GenVTable function.&lt;/p&gt;
&lt;p&gt;I don't know which of the Delphi team wrote this code, but its very very impressive.&lt;/p&gt;
&lt;p&gt;Anyway I hope this has given you a feel for some of the advanced metadata available with Interfaces. The RIO
approach would allow you to write Interface proxies of any Interface with metadata, for security, logging and indeed other
forms of RPC remoting. Let me know if anybody succeeds in such a thing !&lt;/p&gt;
&lt;p&gt;My followup article on &lt;a href="/blog/2006/05/22/Class-RTTI/"&gt;class RTTI&lt;/a&gt;.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2006/05/08/class-helpers-good-or-bad.html</id><title type="html">Class Helpers: Good or Bad ?</title><published>2006-05-08T23:08:00+01:00</published><updated>2006-05-08T23:08:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Class Helpers: Good or Bad ?" href="https://blogs.conceptfirst.com/2006/05/08/class-helpers-good-or-bad.html" /><content type="html">&lt;p&gt;One of the things I love about the latest versions of Delphi is the compiler changes, originally made for .Net, that
are being rolled back into Win32 code. I like finally having procedures in records, and I love class helpers.&lt;/p&gt;
&lt;h1 id="class-helpers"&gt;Class Helpers&lt;/h1&gt;
&lt;p&gt;Helper classes were introduced in Delphi 8 as a way of binding the VCL to the .Net framework. To quote the Delphi
help: &amp;quot;Class helpers are a way to extend a class without using inheritance.
A class helper simply introduces a wider scope for the compiler to use when resolving identifiers.&amp;quot;&lt;/p&gt;
&lt;p&gt;Very simply, they allow you to add your own code to existing objects without requiring the source code or recompiling.
The new code only has public access to the original object, so it cannot access private or protected data.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;A simple example from my library code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;TStreamHelper = class helper for TStream
public
  function AsString: string;
  procedure WriteString( const Text: string );
  procedure WriteStringAndLineBreak( const Text: string );
end;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I got bored of writing the same code for writing a string to a stream, so I put it into a class helper, and because
TStream is a base class, it works for TFileStreams, TBlobStreams, whatever.&lt;/p&gt;
&lt;p&gt;Really a class helper is a compiler trick, behind the scenes it is just functions operating on the class, but it doesn't polute
the name space, and works with intellisense. I find myself using them more and more. The other day I was writing some code to
do a gradient fill for a custom background. Very quickly the code became a helper function on the TCanvas object.
Some more examples from my company's library code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;TCanvasHelper =  class helper for TCanvas
  procedure FillGradient( Bounds: TRect; StartColour, EndColour: TColor; IsHorizontal: boolean );
end;

TListHelper = class helper for TList
  procedure FreeSelfAndContainedObjects;
end;

TDatasetHelper = class helper for TDataSet
public
  procedure InsertIntoStrings( Strings: TStrings; NameField: string; IndexField: string = '' );
  function HaveFieldsChanged: boolean;
  procedure PostIfEditing;
end;

TFieldHelper = class helper for TField
public
  function HasChanged: boolean;
end;

TTreeNodesHelper = class helper for TTreeNodes
public
  procedure ExpandToLevel( Level: integer );
  function FindOrCreateNode( NodePath: string ): TTreeNode;
end;

TRectHelper = record helper for TRect
  function ContainsPoint( Point: TPoint ): boolean;
end;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: the last example shows that, at least in BDS 2006, you can also write helpers for records.&lt;/p&gt;
&lt;h2 id="bad-design"&gt;Bad Design&lt;/h2&gt;
&lt;p&gt;Reading the rest of the Borland help on class helpers, you come to this statement:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Class helpers provide a way to extend a class, but they should not be viewed as a design tool to be used
when developing new code. They should be used solely for their intended purpose, which is language and
platform RTL binding.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don't agree with this, they are far more useful than just a trick for &amp;quot;language and platform RTL binding&amp;quot;&lt;/p&gt;
&lt;h1 id="humane-interfaces"&gt;Humane Interfaces&lt;/h1&gt;
&lt;p&gt;Recently I was reading some content on &lt;a href="http://www.martinfowler.com/bliki/"&gt;Martin Fowler&lt;/a&gt;'s website, a site
that always has an interesting perspective on software development. One of his articles that struck a
cord was on &amp;quot;Humane vs Minimalist&amp;quot; interfaces.&lt;/p&gt;
&lt;p&gt;To briefly summarise his &lt;a href="http://www.martinfowler.com/bliki/HumaneInterface.html"&gt;article&lt;/a&gt;, he talks about the
different attitude between Ruby developers, who favour rich easy to use interfaces, compared to the Java
crowd who tend to favour minimal interfaces. The example he gives is of a list class and how to get the last item:&lt;/p&gt;
&lt;p&gt;Java:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aList.get(aList.size -1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ruby:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;anArray.last
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Ruby interface has 78 methods, the Java one 25. However the Ruby one is clearly more readable, with less visual clutter.&lt;/p&gt;
&lt;p&gt;At Concept First our 2 overriding rules for writing code are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It should be as human readable as possible&lt;/li&gt;
&lt;li&gt;It should be as concise as possible&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For this reason I favour the humane interfaces. However writing minimalist interfaces I feel leads to more concise design and less
easier to test. It seems to me that class helpers give us the best of both worlds. Objects can be designed with minimal
interfaces, making them quicker to develop and easier to test. We can then use class helpers to make the
interfaces more humane, more readable, easier to use. The fact that class helpers can only use public
methods of the object also makes sure the minimalist interface is complete.&lt;/p&gt;
&lt;p&gt;I started off using Class Helpers to add library code to VCL objects, for library code. I now find
myself using them as a design decision, putting minimalist interfaces on my objects, and adding all the
helper and nicety functions as helper objects. As Marco Cantu
&lt;a href="http://blog.marcocantu.com/blog/Delphi_past_its_peak.html"&gt;points out&lt;/a&gt;, it looks like the next version of C#
will support a similar feature. Personally I feel its another great feature of Delphi giving us a competitive advantage
when developing with Object Pascal.&lt;/p&gt;
&lt;p&gt;So what does everybody else think, design feature or abomination ?&lt;/p&gt;
&lt;h1 id="comments-originally-on-blogger.com"&gt;Comments (originally on blogger.com)&lt;/h1&gt;
&lt;p&gt;Anonymous said...&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Well, Anders Hejlsberg would seem to agree with you that they, or at least the idea of being able to extend a class, is a good thing to expose as part of the language.
See &lt;a href="http://channel9.msdn.com/Showpost.aspx?postid=114680"&gt;http://channel9.msdn.com/Showpost.aspx?postid=114680&lt;/a&gt; and &lt;a href="http://mtaulty.com/blog/(zu0cer45karubu55u0cqsa45)/archive/2006/03/20/9271.aspx"&gt;http://mtaulty.com/blog/(zu0cer45karubu55u0cqsa45)/archive/2006/03/20/9271.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Specificl look at Extension methods. AKA Class Helpers in Delphi.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Anonymous said...&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Brilliant article&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Daniel said...&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi, David!
Great article!
I personally use class helpers to hide implementation details of some code on the server side of my app, while still publishing classes to the client side. Specially in our SOAP application, when we want our clients to use the same class definition as in the server.
Looking forward to seeing your article about REST x SOAP...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;TOndrej said...&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;My gut feeling is that what the help says about class helpers is correct, ie. they shouldn't be a part of new design.
For various reasons, already written classes become sealed, ie. their interface cannot be changed anymore. An ideally written class would provide all the functionality specified in the design phase, and expose enough information for descendants to extend it as new requirements come. In the real world, however, classes often hide too much or, if you like, do not expose enough. That's where I think class helpers are a big help, they're a way out if you've locked yourself in.
Your argument for writing minimal classes and, at the same time, more humane class helpers seems to be based on the fact that minimal classes are easier to test and debug. I agree, but don't you have to test and debug the class helpers, too? Isn't the effort the same or even greater after all? Why not write, test and debug the full class right from the beginning?&lt;/p&gt;
&lt;p&gt;The above is just my 2c; I haven't used class helpers yet at all. Perhaps I have to play with them a bit and get a better feeling about them first.
P.S. A very nice blog so far, cheers!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;David Glassborow said...&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Tondrej I think my point is that testing a class helper is much much easier because it can only affect the public interface, not the internals of the class. If your written the minimalist class properly, its very unlikely the class helper can break it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;TOndrej said...&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;OK, that's an interesting point. I guess I'll take a closer look at those helper beasts ;-)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Anonymous said...&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The limitations seem (no private field access) seem to prevent a lot of goodies.
What probably happens is that if you use type X, all imported units in the interface are searched for helper_for_x, since this is the only way to avoid to scan &lt;em&gt;all&lt;/em&gt; units in the entire project for helpers to compile a unit.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Jolyon Smith said...&lt;/p&gt;
&lt;p&gt;An old post that needs a sensible comment.&lt;/p&gt;
&lt;p&gt;Class Helpers are to be considered &amp;quot;bad&amp;quot; when used in an application because they were never designed for general purpose use, and exist solely to workaround a design problem in the VCL that ONLY existed for the language (or more accurately, the VCL) implementors, not those who implement USING the VCL.&lt;/p&gt;
&lt;p&gt;The biggest problem with class helpers, from the p.o.v of using them in your own applications, is the fact that only ONE class helper for a given class may be in scope at any time.&lt;/p&gt;
&lt;p&gt;That is, if you have two helpers in scope, only ONE will be recognised by the compiler. You won't get any warnings or even hints about any other helpers that may be hidden.&lt;/p&gt;
&lt;p&gt;So you can happily code away with your lovingly crafted helper, then you start using some other unit that contains someone else's helper for the same class and suddenly your helper is no longer &amp;quot;visible&amp;quot;.&lt;/p&gt;
&lt;p&gt;Of course, since helpers are used - as designed - within the VCL, adding helper classes for VCL classes is most likely to experience this problem.&lt;/p&gt;
&lt;p&gt;You may be able to fudge your way out of it by fiddling with the order of your units in the uses list. Or perhaps moving the &amp;quot;help point&amp;quot; of one or other helper up or down the ancestry of the helped class (assuming and hoping that that does not in turn create a conflict with some OTHER helper out there).&lt;/p&gt;
&lt;p&gt;If you can't then you are stuck, because you can't even use qualification to forcibly reference the &amp;quot;hidden&amp;quot; helper.&lt;/p&gt;
&lt;p&gt;TMyHelper(obj).MyMethod;&lt;/p&gt;
&lt;p&gt;Won't compile if TMyHelper is &amp;quot;hidden&amp;quot; by some other helper for the class of obj. In fact, it doesn't work period, because TMyHelper does not exist as a type, so you can't even use this style to aid clarity with bona-fide helpers at all.&lt;/p&gt;
&lt;p&gt;There is of course an alternative, which is not only immune from all these problems, but is also actually more flexible/powerful and works even in older versions of Delphi.&lt;/p&gt;
&lt;p&gt;That is, to use explicit helper-style sub-classes, the old fashioned way, where you adhere to the rules for helpers (only accessing public methods, not adding instance data etc etc) but use explicit hard-casting to &amp;quot;add&amp;quot; your methods to an instance.&lt;/p&gt;
&lt;p&gt;TMyHelper = class(TForm)
procedure MyMethod;
end;&lt;/p&gt;
&lt;p&gt;TMyHelper(form).MyMethod;&lt;/p&gt;
&lt;p&gt;This is &amp;quot;better&amp;quot; because:&lt;/p&gt;
&lt;ol type="a"&gt;
&lt;li&gt;&lt;p&gt;it IS explicit. No magic. No wondering where these undocumented methods came from (for the uninitiated, unaware of the existence of your &amp;quot;helper&amp;quot; class is some obscure unit somewhere)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;it is unbreakable. As long as you stick to the safety rules for implementing the helper itself, nobody else's helper can &amp;quot;hide&amp;quot; yours or interfere with how it works.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;it is more powerful and more flexible - the &amp;quot;helper&amp;quot; subclass is able to access protected AND public members.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;One arguable downside is the need to explicitly cast in order to invoke your helpers functionality.&lt;/p&gt;
&lt;p&gt;But that could equally be argued to be a further ADVANTAGE, since it makes it clear that an instance is being treated as something that it strictly isn't.&lt;/p&gt;
&lt;p&gt;True, it may involve a little more typing than using a bona-fide helper.&lt;/p&gt;
&lt;p&gt;So which you prefer will come down to whether you place more value on saving a few milliseconds of typing time vs potentially hours or even days of refactoring if (more likely &amp;quot;when&amp;quot;) you get a &amp;quot;collision&amp;quot; among your helpers.&lt;/p&gt;
&lt;p&gt;Anonymous said...&lt;/p&gt;
&lt;p&gt;@Jolyon Smith: Nice comment!&lt;/p&gt;
&lt;p&gt;I think it would be worth addressing Jolyon's points in the article so they don't get lost in the comments.&lt;/p&gt;
</content></entry><entry><id>https://blogs.conceptfirst.com/2006/05/07/introduction.html</id><title type="html">Why Blog</title><published>2006-05-07T22:52:00+01:00</published><updated>2006-05-07T22:52:00+01:00</updated><author><name>David Glassborow</name></author><link rel="alternate" type="text/html" title="Why Blog" href="https://blogs.conceptfirst.com/2006/05/07/introduction.html" /><content type="html">&lt;p&gt;Because:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There are lots of technical details about delphi I've explored that may be useful to other developers.
I've learnt loads from the Delphi community and I'd like to return the favour&lt;/li&gt;
&lt;li&gt;There are lots of design 'discussions' (i.e. arguments) i've had with other developers,
especially my busness partner, and I'm interested in the opinions of other people on the issues&lt;/li&gt;
&lt;li&gt;To quote Paul Graham: &amp;quot;Expressing ideas helps to form them&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I've been meaning to write a blog, and host it, for a while, but haven't got around to writing a web application to host it (although I'm still looking at doing it in &lt;a href="http://www.rubyonrails.org/"&gt;RoR&lt;/a&gt; just to learn what all the fuss is about. So I've decided to host this on blogger for the moment, and maybe move it at some future point.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;I'm going to write all the posts in &lt;a href="http://en.wikipedia.org/wiki/Markdown"&gt;markdown&lt;/a&gt; because thats the format we use
internally at work, and its very easy to work with. If anybody knows any groovy tools that can markup delphi code into a web blogger friendly format, I'd really appreciate it.&lt;/p&gt;
&lt;p&gt;In development, my prefered tool is &lt;a href="http://www.borland.com/delphi"&gt;Delphi&lt;/a&gt;, for lots of reasons. The greatest thing about it for
me is that it comes with all the source code. My coding quality has improved more from reading the Delphi sources than anything
else.&lt;/p&gt;
&lt;p&gt;I live in the south west of England, in the UK. I live here because of the quality of life, especially being close tp the coast. In my spare time I love surfing, running, travelling, and going on expeditions to far away place like Guyana and West Papua.&lt;/p&gt;
&lt;h1 id="concept-first"&gt;Concept First&lt;/h1&gt;
&lt;p&gt;I work as a technical consultant for a small software company I started with my business partner, Dan Jones, called
&lt;a href="http://www.conceptfirst.com"&gt;Concept First Ltd&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We are in our fifth year of trading, and do various types of work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Business Process mapping and development&lt;/li&gt;
&lt;li&gt;Web sites in ASP, Coldfusion, Websnap&lt;/li&gt;
&lt;li&gt;Application development in Delphi (by choice), VB6, VB.Net, C# (by request)&lt;/li&gt;
&lt;li&gt;Anything else that pays the bills !&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A large number of our projects are integrating data in Enterprise environments (i.e. lots of random technologies chosen for reasons other than technical, fighting with vendors to get access to data, dispairing at money being wasted left right and centre ...)&lt;/p&gt;
&lt;h2 id="technologies"&gt;Technologies&lt;/h2&gt;
&lt;p&gt;At Concept First we like and use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Delphi&lt;/li&gt;
&lt;li&gt;DevExpress grids&lt;/li&gt;
&lt;li&gt;Apache 2&lt;/li&gt;
&lt;li&gt;Subversion&lt;/li&gt;
&lt;li&gt;SQL Server (especially MSDE/Express editions)&lt;/li&gt;
&lt;li&gt;Anything to do with geospatial data and mapping&lt;/li&gt;
&lt;li&gt;Mind mapping software for writing specs&lt;/li&gt;
&lt;li&gt;Bulleted lists ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We dislike:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Analyists who can't develop&lt;/li&gt;
&lt;li&gt;Developers who can't analyse&lt;/li&gt;
&lt;li&gt;The new hoops you have to jump through to be a Microsoft Certified Partner company&lt;/li&gt;
&lt;li&gt;Tying ourselves to Microsoft technologies&lt;/li&gt;
&lt;li&gt;How bad most enterprise software is&lt;/li&gt;
&lt;li&gt;How fickle the software industry is for the latest silver bullet&lt;/li&gt;
&lt;li&gt;Fixed width webpages and tables for layout&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="articles"&gt;Articles&lt;/h1&gt;
&lt;p&gt;I've got various ideas I want to write up into posts, to be done when I get time/motiviation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rich RTTI in delphi objects&lt;/li&gt;
&lt;li&gt;Delphi's class helpers, good or bad OO design ?&lt;/li&gt;
&lt;li&gt;Websnap: good and bad points, how to extend it&lt;/li&gt;
&lt;li&gt;Websnap and FastCGI&lt;/li&gt;
&lt;li&gt;Null Object pattern in databases vs. explicit NULLs&lt;/li&gt;
&lt;li&gt;Case sensitive languages and why they must be destroyed&lt;/li&gt;
&lt;li&gt;Functionality vs Complexity - Time vs Money vs Quality&lt;/li&gt;
&lt;li&gt;Business Logic in databases&lt;/li&gt;
&lt;li&gt;REST vs SOAP&lt;/li&gt;
&lt;li&gt;Tips to prevent premature optimisation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also need to convince my business partner, Dan, to sort out a blog, coz I'm bored of him preaching to the converted.&lt;/p&gt;
&lt;p&gt;Expect some rantings on &lt;em&gt;'semanctic markup in html'&lt;/em&gt; asap :-)&lt;/p&gt;
</content></entry></feed>